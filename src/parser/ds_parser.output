Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 319 conflicts: 1 shift/reduce
State 416 conflicts: 1 shift/reduce
State 520 conflicts: 2 shift/reduce
State 522 conflicts: 2 shift/reduce
State 629 conflicts: 1 shift/reduce
State 825 conflicts: 1 shift/reduce
State 1053 conflicts: 1 shift/reduce
State 1170 conflicts: 1 shift/reduce
State 1449 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 metadata_argument_list: '@' annotation_argument
  104                       | metadata_argument_list '@' annotation_argument

  105 annotation_declaration_name: name_in_namespace
  106                            | "require"
  107                            | "private"

  108 annotation_declaration_basic: annotation_declaration_name
  109                             | annotation_declaration_name '(' annotation_argument_list ')'

  110 annotation_declaration: annotation_declaration_basic
  111                       | '!' annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration
  115                       | '(' annotation_declaration ')'
  116                       | "|>" annotation_declaration

  117 annotation_list: annotation_declaration
  118                | annotation_list ',' annotation_declaration

  119 optional_annotation_list: %empty
  120                         | '[' annotation_list ']'

  121 optional_function_argument_list: %empty
  122                                | '(' ')'
  123                                | '(' function_argument_list ')'

  124 optional_function_type: %empty
  125                       | ':' type_declaration

  126 function_name: "name"
  127              | "operator" '!'
  128              | "operator" '~'
  129              | "operator" "+="
  130              | "operator" "-="
  131              | "operator" "*="
  132              | "operator" "/="
  133              | "operator" "%="
  134              | "operator" "&="
  135              | "operator" "|="
  136              | "operator" "^="
  137              | "operator" "&&="
  138              | "operator" "||="
  139              | "operator" "^^="
  140              | "operator" "&&"
  141              | "operator" "||"
  142              | "operator" "^^"
  143              | "operator" '+'
  144              | "operator" '-'
  145              | "operator" '*'
  146              | "operator" '/'
  147              | "operator" '%'
  148              | "operator" '<'
  149              | "operator" '>'
  150              | "operator" ".."
  151              | "operator" "=="
  152              | "operator" "!="
  153              | "operator" "<="
  154              | "operator" ">="
  155              | "operator" '&'
  156              | "operator" '|'
  157              | "operator" '^'
  158              | "++" "operator"
  159              | "--" "operator"
  160              | "operator" "++"
  161              | "operator" "--"
  162              | "operator" "<<"
  163              | "operator" ">>"
  164              | "operator" "<<="
  165              | "operator" ">>="
  166              | "operator" "<<<"
  167              | "operator" ">>>"
  168              | "operator" "<<<="
  169              | "operator" ">>>="
  170              | "operator" '[' ']'
  171              | "operator" "?[" ']'
  172              | "operator" '.'
  173              | "operator" "?."
  174              | "operator" '.' "name"
  175              | "operator" '.' "name" ":="
  176              | "operator" "?." "name"
  177              | "operator" ":="
  178              | "operator" "delete"
  179              | "operator" "??"
  180              | "operator" "is"
  181              | "operator" "as"
  182              | "operator" "is" "name"
  183              | "operator" "as" "name"
  184              | "operator" '?' "as"
  185              | "operator" '?' "as" "name"
  186              | "bool"
  187              | "string"
  188              | "int"
  189              | "int2"
  190              | "int3"
  191              | "int4"
  192              | "uint"
  193              | "uint2"
  194              | "uint3"
  195              | "uint4"
  196              | "float"
  197              | "float2"
  198              | "float3"
  199              | "float4"
  200              | "range"
  201              | "urange"
  202              | "range64"
  203              | "urange64"
  204              | "int64"
  205              | "uint64"
  206              | "double"
  207              | "int8"
  208              | "uint8"
  209              | "int16"
  210              | "uint16"

  211 global_function_declaration: optional_annotation_list "def" function_declaration

  212 optional_public_or_private_function: %empty
  213                                    | "private"
  214                                    | "public"

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type

  216 $@6: %empty

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  218 expression_block: "begin of code block" expressions "end of code block"
  219                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  220 expr_call_pipe: expr expr_full_block_assumed_piped
  221               | expression_keyword expr_full_block_assumed_piped
  222               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  223 expression_any: "end of expression"
  224               | expr_pipe
  225               | expr_keyword
  226               | expr_assign_pipe
  227               | expr_assign "end of expression"
  228               | expression_delete "end of expression"
  229               | expression_let
  230               | expression_while_loop
  231               | expression_unsafe
  232               | expression_with
  233               | expression_with_alias
  234               | expression_for_loop
  235               | expression_break "end of expression"
  236               | expression_continue "end of expression"
  237               | expression_return
  238               | expression_yield
  239               | expression_if_then_else
  240               | expression_try_catch
  241               | expression_label "end of expression"
  242               | expression_goto "end of expression"
  243               | "pass" "end of expression"

  244 expressions: %empty
  245            | expressions expression_any
  246            | expressions error

  247 expr_keyword: "keyword" expr expression_block

  248 optional_expr_list: %empty
  249                   | expr_list optional_comma

  250 optional_expr_list_in_braces: %empty
  251                             | '(' optional_expr_list optional_comma ')'

  252 optional_expr_map_tuple_list: %empty
  253                             | expr_map_tuple_list optional_comma

  254 type_declaration_no_options_list: type_declaration
  255                                 | type_declaration_no_options_list "end of expression" type_declaration

  256 $@7: %empty

  257 $@8: %empty

  258 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  259 $@9: %empty

  260 $@10: %empty

  261 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  262 expr_pipe: expr_assign " <|" expr_block
  263          | "@ <|" expr_block
  264          | "@@ <|" expr_block
  265          | "$ <|" expr_block
  266          | expr_call_pipe

  267 name_in_namespace: "name"
  268                  | "name" "::" "name"
  269                  | "::" "name"

  270 expression_delete: "delete" expr
  271                  | "delete" "explicit" expr

  272 $@11: %empty

  273 $@12: %empty

  274 new_type_declaration: '<' $@11 type_declaration '>' $@12
  275                     | structure_type_declaration

  276 expr_new: "new" new_type_declaration
  277         | "new" new_type_declaration '(' use_initializer ')'
  278         | "new" new_type_declaration '(' expr_list ')'
  279         | "new" new_type_declaration '(' make_struct_single ')'
  280         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  281         | "new" make_decl

  282 expression_break: "break"

  283 expression_continue: "continue"

  284 expression_return_no_pipe: "return"
  285                          | "return" expr_list
  286                          | "return" "<-" expr_list

  287 expression_return: expression_return_no_pipe "end of expression"
  288                  | "return" expr_pipe
  289                  | "return" "<-" expr_pipe

  290 expression_yield_no_pipe: "yield" expr
  291                         | "yield" "<-" expr

  292 expression_yield: expression_yield_no_pipe "end of expression"
  293                 | "yield" expr_pipe
  294                 | "yield" "<-" expr_pipe

  295 expression_try_catch: "try" expression_block "recover" expression_block

  296 kwd_let_var_or_nothing: "let"
  297                       | "var"
  298                       | %empty

  299 kwd_let: "let"
  300        | "var"

  301 optional_in_scope: "inscope"
  302                  | %empty

  303 tuple_expansion: "name"
  304                | tuple_expansion ',' "name"

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  306                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  307                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  308                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  309 expression_let: kwd_let optional_in_scope let_variable_declaration
  310               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  311 $@13: %empty

  312 $@14: %empty

  313 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  314 $@15: %empty

  315 $@16: %empty

  316 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  317 $@17: %empty

  318 $@18: %empty

  319 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  320 $@19: %empty

  321 $@20: %empty

  322 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  323 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  324               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  325               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'
  326               | "typeinfo" name_in_namespace '(' expr ')'
  327               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  329 expr_list: expr
  330          | expr_list ',' expr

  331 block_or_simple_block: expression_block
  332                      | "=>" expr
  333                      | "=>" "<-" expr

  334 block_or_lambda: '$'
  335                | '@'
  336                | '@' '@'

  337 capture_entry: '&' "name"
  338              | '=' "name"
  339              | "<-" "name"
  340              | ":=" "name"

  341 capture_list: capture_entry
  342             | capture_list ',' capture_entry

  343 optional_capture_list: %empty
  344                      | "[[" capture_list ']' ']'

  345 expr_block: expression_block
  346           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  348 $@21: %empty

  349 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  350 expr_numeric_const: "integer constant"
  351                   | "unsigned integer constant"
  352                   | "long integer constant"
  353                   | "unsigned long integer constant"
  354                   | "unsigned int8 constant"
  355                   | "floating point constant"
  356                   | "double constant"

  357 expr_assign: expr
  358            | expr '=' expr
  359            | expr "<-" expr
  360            | expr ":=" expr
  361            | expr "&=" expr
  362            | expr "|=" expr
  363            | expr "^=" expr
  364            | expr "&&=" expr
  365            | expr "||=" expr
  366            | expr "^^=" expr
  367            | expr "+=" expr
  368            | expr "-=" expr
  369            | expr "*=" expr
  370            | expr "/=" expr
  371            | expr "%=" expr
  372            | expr "<<=" expr
  373            | expr ">>=" expr
  374            | expr "<<<=" expr
  375            | expr ">>>=" expr

  376 expr_assign_pipe_right: "@ <|" expr_block
  377                       | "@@ <|" expr_block
  378                       | "$ <|" expr_block
  379                       | expr_call_pipe

  380 expr_assign_pipe: expr '=' expr_assign_pipe_right
  381                 | expr "<-" expr_assign_pipe_right
  382                 | expr "&=" expr_assign_pipe_right
  383                 | expr "|=" expr_assign_pipe_right
  384                 | expr "^=" expr_assign_pipe_right
  385                 | expr "&&=" expr_assign_pipe_right
  386                 | expr "||=" expr_assign_pipe_right
  387                 | expr "^^=" expr_assign_pipe_right
  388                 | expr "+=" expr_assign_pipe_right
  389                 | expr "-=" expr_assign_pipe_right
  390                 | expr "*=" expr_assign_pipe_right
  391                 | expr "/=" expr_assign_pipe_right
  392                 | expr "%=" expr_assign_pipe_right
  393                 | expr "<<=" expr_assign_pipe_right
  394                 | expr ">>=" expr_assign_pipe_right
  395                 | expr "<<<=" expr_assign_pipe_right
  396                 | expr ">>>=" expr_assign_pipe_right

  397 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  398                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  399 expr_method_call: expr "->" "name" '(' ')'
  400                 | expr "->" "name" '(' expr_list ')'

  401 func_addr_name: name_in_namespace
  402               | "$i" '(' expr ')'

  403 func_addr_expr: '@' '@' func_addr_name

  404 $@22: %empty

  405 $@23: %empty

  406 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  407 $@24: %empty

  408 $@25: %empty

  409 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  410 expr_field: expr '.' "name"
  411           | expr '.' '.' "name"
  412           | expr '.' "name" '(' ')'
  413           | expr '.' "name" '(' expr_list ')'

  414 $@26: %empty

  415 $@27: %empty

  416 expr_field: expr '.' $@26 error $@27

  417 expr_call: name_in_namespace '(' ')'
  418          | name_in_namespace '(' make_struct_single ')'
  419          | name_in_namespace '(' expr_list ')'
  420          | basic_type_declaration '(' ')'
  421          | basic_type_declaration '(' expr_list ')'

  422 expr: "null"
  423     | name_in_namespace
  424     | expr_numeric_const
  425     | expr_reader
  426     | string_builder
  427     | make_decl
  428     | "true"
  429     | "false"
  430     | expr_field
  431     | expr_mtag
  432     | '!' expr
  433     | '~' expr
  434     | '+' expr
  435     | '-' expr
  436     | expr "<<" expr
  437     | expr ">>" expr
  438     | expr "<<<" expr
  439     | expr ">>>" expr
  440     | expr '+' expr
  441     | expr '-' expr
  442     | expr '*' expr
  443     | expr '/' expr
  444     | expr '%' expr
  445     | expr '<' expr
  446     | expr '>' expr
  447     | expr "==" expr
  448     | expr "!=" expr
  449     | expr "<=" expr
  450     | expr ">=" expr
  451     | expr '&' expr
  452     | expr '|' expr
  453     | expr '^' expr
  454     | expr "&&" expr
  455     | expr "||" expr
  456     | expr "^^" expr
  457     | expr ".." expr
  458     | "++" expr
  459     | "--" expr
  460     | expr "++"
  461     | expr "--"
  462     | '(' expr_list optional_comma ')'
  463     | expr '[' expr ']'
  464     | expr '.' '[' expr ']'
  465     | expr "?[" expr ']'
  466     | expr '.' "?[" expr ']'
  467     | expr "?." "name"
  468     | expr '.' "?." "name"
  469     | func_addr_expr
  470     | expr_call
  471     | '*' expr
  472     | "deref" '(' expr ')'
  473     | "addr" '(' expr ')'
  474     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  475     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  476     | expr "??" expr
  477     | expr '?' expr ':' expr

  478 $@28: %empty

  479 $@29: %empty

  480 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr "is" basic_type_declaration
  482     | expr "is" "name"
  483     | expr "as" "name"

  484 $@30: %empty

  485 $@31: %empty

  486 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr "as" basic_type_declaration
  488     | expr '?' "as" "name"

  489 $@32: %empty

  490 $@33: %empty

  491 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr '?' "as" basic_type_declaration
  493     | expr_type_info
  494     | expr_type_decl
  495     | expr_cast
  496     | expr_new
  497     | expr_method_call
  498     | expr_named_call
  499     | expr_full_block
  500     | expr "<|" expr
  501     | expr "|>" expr
  502     | expr "|>" basic_type_declaration
  503     | name_in_namespace "name"
  504     | "unsafe" '(' expr ')'
  505     | expression_keyword

  506 expr_mtag: "$$" '(' expr ')'
  507          | "$i" '(' expr ')'
  508          | "$v" '(' expr ')'
  509          | "$b" '(' expr ')'
  510          | "$a" '(' expr ')'
  511          | "..."
  512          | "$c" '(' expr ')' '(' ')'
  513          | "$c" '(' expr ')' '(' expr_list ')'
  514          | expr '.' "$f" '(' expr ')'
  515          | expr "?." "$f" '(' expr ')'
  516          | expr '.' '.' "$f" '(' expr ')'
  517          | expr '.' "?." "$f" '(' expr ')'
  518          | expr "as" "$f" '(' expr ')'
  519          | expr '?' "as" "$f" '(' expr ')'
  520          | expr "is" "$f" '(' expr ')'
  521          | '@' '@' "$c" '(' expr ')'

  522 optional_field_annotation: %empty
  523                          | "[[" annotation_argument_list ']' ']'
  524                          | metadata_argument_list

  525 optional_override: %empty
  526                  | "override"
  527                  | "sealed"

  528 optional_constant: %empty
  529                  | "const"

  530 optional_public_or_private_member_variable: %empty
  531                                           | "public"
  532                                           | "private"

  533 optional_static_member_variable: %empty
  534                                | "static"

  535 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  536 struct_variable_declaration_list: %empty

  537 $@34: %empty

  538 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  539 $@35: %empty

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  541 $@36: %empty

  542 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  543                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  544 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  545                              | "$a" '(' expr ')'

  546 function_argument_list: function_argument_declaration
  547                       | function_argument_list "end of expression" function_argument_declaration

  548 tuple_type: type_declaration
  549           | "name" ':' type_declaration

  550 tuple_type_list: tuple_type
  551                | tuple_type_list "end of expression" tuple_type

  552 tuple_alias_type_list: %empty
  553                      | tuple_alias_type_list "end of expression"
  554                      | tuple_alias_type_list tuple_type "end of expression"

  555 variant_type: "name" ':' type_declaration

  556 variant_type_list: variant_type
  557                  | variant_type_list "end of expression" variant_type

  558 variant_alias_type_list: %empty
  559                        | variant_alias_type_list "end of expression"
  560                        | variant_alias_type_list variant_type "end of expression"

  561 copy_or_move: '='
  562             | "<-"

  563 variable_declaration: variable_name_with_pos_list
  564                     | variable_name_with_pos_list '&'
  565                     | variable_name_with_pos_list ':' type_declaration
  566                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  567                     | variable_name_with_pos_list copy_or_move expr
  568                     | variable_name_with_pos_list copy_or_move expr_pipe

  569 copy_or_move_or_clone: '='
  570                      | "<-"
  571                      | ":="

  572 optional_ref: %empty
  573             | '&'

  574 let_variable_name_with_pos_list: "name"
  575                                | "$i" '(' expr ')'
  576                                | "name" "aka" "name"
  577                                | let_variable_name_with_pos_list ',' "name"
  578                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  579 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  580                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  581                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  582                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  583                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  584 global_variable_declaration_list: %empty

  585 $@37: %empty

  586 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  587 optional_shared: %empty
  588                | "shared"

  589 optional_public_or_private_variable: %empty
  590                                    | "private"
  591                                    | "public"

  592 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  593 $@38: %empty

  594 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  595 enum_list: %empty
  596          | enum_list "end of expression"
  597          | enum_list "name" "end of expression"
  598          | enum_list "name" '=' expr "end of expression"

  599 optional_public_or_private_alias: %empty
  600                                 | "private"
  601                                 | "public"

  602 $@39: %empty

  603 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  604 alias_list: single_alias "end of expression"
  605           | alias_list single_alias "end of expression"

  606 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  607 $@40: %empty

  608 alias_declaration: "typedef" $@40 single_alias "end of expression"

  609 optional_public_or_private_enum: %empty
  610                                | "private"
  611                                | "public"

  612 enum_name: "name"

  613 $@41: %empty

  614 $@42: %empty

  615 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  616 $@43: %empty

  617 $@44: %empty

  618 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  619 optional_structure_parent: %empty
  620                          | ':' name_in_namespace

  621 optional_sealed: %empty
  622                | "sealed"

  623 structure_name: optional_sealed "name" optional_structure_parent

  624 class_or_struct: "class"
  625                | "struct"

  626 optional_public_or_private_structure: %empty
  627                                     | "private"
  628                                     | "public"

  629 optional_struct_variable_declaration_list: %empty
  630                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  631 $@45: %empty

  632 $@46: %empty

  633 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  634 variable_name_with_pos_list: "name"
  635                            | "$i" '(' expr ')'
  636                            | "name" "aka" "name"
  637                            | variable_name_with_pos_list ',' "name"
  638                            | variable_name_with_pos_list ',' "name" "aka" "name"

  639 basic_type_declaration: "bool"
  640                       | "string"
  641                       | "int"
  642                       | "int8"
  643                       | "int16"
  644                       | "int64"
  645                       | "int2"
  646                       | "int3"
  647                       | "int4"
  648                       | "uint"
  649                       | "uint8"
  650                       | "uint16"
  651                       | "uint64"
  652                       | "uint2"
  653                       | "uint3"
  654                       | "uint4"
  655                       | "float"
  656                       | "float2"
  657                       | "float3"
  658                       | "float4"
  659                       | "void"
  660                       | "range"
  661                       | "urange"
  662                       | "range64"
  663                       | "urange64"
  664                       | "double"
  665                       | "bitfield"

  666 enum_basic_type_declaration: "int"
  667                            | "int8"
  668                            | "int16"
  669                            | "uint"
  670                            | "uint8"
  671                            | "uint16"
  672                            | "int64"
  673                            | "uint64"

  674 structure_type_declaration: name_in_namespace

  675 auto_type_declaration: "auto"
  676                      | "auto" '(' "name" ')'
  677                      | "$t" '(' expr ')'

  678 bitfield_bits: "name"
  679              | bitfield_bits "end of expression" "name"

  680 bitfield_alias_bits: %empty
  681                    | bitfield_alias_bits "end of expression"
  682                    | bitfield_alias_bits "name" "end of expression"

  683 $@47: %empty

  684 $@48: %empty

  685 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  686 table_type_pair: type_declaration
  687                | type_declaration "end of expression" type_declaration

  688 dim_list: '[' expr ']'
  689         | dim_list '[' expr ']'

  690 type_declaration_no_options: basic_type_declaration
  691                            | auto_type_declaration
  692                            | bitfield_type_declaration
  693                            | structure_type_declaration
  694                            | type_declaration_no_options dim_list
  695                            | type_declaration_no_options '[' ']'

  696 $@49: %empty

  697 $@50: %empty

  698 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  699                            | "typedecl" '(' expr ')'
  700                            | '$' name_in_namespace '(' optional_expr_list ')'

  701 $@51: %empty

  702 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  703                            | type_declaration_no_options '-' '[' ']'
  704                            | type_declaration_no_options "explicit"
  705                            | type_declaration_no_options "const"
  706                            | type_declaration_no_options '-' "const"
  707                            | type_declaration_no_options '&'
  708                            | type_declaration_no_options '-' '&'
  709                            | type_declaration_no_options '#'
  710                            | type_declaration_no_options "implicit"
  711                            | type_declaration_no_options '-' '#'
  712                            | type_declaration_no_options "==" "const"
  713                            | type_declaration_no_options "==" '&'
  714                            | type_declaration_no_options '?'

  715 $@52: %empty

  716 $@53: %empty

  717 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  718                            | type_declaration_no_options "??"

  719 $@54: %empty

  720 $@55: %empty

  721 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  722 $@56: %empty

  723 $@57: %empty

  724 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  725 $@58: %empty

  726 $@59: %empty

  727 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  728                            | "block"

  729 $@60: %empty

  730 $@61: %empty

  731 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  732 $@62: %empty

  733 $@63: %empty

  734 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  735                            | "function"

  736 $@64: %empty

  737 $@65: %empty

  738 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  739 $@66: %empty

  740 $@67: %empty

  741 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  742                            | "lambda"

  743 $@68: %empty

  744 $@69: %empty

  745 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  746 $@70: %empty

  747 $@71: %empty

  748 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  749 $@72: %empty

  750 $@73: %empty

  751 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  752 $@74: %empty

  753 $@75: %empty

  754 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  755 type_declaration: type_declaration_no_options
  756                 | type_declaration '|' type_declaration_no_options
  757                 | type_declaration '|' '#'

  758 $@76: %empty

  759 $@77: %empty

  760 $@78: %empty

  761 $@79: %empty

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  763 $@80: %empty

  764 $@81: %empty

  765 $@82: %empty

  766 $@83: %empty

  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  768 $@84: %empty

  769 $@85: %empty

  770 $@86: %empty

  771 $@87: %empty

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  773 make_decl: make_struct_decl
  774          | make_dim_decl
  775          | make_table_decl
  776          | array_comprehension
  777          | make_tuple_call

  778 make_struct_fields: "name" copy_or_move expr
  779                   | "name" ":=" expr
  780                   | make_struct_fields ',' "name" copy_or_move expr
  781                   | make_struct_fields ',' "name" ":=" expr
  782                   | "$f" '(' expr ')' copy_or_move expr
  783                   | "$f" '(' expr ')' ":=" expr
  784                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  786 make_variant_dim: make_struct_fields

  787 make_struct_single: make_struct_fields

  788 make_struct_dim: make_struct_fields
  789                | make_struct_dim "end of expression" make_struct_fields

  790 make_struct_dim_list: '(' make_struct_fields ')'
  791                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  792 make_struct_dim_decl: make_struct_fields
  793                     | make_struct_dim_list optional_comma

  794 optional_block: %empty
  795               | "where" expr_block

  796 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  797                                    | ";}}"

  798 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  799                                    | ";}]"

  800 optional_trailing_semicolon_sqr_sqr: ']' ']'
  801                                    | ";]]"

  802 optional_trailing_delim_sqr_sqr: ']' ']'
  803                                | ";]]"
  804                                | ",]]"

  805 optional_trailing_delim_cur_sqr: "end of code block" ']'
  806                                | ";}]"
  807                                | ",}]"

  808 use_initializer: %empty
  809                | "uninitialized"

  810 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  811                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  812                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  813                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  814                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  815                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  816 $@88: %empty

  817 $@89: %empty

  818 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')'

  819 $@90: %empty

  820 $@91: %empty

  821 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')'

  822 $@92: %empty

  823 $@93: %empty

  824 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

  825 $@94: %empty

  826 $@95: %empty

  827 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  828 make_tuple: expr
  829           | expr "=>" expr
  830           | make_tuple ',' expr

  831 make_map_tuple: expr "=>" expr
  832               | expr

  833 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  834 $@96: %empty

  835 $@97: %empty

  836 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')'

  837 make_dim: make_tuple
  838         | make_dim "end of expression" make_tuple

  839 make_dim_decl: '[' expr_list optional_comma ']'
  840              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  841              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  842 $@98: %empty

  843 $@99: %empty

  844 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'

  845 $@100: %empty

  846 $@101: %empty

  847 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'

  848 $@102: %empty

  849 $@103: %empty

  850 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  851              | "array" '(' expr_list optional_comma ')'

  852 $@104: %empty

  853 $@105: %empty

  854 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'
  855              | "fixed_array" '(' expr_list optional_comma ')'

  856 $@106: %empty

  857 $@107: %empty

  858 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  859 make_table: make_map_tuple
  860           | make_table "end of expression" make_map_tuple

  861 expr_map_tuple_list: make_map_tuple
  862                    | expr_map_tuple_list ',' make_map_tuple

  863 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  864                | "{{" make_table optional_trailing_semicolon_cur_cur
  865                | "table" '(' optional_expr_map_tuple_list ')'
  866                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  867                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  868 array_comprehension_where: %empty
  869                          | "end of expression" "where" expr

  870 optional_comma: %empty
  871               | ','

  872 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  873                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  874                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  875                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  876                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  877                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 111 127 432
    '#' (35) 709 711 757
    '$' (36) 20 334 700 702
    '%' (37) 35 42 147 444
    '&' (38) 155 337 451 564 573 707 708 713
    '(' (40) 100 109 115 122 123 251 277 278 279 280 306 308 323 324 325 326 327 328 397 398 399 400 402 412 413 417 418 419 420 421 462 472 473 474 475 504 506 507 508 509 510 512 513 514 515 516 517 518 519 520 521 545 575 635 676 677 699 700 702 782 783 784 785 790 791 812 813 815 818 821 824 833 836 844 847 850 851 854 855 858 865 866 867
    ')' (41) 100 109 115 122 123 251 277 278 279 280 306 308 323 324 325 326 327 328 397 398 399 400 402 412 413 417 418 419 420 421 462 472 473 474 475 504 506 507 508 509 510 512 513 514 515 516 517 518 519 520 521 545 575 635 676 677 699 700 702 782 783 784 785 790 791 812 813 815 818 821 824 833 836 844 847 850 851 854 855 858 865 866 867
    '*' (42) 145 442 471
    '+' (43) 143 434 440
    ',' (44) 51 89 102 118 304 330 342 398 577 578 637 638 780 781 784 785 791 830 862 871
    '-' (45) 144 435 441 703 706 708 711
    '.' (46) 43 172 174 175 410 411 412 413 416 464 466 468 514 516 517
    '/' (47) 44 146 443
    ':' (58) 53 54 125 305 306 477 549 555 565 566 579 580 581 618 620
    "end of expression" (59) 15 16 74 223 227 228 235 236 241 242 243 255 287 292 305 306 307 308 325 328 538 540 543 547 551 553 554 557 559 560 579 580 582 596 597 598 604 605 608 679 681 682 687 789 838 860 867 869 872 873 874 875 876 877
    '<' (60) 148 222 258 261 274 313 316 319 322 324 325 327 328 406 409 445 474 475 480 486 491 685 698 702 717 721 724 727 731 734 738 741 745 748 751 754 818 821 824 827 836 844 847 850 854 858 866 867
    '=' (61) 81 93 94 95 96 97 98 100 338 358 380 561 569 598 603
    '>' (62) 149 222 258 261 274 313 316 319 322 324 325 327 328 406 409 446 474 475 480 486 491 685 698 702 717 721 724 727 731 734 738 741 745 748 751 754 818 821 824 827 836 844 847 850 854 858 866 867
    '?' (63) 184 185 477 488 491 492 519 714
    '@' (64) 103 104 335 336 403 406 409 521
    '[' (91) 120 170 397 398 463 464 543 688 689 695 703 839 872 873
    ']' (93) 120 170 171 305 307 344 397 398 463 464 465 466 523 543 688 689 695 703 798 800 802 805 839 872 873 874 875
    '^' (94) 157 453
    "begin of code block" (123) 218 219 592 606 615 618 630 762 767 772 863 876
    '|' (124) 156 452 756 757
    "end of code block" (125) 218 219 592 606 615 618 630 762 767 772 796 798 805 863 875 876 877
    '~' (126) 128 433
    error (256) 246 416
    "lexer error" (258)
    "struct" (259) 625 818 844
    "class" (260) 624 821
    "let" (261) 296 299
    "def" (262) 211 540 542
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 872 873 874 875 876 877
    "recover" (268) 295
    "true" (269) 86 97 428
    "false" (270) 87 98 429
    "new" (271) 276 277 278 279 280 281
    "typeinfo" (272) 323 324 325 326 327 328
    "type" (273) 91 322 480 486 491 698
    "in" (274) 76 92 872 873 874 875 876 877
    "is" (275) 180 182 480 481 482 520
    "as" (276) 46 181 183 184 185 483 486 487 488 491 492 518 519
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 721 844 847 850 851 854
    "return" (280) 284 285 286 288 289
    "null" (281) 422
    "break" (282) 282
    "try" (283) 295
    "options" (284) 36
    "table" (285) 724 865 866 867
    "expect" (286) 49
    "const" (287) 529 705 706 712
    "require" (288) 37 106
    "operator" (289) 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
    "enum" (290) 615 618
    "finally" (291) 219
    "delete" (292) 178 270 271
    "deref" (293) 472
    "typedef" (294) 606 608
    "typedecl" (295) 699
    "with" (296) 79
    "aka" (297) 576 578 636 638
    "assume" (298) 81
    "cast" (299) 313
    "override" (300) 526
    "abstract" (301) 540
    "upcast" (302) 316
    "iterator" (303) 727 873
    "var" (304) 297 300
    "addr" (305) 473
    "continue" (306) 283
    "where" (307) 795 869
    "pass" (308) 243
    "reinterpret" (309) 319
    "module" (310) 22
    "public" (311) 18 48 214 531 591 601 611 628
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 710
    "explicit" (315) 271 704
    "shared" (316) 588
    "private" (317) 19 107 213 532 590 600 610 627
    "smart_ptr" (318) 717
    "unsafe" (319) 77 504
    "inscope" (320) 301
    "static" (321) 534
    "fixed_array" (322) 855 858
    "default" (323) 827
    "uninitialized" (324) 280 809
    "bool" (325) 186 639
    "void" (326) 659
    "string" (327) 187 640
    "auto" (328) 675 676
    "int" (329) 188 641 666
    "int2" (330) 189 645
    "int3" (331) 190 646
    "int4" (332) 191 647
    "uint" (333) 192 648 669
    "bitfield" (334) 665 685 772
    "uint2" (335) 193 652
    "uint3" (336) 194 653
    "uint4" (337) 195 654
    "float" (338) 196 655
    "float2" (339) 197 656
    "float3" (340) 198 657
    "float4" (341) 199 658
    "range" (342) 200 660
    "urange" (343) 201 661
    "range64" (344) 202 662
    "urange64" (345) 203 663
    "block" (346) 728 731 734
    "int64" (347) 204 644 672
    "uint64" (348) 205 651 673
    "double" (349) 206 664
    "function" (350) 735 738 741
    "lambda" (351) 742 745 748
    "int8" (352) 207 642 667
    "uint8" (353) 208 649 670
    "int16" (354) 209 643 668
    "uint16" (355) 210 650 671
    "tuple" (356) 751 762 833 836 847
    "variant" (357) 754 767 824 850
    "generator" (358) 222 474 475
    "yield" (359) 290 291 293 294
    "sealed" (360) 527 622
    "+=" (361) 129 367 388
    "-=" (362) 130 368 389
    "/=" (363) 132 370 391
    "*=" (364) 131 369 390
    "%=" (365) 133 371 392
    "&=" (366) 134 361 382
    "|=" (367) 135 362 383
    "^=" (368) 136 363 384
    "<<" (369) 162 436
    ">>" (370) 163 437
    "++" (371) 158 160 458 460
    "--" (372) 159 161 459 461
    "<=" (373) 153 449
    "<<=" (374) 164 372 393
    ">>=" (375) 165 373 394
    ">=" (376) 154 450
    "==" (377) 151 447 712 713
    "!=" (378) 152 448
    "->" (379) 399 400
    "<-" (380) 286 289 291 294 333 339 359 381 562 570
    "??" (381) 179 476 718
    "?." (382) 173 176 467 468 515 517
    "?[" (383) 171 465 466
    "<|" (384) 500
    " <|" (385) 262
    "$ <|" (386) 265 378
    "@ <|" (387) 263 376
    "@@ <|" (388) 264 377
    "|>" (389) 116 501 502
    ":=" (390) 175 177 340 360 571 779 781 783 785
    "<<<" (391) 166 438
    ">>>" (392) 167 439
    "<<<=" (393) 168 374 395
    ">>>=" (394) 169 375 396
    "=>" (395) 332 333 829 831
    "::" (396) 268 269
    "&&" (397) 112 140 454
    "||" (398) 113 141 455
    "^^" (399) 114 142 456
    "&&=" (400) 137 364 385
    "||=" (401) 138 365 386
    "^^=" (402) 139 366 387
    ".." (403) 150 457
    "$$" (404) 506
    "$i" (405) 402 507 575 635
    "$v" (406) 508
    "$b" (407) 509
    "$a" (408) 510 545
    "$t" (409) 677
    "$c" (410) 512 513 521
    "$f" (411) 514 515 516 517 518 519 520 782 783 784 785
    "..." (412) 511
    "[[" (413) 305 307 344 523 810 811 812 813 840 874
    "[{" (414) 814 815 841 875
    "{{" (415) 864 877
    "integer constant" <i> (416) 52 53 54 55 84 95 350
    "long integer constant" <i64> (417) 352
    "unsigned integer constant" <ui> (418) 351
    "unsigned long integer constant" <ui64> (419) 353
    "unsigned int8 constant" <ui> (420) 354
    "floating point constant" <fd> (421) 85 96 355
    "double constant" <d> (422) 356
    "name" <s> (423) 21 38 46 81 83 90 94 126 174 175 176 182 183 185 267 268 269 303 304 324 325 327 328 337 338 339 340 399 400 410 411 412 413 467 468 482 483 488 503 549 555 574 576 577 578 597 598 603 612 623 634 636 637 638 676 678 679 682 762 767 772 778 779 780 781
    "keyword" <s> (424) 39 247 258
    "type function" <s> (425) 40 261
    "start of the string" (426) 27 31
    STRING_CHARACTER <ch> (427) 23 25 32 33
    STRING_CHARACTER_ESC (428) 24 26
    "end of the string" (429) 27 31
    "{" (430) 30
    "}" (431) 30
    "end of failed eader macro" (432)
    ";}}" (433) 797
    ";}]" (434) 799 806
    ";]]" (435) 801 803
    ",]]" (436) 804
    ",}]" (437) 807
    UNARY_MINUS (438)
    UNARY_PLUS (439)
    PRE_INC (440)
    PRE_DEC (441)
    POST_INC (442)
    POST_DEC (443)
    DEREF (444)


Nonterminals, with rules where they appear

    $accept (217)
        on left: 0
    program (218)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (219)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (220)
        on left: 17 18 19
        on right: 22
    module_name <s> (221)
        on left: 20 21
        on right: 22
    module_declaration (222)
        on left: 22
        on right: 2
    character_sequence <s> (223)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (224)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (225)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (226)
        on left: 31
        on right: 426
    reader_character_sequence (227)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (228)
        on left: 35
        on right: 16 425
    $@1 (229)
        on left: 34
        on right: 35
    options_declaration (230)
        on left: 36
        on right: 9
    require_declaration (231)
        on left: 37
        on right: 8
    keyword_or_name <s> (232)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (233)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (234)
        on left: 45 46
        on right: 37
    is_public_module <b> (235)
        on left: 47 48
        on right: 45 46
    expect_declaration (236)
        on left: 49
        on right: 7
    expect_list (237)
        on left: 50 51
        on right: 49 51
    expect_error (238)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (239)
        on left: 54
        on right: 241
    expression_goto <pExpression> (240)
        on left: 55 56
        on right: 242
    elif_or_static_elif <b> (241)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (242)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (243)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (244)
        on left: 64 66
        on right: 74
    $@2 (245)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (246)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (247)
        on left: 72 74
        on right: 239
    $@3 (248)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (249)
        on left: 76
        on right: 234
    $@4 (250)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (251)
        on left: 77
        on right: 231
    expression_while_loop <pExpression> (252)
        on left: 78
        on right: 230
    expression_with <pExpression> (253)
        on left: 79
        on right: 232
    expression_with_alias <pExpression> (254)
        on left: 81
        on right: 233
    $@5 (255)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (256)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (257)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (258)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (259)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102 103 104
    annotation_argument_list <aaList> (260)
        on left: 101 102
        on right: 36 102 109 523
    metadata_argument_list <aaList> (261)
        on left: 103 104
        on right: 104 524
    annotation_declaration_name <s> (262)
        on left: 105 106 107
        on right: 108 109
    annotation_declaration_basic <fa> (263)
        on left: 108 109
        on right: 110
    annotation_declaration <fa> (264)
        on left: 110 111 112 113 114 115 116
        on right: 111 112 113 114 115 116 117 118
    annotation_list <faList> (265)
        on left: 117 118
        on right: 118 120 543
    optional_annotation_list <faList> (266)
        on left: 119 120
        on right: 211 346 347 349 540 542 615 618 633
    optional_function_argument_list <pVarDeclList> (267)
        on left: 121 122 123
        on right: 215 346 347 349 409 734 741 748
    optional_function_type <pTypeDecl> (268)
        on left: 124 125
        on right: 215 346 347 349 409 734 741 748
    function_name <s> (269)
        on left: 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
        on right: 215
    global_function_declaration (270)
        on left: 211
        on right: 6
    optional_public_or_private_function <b> (271)
        on left: 212 213 214
        on right: 217
    function_declaration_header <pFuncDecl> (272)
        on left: 215
        on right: 217 540 542
    function_declaration <pFuncDecl> (273)
        on left: 217
        on right: 211
    $@6 (274)
        on left: 216
        on right: 217
    expression_block <pExpression> (275)
        on left: 218 219
        on right: 60 61 72 76 77 78 79 217 247 295 331 345 349 542
    expr_call_pipe <pExpression> (276)
        on left: 220 221 222
        on right: 266 379
    expression_any <pExpression> (277)
        on left: 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243
        on right: 245
    expressions <pExpression> (278)
        on left: 244 245 246
        on right: 218 219 245 246
    expr_keyword <pExpression> (279)
        on left: 247
        on right: 225
    optional_expr_list <pExpression> (280)
        on left: 248 249
        on right: 251 700 702 854
    optional_expr_list_in_braces <pExpression> (281)
        on left: 250 251
        on right: 261
    optional_expr_map_tuple_list <pExpression> (282)
        on left: 252 253
        on right: 865 866 867
    type_declaration_no_options_list <pTypeDeclList> (283)
        on left: 254 255
        on right: 255 258 261 702
    expression_keyword <pExpression> (284)
        on left: 258 261
        on right: 221 505
    $@7 (285)
        on left: 256
        on right: 258
    $@8 (286)
        on left: 257
        on right: 258
    $@9 (287)
        on left: 259
        on right: 261
    $@10 (288)
        on left: 260
        on right: 261
    expr_pipe <pExpression> (289)
        on left: 262 263 264 265 266
        on right: 224 288 289 293 294 568 581 583
    name_in_namespace <s> (290)
        on left: 267 268 269
        on right: 35 105 323 324 325 326 327 328 397 398 401 417 418 419 423 503 620 674 700 702
    expression_delete <pExpression> (291)
        on left: 270 271
        on right: 228
    new_type_declaration <pTypeDecl> (292)
        on left: 274 275
        on right: 276 277 278 279 280
    $@11 (293)
        on left: 272
        on right: 274
    $@12 (294)
        on left: 273
        on right: 274
    expr_new <pExpression> (295)
        on left: 276 277 278 279 280 281
        on right: 496
    expression_break <pExpression> (296)
        on left: 282
        on right: 70 235
    expression_continue <pExpression> (297)
        on left: 283
        on right: 71 236
    expression_return_no_pipe <pExpression> (298)
        on left: 284 285 286
        on right: 68 287
    expression_return <pExpression> (299)
        on left: 287 288 289
        on right: 237
    expression_yield_no_pipe <pExpression> (300)
        on left: 290 291
        on right: 69 292
    expression_yield <pExpression> (301)
        on left: 292 293 294
        on right: 238
    expression_try_catch <pExpression> (302)
        on left: 295
        on right: 240
    kwd_let_var_or_nothing <b> (303)
        on left: 296 297 298
        on right: 544
    kwd_let <b> (304)
        on left: 299 300
        on right: 309 310 592 594
    optional_in_scope <b> (305)
        on left: 301 302
        on right: 309 310
    tuple_expansion <pNameList> (306)
        on left: 303 304
        on right: 304 305 306 307 308
    tuple_expansion_variable_declaration <pVarDecl> (307)
        on left: 305 306 307 308
        on right: 310
    expression_let <pExpression> (308)
        on left: 309 310
        on right: 229
    expr_cast <pExpression> (309)
        on left: 313 316 319
        on right: 495
    $@13 (310)
        on left: 311
        on right: 313
    $@14 (311)
        on left: 312
        on right: 313
    $@15 (312)
        on left: 314
        on right: 316
    $@16 (313)
        on left: 315
        on right: 316
    $@17 (314)
        on left: 317
        on right: 319
    $@18 (315)
        on left: 318
        on right: 319
    expr_type_decl <pExpression> (316)
        on left: 322
        on right: 494
    $@19 (317)
        on left: 320
        on right: 322
    $@20 (318)
        on left: 321
        on right: 322
    expr_type_info <pExpression> (319)
        on left: 323 324 325 326 327 328
        on right: 493
    expr_list <pExpression> (320)
        on left: 329 330
        on right: 76 249 278 285 286 330 398 400 413 419 421 462 513 833 839 851 855 858 872 873 874 875 876 877
    block_or_simple_block <pExpression> (321)
        on left: 331 332 333
        on right: 346 347
    block_or_lambda <i> (322)
        on left: 334 335 336
        on right: 346 347 349
    capture_entry <pCapt> (323)
        on left: 337 338 339 340
        on right: 341 342
    capture_list <pCaptList> (324)
        on left: 341 342
        on right: 342 344
    optional_capture_list <pCaptList> (325)
        on left: 343 344
        on right: 222 346 347 349 474 475
    expr_block <pExpression> (326)
        on left: 345 346
        on right: 262 263 264 265 376 377 378 795
    expr_full_block <pExpression> (327)
        on left: 347
        on right: 499
    expr_full_block_assumed_piped <pExpression> (328)
        on left: 349
        on right: 220 221 222
    $@21 (329)
        on left: 348
        on right: 349
    expr_numeric_const <pExpression> (330)
        on left: 350 351 352 353 354 355 356
        on right: 424
    expr_assign <pExpression> (331)
        on left: 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375
        on right: 227 262
    expr_assign_pipe_right <pExpression> (332)
        on left: 376 377 378 379
        on right: 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396
    expr_assign_pipe <pExpression> (333)
        on left: 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396
        on right: 226
    expr_named_call <pExpression> (334)
        on left: 397 398
        on right: 498
    expr_method_call <pExpression> (335)
        on left: 399 400
        on right: 497
    func_addr_name <pExpression> (336)
        on left: 401 402
        on right: 403 406 409
    func_addr_expr <pExpression> (337)
        on left: 403 406 409
        on right: 469
    $@22 (338)
        on left: 404
        on right: 406
    $@23 (339)
        on left: 405
        on right: 406
    $@24 (340)
        on left: 407
        on right: 409
    $@25 (341)
        on left: 408
        on right: 409
    expr_field <pExpression> (342)
        on left: 410 411 412 413 416
        on right: 430
    $@26 (343)
        on left: 414
        on right: 416
    $@27 (344)
        on left: 415
        on right: 416
    expr_call <pExpression> (345)
        on left: 417 418 419 420 421
        on right: 470
    expr <pExpression> (346)
        on left: 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 480 481 482 483 486 487 488 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505
        on right
    $@28 (347)
        on left: 478
        on right: 480
    $@29 (348)
        on left: 479
        on right: 480
    $@30 (349)
        on left: 484
        on right: 486
    $@31 (350)
        on left: 485
        on right: 486
    $@32 (351)
        on left: 489
        on right: 491
    $@33 (352)
        on left: 490
        on right: 491
    expr_mtag <pExpression> (353)
        on left: 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521
        on right: 431
    optional_field_annotation <aaList> (354)
        on left: 522 523 524
        on right: 535 544 586 594
    optional_override <i> (355)
        on left: 525 526 527
        on right: 535 542
    optional_constant <b> (356)
        on left: 528 529
        on right: 540 542
    optional_public_or_private_member_variable <b> (357)
        on left: 530 531 532
        on right: 535 540 542
    optional_static_member_variable <b> (358)
        on left: 533 534
        on right: 535 542
    structure_variable_declaration <pVarDecl> (359)
        on left: 535
        on right: 538
    struct_variable_declaration_list <pVarDeclList> (360)
        on left: 536 538 540 542 543
        on right: 538 540 542 543 630
    $@34 (361)
        on left: 537
        on right: 538
    $@35 (362)
        on left: 539
        on right: 540
    $@36 (363)
        on left: 541
        on right: 542
    function_argument_declaration <pVarDecl> (364)
        on left: 544 545
        on right: 546 547
    function_argument_list <pVarDeclList> (365)
        on left: 546 547
        on right: 123 547
    tuple_type <pVarDecl> (366)
        on left: 548 549
        on right: 550 551 554
    tuple_type_list <pVarDeclList> (367)
        on left: 550 551
        on right: 551 751
    tuple_alias_type_list <pVarDeclList> (368)
        on left: 552 553 554
        on right: 553 554 762
    variant_type <pVarDecl> (369)
        on left: 555
        on right: 556 557 560
    variant_type_list <pVarDeclList> (370)
        on left: 556 557
        on right: 557 754
    variant_alias_type_list <pVarDeclList> (371)
        on left: 558 559 560
        on right: 559 560 767
    copy_or_move <b> (372)
        on left: 561 562
        on right: 566 567 568 778 780 782 784
    variable_declaration <pVarDecl> (373)
        on left: 563 564 565 566 567 568
        on right: 535 544
    copy_or_move_or_clone <i> (374)
        on left: 569 570 571
        on right: 305 306 307 308 580 581 582 583
    optional_ref <b> (375)
        on left: 572 573
        on right: 307 308 582 583
    let_variable_name_with_pos_list <pNameWithPosList> (376)
        on left: 574 575 576 577 578
        on right: 577 578 579 580 581 582 583
    let_variable_declaration <pVarDecl> (377)
        on left: 579 580 581 582 583
        on right: 309 586 594
    global_variable_declaration_list <pVarDeclList> (378)
        on left: 584 586
        on right: 586 592
    $@37 (379)
        on left: 585
        on right: 586
    optional_shared <b> (380)
        on left: 587 588
        on right: 22 592 594
    optional_public_or_private_variable <b> (381)
        on left: 589 590 591
        on right: 592 594
    global_let (382)
        on left: 592 594
        on right: 5
    $@38 (383)
        on left: 593
        on right: 594
    enum_list <pEnum> (384)
        on left: 595 596 597 598
        on right: 596 597 598 615 618
    optional_public_or_private_alias <b> (385)
        on left: 599 600 601
        on right: 603 762 767 772
    single_alias (386)
        on left: 603
        on right: 604 605 608
    $@39 (387)
        on left: 602
        on right: 603
    alias_list (388)
        on left: 604 605
        on right: 605 606
    alias_declaration (389)
        on left: 606 608
        on right: 10
    $@40 (390)
        on left: 607
        on right: 608
    optional_public_or_private_enum <b> (391)
        on left: 609 610 611
        on right: 615 618
    enum_name <pEnum> (392)
        on left: 612
        on right: 615 618
    enum_declaration (393)
        on left: 615 618
        on right: 4
    $@41 (394)
        on left: 613
        on right: 615
    $@42 (395)
        on left: 614
        on right: 615
    $@43 (396)
        on left: 616
        on right: 618
    $@44 (397)
        on left: 617
        on right: 618
    optional_structure_parent <s> (398)
        on left: 619 620
        on right: 623
    optional_sealed <b> (399)
        on left: 621 622
        on right: 623
    structure_name <pStructure> (400)
        on left: 623
        on right: 633
    class_or_struct <b> (401)
        on left: 624 625
        on right: 633
    optional_public_or_private_structure <b> (402)
        on left: 626 627 628
        on right: 633
    optional_struct_variable_declaration_list <pVarDeclList> (403)
        on left: 629 630
        on right: 633
    structure_declaration (404)
        on left: 633
        on right: 3
    $@45 (405)
        on left: 631
        on right: 633
    $@46 (406)
        on left: 632
        on right: 633
    variable_name_with_pos_list <pNameWithPosList> (407)
        on left: 634 635 636 637 638
        on right: 76 563 564 565 566 567 568 637 638 872 873 874 875 876 877
    basic_type_declaration <type> (408)
        on left: 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665
        on right: 420 421 481 487 492 502 690
    enum_basic_type_declaration <type> (409)
        on left: 666 667 668 669 670 671 672 673
        on right: 618
    structure_type_declaration <pTypeDecl> (410)
        on left: 674
        on right: 275 693
    auto_type_declaration <pTypeDecl> (411)
        on left: 675 676 677
        on right: 691
    bitfield_bits <pNameList> (412)
        on left: 678 679
        on right: 679 685
    bitfield_alias_bits <pNameList> (413)
        on left: 680 681 682
        on right: 681 682 772
    bitfield_type_declaration <pTypeDecl> (414)
        on left: 685
        on right: 692
    $@47 (415)
        on left: 683
        on right: 685
    $@48 (416)
        on left: 684
        on right: 685
    table_type_pair <aTypePair> (417)
        on left: 686 687
        on right: 724
    dim_list <pTypeDecl> (418)
        on left: 688 689
        on right: 689 694
    type_declaration_no_options <pTypeDecl> (419)
        on left: 690 691 692 693 694 695 698 699 700 702 703 704 705 706 707 708 709 710 711 712 713 714 717 718 721 724 727 728 731 734 735 738 741 742 745 748 751 754
        on right: 222 305 306 313 316 319 406 474 475 480 579 580 581 694 695 703 704 705 706 707 708 709 710 711 712 713 714 718 755 756 810 811 812 813 814 815 818 821 824 827 836 840 841 844 847 850 854 858 866 867
    $@49 (420)
        on left: 696
        on right: 698
    $@50 (421)
        on left: 697
        on right: 698
    $@51 (422)
        on left: 701
        on right: 702
    $@52 (423)
        on left: 715
        on right: 717
    $@53 (424)
        on left: 716
        on right: 717
    $@54 (425)
        on left: 719
        on right: 721
    $@55 (426)
        on left: 720
        on right: 721
    $@56 (427)
        on left: 722
        on right: 724
    $@57 (428)
        on left: 723
        on right: 724
    $@58 (429)
        on left: 725
        on right: 727
    $@59 (430)
        on left: 726
        on right: 727
    $@60 (431)
        on left: 729
        on right: 731
    $@61 (432)
        on left: 730
        on right: 731
    $@62 (433)
        on left: 732
        on right: 734
    $@63 (434)
        on left: 733
        on right: 734
    $@64 (435)
        on left: 736
        on right: 738
    $@65 (436)
        on left: 737
        on right: 738
    $@66 (437)
        on left: 739
        on right: 741
    $@67 (438)
        on left: 740
        on right: 741
    $@68 (439)
        on left: 743
        on right: 745
    $@69 (440)
        on left: 744
        on right: 745
    $@70 (441)
        on left: 746
        on right: 748
    $@71 (442)
        on left: 747
        on right: 748
    $@72 (443)
        on left: 749
        on right: 751
    $@73 (444)
        on left: 750
        on right: 751
    $@74 (445)
        on left: 752
        on right: 754
    $@75 (446)
        on left: 753
        on right: 754
    type_declaration <pTypeDecl> (447)
        on left: 755 756 757
        on right: 125 254 255 274 322 486 491 548 549 555 565 566 603 686 687 698 717 721 727 731 738 745 756 757
    tuple_alias_declaration (448)
        on left: 762
        on right: 12
    $@76 (449)
        on left: 758
        on right: 762
    $@77 (450)
        on left: 759
        on right: 762
    $@78 (451)
        on left: 760
        on right: 762
    $@79 (452)
        on left: 761
        on right: 762
    variant_alias_declaration (453)
        on left: 767
        on right: 11
    $@80 (454)
        on left: 763
        on right: 767
    $@81 (455)
        on left: 764
        on right: 767
    $@82 (456)
        on left: 765
        on right: 767
    $@83 (457)
        on left: 766
        on right: 767
    bitfield_alias_declaration (458)
        on left: 772
        on right: 13
    $@84 (459)
        on left: 768
        on right: 772
    $@85 (460)
        on left: 769
        on right: 772
    $@86 (461)
        on left: 770
        on right: 772
    $@87 (462)
        on left: 771
        on right: 772
    make_decl <pExpression> (463)
        on left: 773 774 775 776 777
        on right: 281 427
    make_struct_fields <pMakeStruct> (464)
        on left: 778 779 780 781 782 783 784 785
        on right: 397 398 780 781 784 785 786 787 788 789 790 791 792
    make_variant_dim <pExpression> (465)
        on left: 786
        on right: 824 850
    make_struct_single <pExpression> (466)
        on left: 787
        on right: 279 280 418
    make_struct_dim <pExpression> (467)
        on left: 788 789
        on right: 789 810 813 814 815
    make_struct_dim_list <pExpression> (468)
        on left: 790 791
        on right: 791 793
    make_struct_dim_decl <pExpression> (469)
        on left: 792 793
        on right: 818 821 836 844 847
    optional_block <pExpression> (470)
        on left: 794 795
        on right: 810 811 812 813 814 815
    optional_trailing_semicolon_cur_cur (471)
        on left: 796 797
        on right: 864
    optional_trailing_semicolon_cur_sqr (472)
        on left: 798 799
        on right: 841
    optional_trailing_semicolon_sqr_sqr (473)
        on left: 800 801
        on right: 840
    optional_trailing_delim_sqr_sqr (474)
        on left: 802 803 804
        on right: 810 811 812 813
    optional_trailing_delim_cur_sqr (475)
        on left: 805 806 807
        on right: 814 815
    use_initializer <b> (476)
        on left: 808 809
        on right: 277 818 821 827 836 844 847
    make_struct_decl <pExpression> (477)
        on left: 810 811 812 813 814 815 818 821 824 827
        on right: 773
    $@88 (478)
        on left: 816
        on right: 818
    $@89 (479)
        on left: 817
        on right: 818
    $@90 (480)
        on left: 819
        on right: 821
    $@91 (481)
        on left: 820
        on right: 821
    $@92 (482)
        on left: 822
        on right: 824
    $@93 (483)
        on left: 823
        on right: 824
    $@94 (484)
        on left: 825
        on right: 827
    $@95 (485)
        on left: 826
        on right: 827
    make_tuple <pExpression> (486)
        on left: 828 829 830
        on right: 830 837 838
    make_map_tuple <pExpression> (487)
        on left: 831 832
        on right: 859 860 861 862 876 877
    make_tuple_call <pExpression> (488)
        on left: 833 836
        on right: 777
    $@96 (489)
        on left: 834
        on right: 836
    $@97 (490)
        on left: 835
        on right: 836
    make_dim <pExpression> (491)
        on left: 837 838
        on right: 838 840 841
    make_dim_decl <pExpression> (492)
        on left: 839 840 841 844 847 850 851 854 855 858
        on right: 774
    $@98 (493)
        on left: 842
        on right: 844
    $@99 (494)
        on left: 843
        on right: 844
    $@100 (495)
        on left: 845
        on right: 847
    $@101 (496)
        on left: 846
        on right: 847
    $@102 (497)
        on left: 848
        on right: 850
    $@103 (498)
        on left: 849
        on right: 850
    $@104 (499)
        on left: 852
        on right: 854
    $@105 (500)
        on left: 853
        on right: 854
    $@106 (501)
        on left: 856
        on right: 858
    $@107 (502)
        on left: 857
        on right: 858
    make_table <pExpression> (503)
        on left: 859 860
        on right: 860 864
    expr_map_tuple_list <pExpression> (504)
        on left: 861 862
        on right: 253 862 863
    make_table_decl <pExpression> (505)
        on left: 863 864 865 866 867
        on right: 775
    array_comprehension_where <pExpression> (506)
        on left: 868 869
        on right: 872 873 874 875 876 877
    optional_comma <b> (507)
        on left: 870 871
        on right: 249 251 253 462 793 833 839 851 855 858 863
    array_comprehension <pExpression> (508)
        on left: 872 873 874 875 876 877
        on right: 776


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  299 kwd_let: "let" .

    $default  reduce using rule 299 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  606 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  608                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 607 ($@40)

    $@40  go to state 49


State 8

  300 kwd_let: "var" .

    $default  reduce using rule 300 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  772 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 599 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  762 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 599 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  767 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 599 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  120 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  211 global_function_declaration: optional_annotation_list . "def" function_declaration
  615 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  618                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  633 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  592 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  594           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 587 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  606 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 599 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  608 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 599 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 587 (optional_shared)

    optional_shared  go to state 93


State 53

  601 optional_public_or_private_alias: "public" .

    $default  reduce using rule 601 (optional_public_or_private_alias)


State 54

  600 optional_public_or_private_alias: "private" .

    $default  reduce using rule 600 (optional_public_or_private_alias)


State 55

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 768 ($@84)

    $@84  go to state 94


State 56

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 758 ($@76)

    $@76  go to state 95


State 57

  767 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 763 ($@80)

    $@80  go to state 96


State 58

  269 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  267 name_in_namespace: "name" .
  268                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 267 (name_in_namespace)]
    $default  reduce using rule 267 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  106 annotation_declaration_name: "require" .

    $default  reduce using rule 106 (annotation_declaration_name)


State 62

  107 annotation_declaration_name: "private" .

    $default  reduce using rule 107 (annotation_declaration_name)


State 63

  116 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  111 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  115 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  108 annotation_declaration_basic: annotation_declaration_name .
  109                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 108 (annotation_declaration_basic)


State 67

  110 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 110 (annotation_declaration)


State 68

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  117 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 117 (annotation_list)


State 69

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  105 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 105 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  625 class_or_struct: "struct" .

    $default  reduce using rule 625 (class_or_struct)


State 73

  624 class_or_struct: "class" .

    $default  reduce using rule 624 (class_or_struct)


State 74

  211 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 212 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  615 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  618                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 609 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  633 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 626 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  588 optional_shared: "shared" .

    $default  reduce using rule 588 (optional_shared)


State 78

  592 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  594           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 589 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  603 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  604 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  605 alias_list: alias_list . single_alias "end of expression"
  606 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 599 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  608 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  269 name_in_namespace: "::" "name" .

    $default  reduce using rule 269 (name_in_namespace)


State 98

  268 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  116                       | "|>" annotation_declaration .

    $default  reduce using rule 116 (annotation_declaration)


State 101

  111 annotation_declaration: '!' annotation_declaration .
  112                       | annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 111 (annotation_declaration)


State 102

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  115                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  109 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  112 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  113 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  114 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  118 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  120 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 120 (optional_annotation_list)


State 109

  214 optional_public_or_private_function: "public" .

    $default  reduce using rule 214 (optional_public_or_private_function)


State 110

  213 optional_public_or_private_function: "private" .

    $default  reduce using rule 213 (optional_public_or_private_function)


State 111

  217 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 216 ($@6)

    $@6  go to state 156


State 112

  211 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 211 (global_function_declaration)


State 113

  611 optional_public_or_private_enum: "public" .

    $default  reduce using rule 611 (optional_public_or_private_enum)


State 114

  610 optional_public_or_private_enum: "private" .

    $default  reduce using rule 610 (optional_public_or_private_enum)


State 115

  615 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  618                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  628 optional_public_or_private_structure: "public" .

    $default  reduce using rule 628 (optional_public_or_private_structure)


State 117

  627 optional_public_or_private_structure: "private" .

    $default  reduce using rule 627 (optional_public_or_private_structure)


State 118

  633 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 631 ($@45)

    $@45  go to state 159


State 119

  591 optional_public_or_private_variable: "public" .

    $default  reduce using rule 591 (optional_public_or_private_variable)


State 120

  590 optional_public_or_private_variable: "private" .

    $default  reduce using rule 590 (optional_public_or_private_variable)


State 121

  592 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  594           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 593 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  603 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 602 ($@39)

    $@39  go to state 174


State 137

  604 alias_list: single_alias "end of expression" .

    $default  reduce using rule 604 (alias_list)


State 138

  606 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 606 (alias_declaration)


State 139

  605 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 175


State 140

  608 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 608 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 769 ($@85)

    $@85  go to state 176


State 145

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 759 ($@77)

    $@77  go to state 177


State 146

  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 764 ($@81)

    $@81  go to state 178


State 147

  268 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 268 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  115 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 115 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration .
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 112 (annotation_declaration)


State 153

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration .
  114                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 113 (annotation_declaration)


State 154

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 114 (annotation_declaration)


State 155

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  118 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 118 (annotation_list)


State 156

  217 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  612 enum_name: "name" .

    $default  reduce using rule 612 (enum_name)


State 158

  615 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  618                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  633 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 621 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  592 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 584 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  594 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 522 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 221


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223
    "end of the string"   shift, and go to state 224


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 225
    ')'  shift, and go to state 226


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  603 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 227


State 175

  605 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 605 (alias_list)


State 176

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 228


State 177

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 229


State 178

  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 230


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 109 (annotation_declaration_basic)


State 181

  127 function_name: "operator" . '!'
  128              | "operator" . '~'
  129              | "operator" . "+="
  130              | "operator" . "-="
  131              | "operator" . "*="
  132              | "operator" . "/="
  133              | "operator" . "%="
  134              | "operator" . "&="
  135              | "operator" . "|="
  136              | "operator" . "^="
  137              | "operator" . "&&="
  138              | "operator" . "||="
  139              | "operator" . "^^="
  140              | "operator" . "&&"
  141              | "operator" . "||"
  142              | "operator" . "^^"
  143              | "operator" . '+'
  144              | "operator" . '-'
  145              | "operator" . '*'
  146              | "operator" . '/'
  147              | "operator" . '%'
  148              | "operator" . '<'
  149              | "operator" . '>'
  150              | "operator" . ".."
  151              | "operator" . "=="
  152              | "operator" . "!="
  153              | "operator" . "<="
  154              | "operator" . ">="
  155              | "operator" . '&'
  156              | "operator" . '|'
  157              | "operator" . '^'
  160              | "operator" . "++"
  161              | "operator" . "--"
  162              | "operator" . "<<"
  163              | "operator" . ">>"
  164              | "operator" . "<<="
  165              | "operator" . ">>="
  166              | "operator" . "<<<"
  167              | "operator" . ">>>"
  168              | "operator" . "<<<="
  169              | "operator" . ">>>="
  170              | "operator" . '[' ']'
  171              | "operator" . "?[" ']'
  172              | "operator" . '.'
  173              | "operator" . "?."
  174              | "operator" . '.' "name"
  175              | "operator" . '.' "name" ":="
  176              | "operator" . "?." "name"
  177              | "operator" . ":="
  178              | "operator" . "delete"
  179              | "operator" . "??"
  180              | "operator" . "is"
  181              | "operator" . "as"
  182              | "operator" . "is" "name"
  183              | "operator" . "as" "name"
  184              | "operator" . '?' "as"
  185              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 231
    "as"      shift, and go to state 232
    "delete"  shift, and go to state 233
    "+="      shift, and go to state 234
    "-="      shift, and go to state 235
    "/="      shift, and go to state 236
    "*="      shift, and go to state 237
    "%="      shift, and go to state 238
    "&="      shift, and go to state 239
    "|="      shift, and go to state 240
    "^="      shift, and go to state 241
    "<<"      shift, and go to state 242
    ">>"      shift, and go to state 243
    "++"      shift, and go to state 244
    "--"      shift, and go to state 245
    "<="      shift, and go to state 246
    "<<="     shift, and go to state 247
    ">>="     shift, and go to state 248
    ">="      shift, and go to state 249
    "=="      shift, and go to state 250
    "!="      shift, and go to state 251
    "??"      shift, and go to state 252
    "?."      shift, and go to state 253
    "?["      shift, and go to state 254
    ":="      shift, and go to state 255
    "<<<"     shift, and go to state 256
    ">>>"     shift, and go to state 257
    "<<<="    shift, and go to state 258
    ">>>="    shift, and go to state 259
    "&&"      shift, and go to state 260
    "||"      shift, and go to state 261
    "^^"      shift, and go to state 262
    "&&="     shift, and go to state 263
    "||="     shift, and go to state 264
    "^^="     shift, and go to state 265
    ".."      shift, and go to state 266
    '?'       shift, and go to state 267
    '|'       shift, and go to state 268
    '^'       shift, and go to state 269
    '&'       shift, and go to state 270
    '<'       shift, and go to state 271
    '>'       shift, and go to state 272
    '-'       shift, and go to state 273
    '+'       shift, and go to state 274
    '*'       shift, and go to state 275
    '/'       shift, and go to state 276
    '%'       shift, and go to state 277
    '~'       shift, and go to state 278
    '!'       shift, and go to state 279
    '.'       shift, and go to state 280
    '['       shift, and go to state 281


State 182

  186 function_name: "bool" .

    $default  reduce using rule 186 (function_name)


State 183

  187 function_name: "string" .

    $default  reduce using rule 187 (function_name)


State 184

  188 function_name: "int" .

    $default  reduce using rule 188 (function_name)


State 185

  189 function_name: "int2" .

    $default  reduce using rule 189 (function_name)


State 186

  190 function_name: "int3" .

    $default  reduce using rule 190 (function_name)


State 187

  191 function_name: "int4" .

    $default  reduce using rule 191 (function_name)


State 188

  192 function_name: "uint" .

    $default  reduce using rule 192 (function_name)


State 189

  193 function_name: "uint2" .

    $default  reduce using rule 193 (function_name)


State 190

  194 function_name: "uint3" .

    $default  reduce using rule 194 (function_name)


State 191

  195 function_name: "uint4" .

    $default  reduce using rule 195 (function_name)


State 192

  196 function_name: "float" .

    $default  reduce using rule 196 (function_name)


State 193

  197 function_name: "float2" .

    $default  reduce using rule 197 (function_name)


State 194

  198 function_name: "float3" .

    $default  reduce using rule 198 (function_name)


State 195

  199 function_name: "float4" .

    $default  reduce using rule 199 (function_name)


State 196

  200 function_name: "range" .

    $default  reduce using rule 200 (function_name)


State 197

  201 function_name: "urange" .

    $default  reduce using rule 201 (function_name)


State 198

  202 function_name: "range64" .

    $default  reduce using rule 202 (function_name)


State 199

  203 function_name: "urange64" .

    $default  reduce using rule 203 (function_name)


State 200

  204 function_name: "int64" .

    $default  reduce using rule 204 (function_name)


State 201

  205 function_name: "uint64" .

    $default  reduce using rule 205 (function_name)


State 202

  206 function_name: "double" .

    $default  reduce using rule 206 (function_name)


State 203

  207 function_name: "int8" .

    $default  reduce using rule 207 (function_name)


State 204

  208 function_name: "uint8" .

    $default  reduce using rule 208 (function_name)


State 205

  209 function_name: "int16" .

    $default  reduce using rule 209 (function_name)


State 206

  210 function_name: "uint16" .

    $default  reduce using rule 210 (function_name)


State 207

  158 function_name: "++" . "operator"

    "operator"  shift, and go to state 282


State 208

  159 function_name: "--" . "operator"

    "operator"  shift, and go to state 283


State 209

  126 function_name: "name" .

    $default  reduce using rule 126 (function_name)


State 210

  215 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 285


State 211

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 287


State 212

  615 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 613 ($@41)

    $@41  go to state 288


State 213

  618 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 289
    "uint"    shift, and go to state 290
    "int64"   shift, and go to state 291
    "uint64"  shift, and go to state 292
    "int8"    shift, and go to state 293
    "uint8"   shift, and go to state 294
    "int16"   shift, and go to state 295
    "uint16"  shift, and go to state 296

    enum_basic_type_declaration  go to state 297


State 214

  622 optional_sealed: "sealed" .

    $default  reduce using rule 622 (optional_sealed)


State 215

  623 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 298


State 216

  633 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 632 ($@46)

    $@46  go to state 299


State 217

  586 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  592 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 300

    $default  reduce using rule 585 ($@37)

    $@37  go to state 301


State 218

  523 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 302


State 219

  103 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 303


State 220

  104 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  524 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 304

    $default  reduce using rule 524 (optional_field_annotation)


State 221

  594 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 305
    "name"  shift, and go to state 306

    let_variable_name_with_pos_list  go to state 307
    let_variable_declaration         go to state 308


State 222

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 223

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 224

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 225

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 309


State 226

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 227

  603 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 357


State 228

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 770 ($@86)

    $@86  go to state 358


State 229

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 760 ($@78)

    $@78  go to state 359


State 230

  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 765 ($@82)

    $@82  go to state 360


State 231

  180 function_name: "operator" "is" .
  182              | "operator" "is" . "name"

    "name"  shift, and go to state 361

    $default  reduce using rule 180 (function_name)


State 232

  181 function_name: "operator" "as" .
  183              | "operator" "as" . "name"

    "name"  shift, and go to state 362

    $default  reduce using rule 181 (function_name)


State 233

  178 function_name: "operator" "delete" .

    $default  reduce using rule 178 (function_name)


State 234

  129 function_name: "operator" "+=" .

    $default  reduce using rule 129 (function_name)


State 235

  130 function_name: "operator" "-=" .

    $default  reduce using rule 130 (function_name)


State 236

  132 function_name: "operator" "/=" .

    $default  reduce using rule 132 (function_name)


State 237

  131 function_name: "operator" "*=" .

    $default  reduce using rule 131 (function_name)


State 238

  133 function_name: "operator" "%=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "&=" .

    $default  reduce using rule 134 (function_name)


State 240

  135 function_name: "operator" "|=" .

    $default  reduce using rule 135 (function_name)


State 241

  136 function_name: "operator" "^=" .

    $default  reduce using rule 136 (function_name)


State 242

  162 function_name: "operator" "<<" .

    $default  reduce using rule 162 (function_name)


State 243

  163 function_name: "operator" ">>" .

    $default  reduce using rule 163 (function_name)


State 244

  160 function_name: "operator" "++" .

    $default  reduce using rule 160 (function_name)


State 245

  161 function_name: "operator" "--" .

    $default  reduce using rule 161 (function_name)


State 246

  153 function_name: "operator" "<=" .

    $default  reduce using rule 153 (function_name)


State 247

  164 function_name: "operator" "<<=" .

    $default  reduce using rule 164 (function_name)


State 248

  165 function_name: "operator" ">>=" .

    $default  reduce using rule 165 (function_name)


State 249

  154 function_name: "operator" ">=" .

    $default  reduce using rule 154 (function_name)


State 250

  151 function_name: "operator" "==" .

    $default  reduce using rule 151 (function_name)


State 251

  152 function_name: "operator" "!=" .

    $default  reduce using rule 152 (function_name)


State 252

  179 function_name: "operator" "??" .

    $default  reduce using rule 179 (function_name)


State 253

  173 function_name: "operator" "?." .
  176              | "operator" "?." . "name"

    "name"  shift, and go to state 363

    $default  reduce using rule 173 (function_name)


State 254

  171 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 364


State 255

  177 function_name: "operator" ":=" .

    $default  reduce using rule 177 (function_name)


State 256

  166 function_name: "operator" "<<<" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>" .

    $default  reduce using rule 167 (function_name)


State 258

  168 function_name: "operator" "<<<=" .

    $default  reduce using rule 168 (function_name)


State 259

  169 function_name: "operator" ">>>=" .

    $default  reduce using rule 169 (function_name)


State 260

  140 function_name: "operator" "&&" .

    $default  reduce using rule 140 (function_name)


State 261

  141 function_name: "operator" "||" .

    $default  reduce using rule 141 (function_name)


State 262

  142 function_name: "operator" "^^" .

    $default  reduce using rule 142 (function_name)


State 263

  137 function_name: "operator" "&&=" .

    $default  reduce using rule 137 (function_name)


State 264

  138 function_name: "operator" "||=" .

    $default  reduce using rule 138 (function_name)


State 265

  139 function_name: "operator" "^^=" .

    $default  reduce using rule 139 (function_name)


State 266

  150 function_name: "operator" ".." .

    $default  reduce using rule 150 (function_name)


State 267

  184 function_name: "operator" '?' . "as"
  185              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 365


State 268

  156 function_name: "operator" '|' .

    $default  reduce using rule 156 (function_name)


State 269

  157 function_name: "operator" '^' .

    $default  reduce using rule 157 (function_name)


State 270

  155 function_name: "operator" '&' .

    $default  reduce using rule 155 (function_name)


State 271

  148 function_name: "operator" '<' .

    $default  reduce using rule 148 (function_name)


State 272

  149 function_name: "operator" '>' .

    $default  reduce using rule 149 (function_name)


State 273

  144 function_name: "operator" '-' .

    $default  reduce using rule 144 (function_name)


State 274

  143 function_name: "operator" '+' .

    $default  reduce using rule 143 (function_name)


State 275

  145 function_name: "operator" '*' .

    $default  reduce using rule 145 (function_name)


State 276

  146 function_name: "operator" '/' .

    $default  reduce using rule 146 (function_name)


State 277

  147 function_name: "operator" '%' .

    $default  reduce using rule 147 (function_name)


State 278

  128 function_name: "operator" '~' .

    $default  reduce using rule 128 (function_name)


State 279

  127 function_name: "operator" '!' .

    $default  reduce using rule 127 (function_name)


State 280

  172 function_name: "operator" '.' .
  174              | "operator" '.' . "name"
  175              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 366

    $default  reduce using rule 172 (function_name)


State 281

  170 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 367


State 282

  158 function_name: "++" "operator" .

    $default  reduce using rule 158 (function_name)


State 283

  159 function_name: "--" "operator" .

    $default  reduce using rule 159 (function_name)


State 284

  122 optional_function_argument_list: '(' . ')'
  123                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 368
    "[["  shift, and go to state 218
    ')'   shift, and go to state 369
    '@'   shift, and go to state 219

    $default  reduce using rule 522 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 370
    function_argument_declaration  go to state 371
    function_argument_list         go to state 372


State 285

  215 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 374


State 286

  218 expression_block: "begin of code block" . expressions "end of code block"
  219                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 244 (expressions)

    expressions  go to state 375


State 287

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 217 (function_declaration)


State 288

  615 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 595 (enum_list)

    enum_list  go to state 376


State 289

  666 enum_basic_type_declaration: "int" .

    $default  reduce using rule 666 (enum_basic_type_declaration)


State 290

  669 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 669 (enum_basic_type_declaration)


State 291

  672 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 672 (enum_basic_type_declaration)


State 292

  673 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 673 (enum_basic_type_declaration)


State 293

  667 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 667 (enum_basic_type_declaration)


State 294

  670 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 670 (enum_basic_type_declaration)


State 295

  668 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 668 (enum_basic_type_declaration)


State 296

  671 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 671 (enum_basic_type_declaration)


State 297

  618 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 377


State 298

  623 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 378

    $default  reduce using rule 619 (optional_structure_parent)

    optional_structure_parent  go to state 379


State 299

  633 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 380

    $default  reduce using rule 629 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 381


State 300

  592 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 592 (global_let)


State 301

  586 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 522 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 382


State 302

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  523 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 383


State 303

  103 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 103 (metadata_argument_list)


State 304

  104 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 384


State 305

  575 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 385


State 306

  574 let_variable_name_with_pos_list: "name" .
  576                                | "name" . "aka" "name"

    "aka"  shift, and go to state 386

    $default  reduce using rule 574 (let_variable_name_with_pos_list)


State 307

  577 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  578                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  579 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  580                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  581                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  582                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  583                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 387
    ':'  shift, and go to state 388
    '&'  shift, and go to state 389

    $default  reduce using rule 572 (optional_ref)

    optional_ref  go to state 390


State 308

  594 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 594 (global_let)


State 309

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 310

  698 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 391


State 311

  721 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 392


State 312

  724 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 393


State 313

  699 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 394


State 314

  727 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 395


State 315

  717 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 396


State 316

  639 basic_type_declaration: "bool" .

    $default  reduce using rule 639 (basic_type_declaration)


State 317

  659 basic_type_declaration: "void" .

    $default  reduce using rule 659 (basic_type_declaration)


State 318

  640 basic_type_declaration: "string" .

    $default  reduce using rule 640 (basic_type_declaration)


State 319

  675 auto_type_declaration: "auto" .
  676                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 397

    '('       [reduce using rule 675 (auto_type_declaration)]
    $default  reduce using rule 675 (auto_type_declaration)


State 320

  641 basic_type_declaration: "int" .

    $default  reduce using rule 641 (basic_type_declaration)


State 321

  645 basic_type_declaration: "int2" .

    $default  reduce using rule 645 (basic_type_declaration)


State 322

  646 basic_type_declaration: "int3" .

    $default  reduce using rule 646 (basic_type_declaration)


State 323

  647 basic_type_declaration: "int4" .

    $default  reduce using rule 647 (basic_type_declaration)


State 324

  648 basic_type_declaration: "uint" .

    $default  reduce using rule 648 (basic_type_declaration)


State 325

  665 basic_type_declaration: "bitfield" .
  685 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 398

    $default  reduce using rule 665 (basic_type_declaration)


State 326

  652 basic_type_declaration: "uint2" .

    $default  reduce using rule 652 (basic_type_declaration)


State 327

  653 basic_type_declaration: "uint3" .

    $default  reduce using rule 653 (basic_type_declaration)


State 328

  654 basic_type_declaration: "uint4" .

    $default  reduce using rule 654 (basic_type_declaration)


State 329

  655 basic_type_declaration: "float" .

    $default  reduce using rule 655 (basic_type_declaration)


State 330

  656 basic_type_declaration: "float2" .

    $default  reduce using rule 656 (basic_type_declaration)


State 331

  657 basic_type_declaration: "float3" .

    $default  reduce using rule 657 (basic_type_declaration)


State 332

  658 basic_type_declaration: "float4" .

    $default  reduce using rule 658 (basic_type_declaration)


State 333

  660 basic_type_declaration: "range" .

    $default  reduce using rule 660 (basic_type_declaration)


State 334

  661 basic_type_declaration: "urange" .

    $default  reduce using rule 661 (basic_type_declaration)


State 335

  662 basic_type_declaration: "range64" .

    $default  reduce using rule 662 (basic_type_declaration)


State 336

  663 basic_type_declaration: "urange64" .

    $default  reduce using rule 663 (basic_type_declaration)


State 337

  728 type_declaration_no_options: "block" .
  731                            | "block" . '<' $@60 type_declaration '>' $@61
  734                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 399

    $default  reduce using rule 728 (type_declaration_no_options)


State 338

  644 basic_type_declaration: "int64" .

    $default  reduce using rule 644 (basic_type_declaration)


State 339

  651 basic_type_declaration: "uint64" .

    $default  reduce using rule 651 (basic_type_declaration)


State 340

  664 basic_type_declaration: "double" .

    $default  reduce using rule 664 (basic_type_declaration)


State 341

  735 type_declaration_no_options: "function" .
  738                            | "function" . '<' $@64 type_declaration '>' $@65
  741                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 400

    $default  reduce using rule 735 (type_declaration_no_options)


State 342

  742 type_declaration_no_options: "lambda" .
  745                            | "lambda" . '<' $@68 type_declaration '>' $@69
  748                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 401

    $default  reduce using rule 742 (type_declaration_no_options)


State 343

  642 basic_type_declaration: "int8" .

    $default  reduce using rule 642 (basic_type_declaration)


State 344

  649 basic_type_declaration: "uint8" .

    $default  reduce using rule 649 (basic_type_declaration)


State 345

  643 basic_type_declaration: "int16" .

    $default  reduce using rule 643 (basic_type_declaration)


State 346

  650 basic_type_declaration: "uint16" .

    $default  reduce using rule 650 (basic_type_declaration)


State 347

  751 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 402


State 348

  754 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 403


State 349

  677 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 404


State 350

  700 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  702                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 405


State 351

  674 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 674 (structure_type_declaration)


State 352

  690 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 690 (type_declaration_no_options)


State 353

  693 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 693 (type_declaration_no_options)


State 354

  691 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 691 (type_declaration_no_options)


State 355

  692 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 692 (type_declaration_no_options)


State 356

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  755 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    $default  reduce using rule 755 (type_declaration)

    dim_list  go to state 416


State 357

  603 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 603 (single_alias)


State 358

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 680 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 418


State 359

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 552 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 419


State 360

  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 558 (variant_alias_type_list)

    variant_alias_type_list  go to state 420


State 361

  182 function_name: "operator" "is" "name" .

    $default  reduce using rule 182 (function_name)


State 362

  183 function_name: "operator" "as" "name" .

    $default  reduce using rule 183 (function_name)


State 363

  176 function_name: "operator" "?." "name" .

    $default  reduce using rule 176 (function_name)


State 364

  171 function_name: "operator" "?[" ']' .

    $default  reduce using rule 171 (function_name)


State 365

  184 function_name: "operator" '?' "as" .
  185              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 421

    $default  reduce using rule 184 (function_name)


State 366

  174 function_name: "operator" '.' "name" .
  175              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 422

    $default  reduce using rule 174 (function_name)


State 367

  170 function_name: "operator" '[' ']' .

    $default  reduce using rule 170 (function_name)


State 368

  545 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 423


State 369

  122 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 122 (optional_function_argument_list)


State 370

  544 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 424
    "var"  shift, and go to state 425

    $default  reduce using rule 298 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 426


State 371

  546 function_argument_list: function_argument_declaration .

    $default  reduce using rule 546 (function_argument_list)


State 372

  123 optional_function_argument_list: '(' function_argument_list . ')'
  547 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 427
    ')'                  shift, and go to state 428


State 373

  125 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 429


State 374

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 215 (function_declaration_header)


State 375

  218 expression_block: "begin of code block" expressions . "end of code block"
  219                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  245 expressions: expressions . expression_any
  246            | expressions . error

    error                             shift, and go to state 430
    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 433
    "if"                              shift, and go to state 434
    "static_if"                       shift, and go to state 435
    "for"                             shift, and go to state 436
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 443
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "try"                             shift, and go to state 446
    "table"                           shift, and go to state 447
    "delete"                          shift, and go to state 448
    "deref"                           shift, and go to state 449
    "with"                            shift, and go to state 450
    "assume"                          shift, and go to state 451
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "pass"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 458
    "goto"                            shift, and go to state 459
    "unsafe"                          shift, and go to state 460
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 467
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 490
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    "end of code block"               shift, and go to state 494
    "end of expression"               shift, and go to state 495
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_label           go to state 507
    expression_goto            go to state 508
    if_or_static_if            go to state 509
    expression_if_one_liner    go to state 510
    expression_if_then_else    go to state 511
    expression_for_loop        go to state 512
    expression_unsafe          go to state 513
    expression_while_loop      go to state 514
    expression_with            go to state 515
    expression_with_alias      go to state 516
    expr_call_pipe             go to state 517
    expression_any             go to state 518
    expr_keyword               go to state 519
    expression_keyword         go to state 520
    expr_pipe                  go to state 521
    name_in_namespace          go to state 522
    expression_delete          go to state 523
    expr_new                   go to state 524
    expression_break           go to state 525
    expression_continue        go to state 526
    expression_return_no_pipe  go to state 527
    expression_return          go to state 528
    expression_yield_no_pipe   go to state 529
    expression_yield           go to state 530
    expression_try_catch       go to state 531
    kwd_let                    go to state 532
    expression_let             go to state 533
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_assign                go to state 540
    expr_assign_pipe           go to state 541
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 547
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 376

  596 enum_list: enum_list . "end of expression"
  597          | enum_list . "name" "end of expression"
  598          | enum_list . "name" '=' expr "end of expression"
  615 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 556
    "end of expression"  shift, and go to state 557

    $default  reduce using rule 614 ($@42)

    $@42  go to state 558


State 377

  618 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 616 ($@43)

    $@43  go to state 559


State 378

  620 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 560


State 379

  623 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 623 (structure_name)


State 380

  630 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 536 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 561


State 381

  633 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 633 (structure_declaration)


State 382

  586 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 305
    "name"  shift, and go to state 306

    let_variable_name_with_pos_list  go to state 307
    let_variable_declaration         go to state 562


State 383

  523 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 563


State 384

  104 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 385

  575 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 568
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 386

  576 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 569


State 387

  577 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  578                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 570


State 388

  579 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  580                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  581                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 571


State 389

  573 optional_ref: '&' .

    $default  reduce using rule 573 (optional_ref)


State 390

  582 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  583                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 572
    ":="  shift, and go to state 573
    '='   shift, and go to state 574

    copy_or_move_or_clone  go to state 575


State 391

  698 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 696 ($@49)

    $@49  go to state 576


State 392

  721 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 719 ($@54)

    $@54  go to state 577


State 393

  724 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 722 ($@56)

    $@56  go to state 578


State 394

  699 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 579
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 395

  727 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 725 ($@58)

    $@58  go to state 580


State 396

  717 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 715 ($@52)

    $@52  go to state 581


State 397

  676 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 582


State 398

  685 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 683 ($@47)

    $@47  go to state 583


State 399

  731 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  734                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 732 ($@62)
    '>'       reduce using rule 732 ($@62)
    '('       reduce using rule 732 ($@62)
    $default  reduce using rule 729 ($@60)

    $@60  go to state 584
    $@62  go to state 585


State 400

  738 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  741                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 739 ($@66)
    '>'       reduce using rule 739 ($@66)
    '('       reduce using rule 739 ($@66)
    $default  reduce using rule 736 ($@64)

    $@64  go to state 586
    $@66  go to state 587


State 401

  745 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  748                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 746 ($@70)
    '>'       reduce using rule 746 ($@70)
    '('       reduce using rule 746 ($@70)
    $default  reduce using rule 743 ($@68)

    $@68  go to state 588
    $@70  go to state 589


State 402

  751 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 749 ($@72)

    $@72  go to state 590


State 403

  754 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 752 ($@74)

    $@74  go to state 591


State 404

  677 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 592
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 405

  700 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  702                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 593
    '('  shift, and go to state 594


State 406

  705 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 705 (type_declaration_no_options)


State 407

  710 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 710 (type_declaration_no_options)


State 408

  704 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 704 (type_declaration_no_options)


State 409

  712 type_declaration_no_options: type_declaration_no_options "==" . "const"
  713                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 595
    '&'      shift, and go to state 596


State 410

  718 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 718 (type_declaration_no_options)


State 411

  714 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 714 (type_declaration_no_options)


State 412

  707 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 707 (type_declaration_no_options)


State 413

  703 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  706                            | type_declaration_no_options '-' . "const"
  708                            | type_declaration_no_options '-' . '&'
  711                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 597
    '&'      shift, and go to state 598
    '['      shift, and go to state 599
    '#'      shift, and go to state 600


State 414

  688 dim_list: '[' . expr ']'
  695 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 601
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 602
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 415

  709 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 709 (type_declaration_no_options)


State 416

  689 dim_list: dim_list . '[' expr ']'
  694 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 603

    '['       [reduce using rule 694 (type_declaration_no_options)]
    $default  reduce using rule 694 (type_declaration_no_options)


State 417

  756 type_declaration: type_declaration '|' . type_declaration_no_options
  757                 | type_declaration '|' . '#'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350
    '#'          shift, and go to state 604

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 605


State 418

  681 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  682                    | bitfield_alias_bits . "name" "end of expression"
  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 606
    "end of expression"  shift, and go to state 607

    $default  reduce using rule 771 ($@87)

    $@87  go to state 608


State 419

  553 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  554                      | tuple_alias_type_list . tuple_type "end of expression"
  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 310
    "array"              shift, and go to state 311
    "table"              shift, and go to state 312
    "typedecl"           shift, and go to state 313
    "iterator"           shift, and go to state 314
    "smart_ptr"          shift, and go to state 315
    "bool"               shift, and go to state 316
    "void"               shift, and go to state 317
    "string"             shift, and go to state 318
    "auto"               shift, and go to state 319
    "int"                shift, and go to state 320
    "int2"               shift, and go to state 321
    "int3"               shift, and go to state 322
    "int4"               shift, and go to state 323
    "uint"               shift, and go to state 324
    "bitfield"           shift, and go to state 325
    "uint2"              shift, and go to state 326
    "uint3"              shift, and go to state 327
    "uint4"              shift, and go to state 328
    "float"              shift, and go to state 329
    "float2"             shift, and go to state 330
    "float3"             shift, and go to state 331
    "float4"             shift, and go to state 332
    "range"              shift, and go to state 333
    "urange"             shift, and go to state 334
    "range64"            shift, and go to state 335
    "urange64"           shift, and go to state 336
    "block"              shift, and go to state 337
    "int64"              shift, and go to state 338
    "uint64"             shift, and go to state 339
    "double"             shift, and go to state 340
    "function"           shift, and go to state 341
    "lambda"             shift, and go to state 342
    "int8"               shift, and go to state 343
    "uint8"              shift, and go to state 344
    "int16"              shift, and go to state 345
    "uint16"             shift, and go to state 346
    "tuple"              shift, and go to state 347
    "variant"            shift, and go to state 348
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 349
    "name"               shift, and go to state 609
    "end of expression"  shift, and go to state 610
    '$'                  shift, and go to state 350

    $default  reduce using rule 761 ($@79)

    name_in_namespace            go to state 351
    tuple_type                   go to state 611
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 612
    $@79                         go to state 613


State 420

  559 variant_alias_type_list: variant_alias_type_list . "end of expression"
  560                        | variant_alias_type_list . variant_type "end of expression"
  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 614
    "end of expression"  shift, and go to state 615

    $default  reduce using rule 766 ($@83)

    variant_type  go to state 616
    $@83          go to state 617


State 421

  185 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 185 (function_name)


State 422

  175 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 175 (function_name)


State 423

  545 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 618
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 424

  296 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 296 (kwd_let_var_or_nothing)


State 425

  297 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 297 (kwd_let_var_or_nothing)


State 426

  544 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_declaration         go to state 621
    variable_name_with_pos_list  go to state 622


State 427

  547 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 368
    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 522 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 370
    function_argument_declaration  go to state 623


State 428

  123 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 123 (optional_function_argument_list)


State 429

  125 optional_function_type: ':' type_declaration .
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 125 (optional_function_type)


State 430

  246 expressions: expressions error .

    $default  reduce using rule 246 (expressions)


State 431

  818 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 624


State 432

  821 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 625


State 433

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 626
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 434

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 435

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 436

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 627


State 437

  428 expr: "true" .

    $default  reduce using rule 428 (expr)


State 438

  429 expr: "false" .

    $default  reduce using rule 429 (expr)


State 439

  276 expr_new: "new" . new_type_declaration
  277         | "new" . new_type_declaration '(' use_initializer ')'
  278         | "new" . new_type_declaration '(' expr_list ')'
  279         | "new" . new_type_declaration '(' make_struct_single ')'
  280         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  281         | "new" . make_decl

    "struct"               shift, and go to state 431
    "class"                shift, and go to state 432
    "array"                shift, and go to state 442
    "table"                shift, and go to state 447
    "fixed_array"          shift, and go to state 461
    "default"              shift, and go to state 462
    "tuple"                shift, and go to state 464
    "variant"              shift, and go to state 465
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 480
    "[{"                   shift, and go to state 481
    "{{"                   shift, and go to state 482
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 493
    '<'                    shift, and go to state 628
    '['                    shift, and go to state 501

    name_in_namespace           go to state 351
    new_type_declaration        go to state 629
    structure_type_declaration  go to state 630
    make_decl                   go to state 631
    make_struct_decl            go to state 551
    make_tuple_call             go to state 552
    make_dim_decl               go to state 553
    make_table_decl             go to state 554
    array_comprehension         go to state 555


State 440

  323 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  324               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  325               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'
  326               | "typeinfo" . name_in_namespace '(' expr ')'
  327               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  328               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 632

    name_in_namespace  go to state 633


State 441

  322 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 634


State 442

  844 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'
  847              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'
  850              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  851              | "array" . '(' expr_list optional_comma ')'
  854              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "struct"   shift, and go to state 635
    "tuple"    shift, and go to state 636
    "variant"  shift, and go to state 637
    '<'        shift, and go to state 638
    '('        shift, and go to state 639


State 443

  284 expression_return_no_pipe: "return" .
  285                          | "return" . expr_list
  286                          | "return" . "<-" expr_list
  288 expression_return: "return" . expr_pipe
  289                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 640
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 284 (expression_return_no_pipe)

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 641
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 642
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 644
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 444

  422 expr: "null" .

    $default  reduce using rule 422 (expr)


State 445

  282 expression_break: "break" .

    $default  reduce using rule 282 (expression_break)


State 446

  295 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 645


State 447

  865 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  866                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  867                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 646
    '('  shift, and go to state 647


State 448

  270 expression_delete: "delete" . expr
  271                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "explicit"                        shift, and go to state 648
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 649
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 449

  472 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 650


State 450

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 651
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 451

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 652


State 452

  313 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 653


State 453

  316 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 654


State 454

  473 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 655


State 455

  283 expression_continue: "continue" .

    $default  reduce using rule 283 (expression_continue)


State 456

  243 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 656


State 457

  319 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 657


State 458

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 658


State 459

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 659
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 660
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 460

   77 expression_unsafe: "unsafe" . expression_block
  504 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 286
    '('                    shift, and go to state 661

    expression_block  go to state 662


State 461

  855 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  858              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 663
    '('  shift, and go to state 664


State 462

  827 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 665


State 463

  665 basic_type_declaration: "bitfield" .

    $default  reduce using rule 665 (basic_type_declaration)


State 464

  833 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  836                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 666
    '('  shift, and go to state 667


State 465

  824 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    '<'  shift, and go to state 668


State 466

  222 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  474 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  475     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 669


State 467

  290 expression_yield_no_pipe: "yield" . expr
  291                         | "yield" . "<-" expr
  293 expression_yield: "yield" . expr_pipe
  294                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 670
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 671
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 672
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 468

  458 expr: "++" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 673
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 469

  459 expr: "--" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 674
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 470

  265 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 678


State 471

  263 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 679


State 472

  264 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 680


State 473

  506 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 681


State 474

  507 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 682


State 475

  508 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 683


State 476

  509 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 684


State 477

  510 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 685


State 478

  512 expr_mtag: "$c" . '(' expr ')' '(' ')'
  513          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 686


State 479

  511 expr_mtag: "..." .

    $default  reduce using rule 511 (expr_mtag)


State 480

  810 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  811                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  812                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  813                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  840 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  874 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 687
    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 688


State 481

  814 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  815                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  841 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  875 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 689
    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 690


State 482

  864 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  877 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 691
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 693
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table              go to state 694
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 483

  350 expr_numeric_const: "integer constant" .

    $default  reduce using rule 350 (expr_numeric_const)


State 484

  352 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 352 (expr_numeric_const)


State 485

  351 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 351 (expr_numeric_const)


State 486

  353 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 353 (expr_numeric_const)


State 487

  354 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 488

  355 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 355 (expr_numeric_const)


State 489

  356 expr_numeric_const: "double constant" .

    $default  reduce using rule 356 (expr_numeric_const)


State 490

  247 expr_keyword: "keyword" . expr expression_block
  258 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '<'                               shift, and go to state 695
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 696
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 491

  261 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 697


State 492

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 698


State 493

  863 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  876 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 700
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 701
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 494

  218 expression_block: "begin of code block" expressions "end of code block" .
  219                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 702

    $default  reduce using rule 218 (expression_block)


State 495

  223 expression_any: "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 496

  435 expr: '-' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 703
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 497

  434 expr: '+' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 704
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 498

  471 expr: '*' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 705
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 499

  433 expr: '~' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 500

  432 expr: '!' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 707
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 501

  839 make_dim_decl: '[' . expr_list optional_comma ']'
  872 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  873                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 502

  462 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 712
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 503

  334 block_or_lambda: '$' .

    $default  reduce using rule 334 (block_or_lambda)


State 504

  335 block_or_lambda: '@' .
  336                | '@' . '@'
  403 func_addr_expr: '@' . '@' func_addr_name
  406               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  409               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  521 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 713

    $default  reduce using rule 335 (block_or_lambda)


State 505

  426 expr: string_builder .

    $default  reduce using rule 426 (expr)


State 506

  425 expr: expr_reader .

    $default  reduce using rule 425 (expr)


State 507

  241 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 714


State 508

  242 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 715


State 509

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 716
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 510

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 717


State 511

  239 expression_any: expression_if_then_else .

    $default  reduce using rule 239 (expression_any)


State 512

  234 expression_any: expression_for_loop .

    $default  reduce using rule 234 (expression_any)


State 513

  231 expression_any: expression_unsafe .

    $default  reduce using rule 231 (expression_any)


State 514

  230 expression_any: expression_while_loop .

    $default  reduce using rule 230 (expression_any)


State 515

  232 expression_any: expression_with .

    $default  reduce using rule 232 (expression_any)


State 516

  233 expression_any: expression_with_alias .

    $default  reduce using rule 233 (expression_any)


State 517

  266 expr_pipe: expr_call_pipe .

    $default  reduce using rule 266 (expr_pipe)


State 518

  245 expressions: expressions expression_any .

    $default  reduce using rule 245 (expressions)


State 519

  225 expression_any: expr_keyword .

    $default  reduce using rule 225 (expression_any)


State 520

  221 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  505 expr: expression_keyword .

    '$'  shift, and go to state 503
    '@'  shift, and go to state 675

    '$'       [reduce using rule 505 (expr)]
    '@'       [reduce using rule 505 (expr)]
    $default  reduce using rule 505 (expr)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 719


State 521

  224 expression_any: expr_pipe .

    $default  reduce using rule 224 (expression_any)


State 522

  397 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  398                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  417 expr_call: name_in_namespace . '(' ')'
  418          | name_in_namespace . '(' make_struct_single ')'
  419          | name_in_namespace . '(' expr_list ')'
  423 expr: name_in_namespace .
  503     | name_in_namespace . "name"

    "name"  shift, and go to state 720
    '('     shift, and go to state 721

    "name"    [reduce using rule 423 (expr)]
    '('       [reduce using rule 423 (expr)]
    $default  reduce using rule 423 (expr)


State 523

  228 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 722


State 524

  496 expr: expr_new .

    $default  reduce using rule 496 (expr)


State 525

   70 expression_if_one_liner: expression_break .
  235 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 723

    $default  reduce using rule 70 (expression_if_one_liner)


State 526

   71 expression_if_one_liner: expression_continue .
  236 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 724

    $default  reduce using rule 71 (expression_if_one_liner)


State 527

   68 expression_if_one_liner: expression_return_no_pipe .
  287 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 725

    $default  reduce using rule 68 (expression_if_one_liner)


State 528

  237 expression_any: expression_return .

    $default  reduce using rule 237 (expression_any)


State 529

   69 expression_if_one_liner: expression_yield_no_pipe .
  292 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 726

    $default  reduce using rule 69 (expression_if_one_liner)


State 530

  238 expression_any: expression_yield .

    $default  reduce using rule 238 (expression_any)


State 531

  240 expression_any: expression_try_catch .

    $default  reduce using rule 240 (expression_any)


State 532

  309 expression_let: kwd_let . optional_in_scope let_variable_declaration
  310               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 727

    $default  reduce using rule 302 (optional_in_scope)

    optional_in_scope  go to state 728


State 533

  229 expression_any: expression_let .

    $default  reduce using rule 229 (expression_any)


State 534

  495 expr: expr_cast .

    $default  reduce using rule 495 (expr)


State 535

  494 expr: expr_type_decl .

    $default  reduce using rule 494 (expr)


State 536

  493 expr: expr_type_info .

    $default  reduce using rule 493 (expr)


State 537

  347 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 729


State 538

  499 expr: expr_full_block .

    $default  reduce using rule 499 (expr)


State 539

  424 expr: expr_numeric_const .

    $default  reduce using rule 424 (expr)


State 540

  227 expression_any: expr_assign . "end of expression"
  262 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 730
    "end of expression"  shift, and go to state 731


State 541

  226 expression_any: expr_assign_pipe .

    $default  reduce using rule 226 (expression_any)


State 542

  498 expr: expr_named_call .

    $default  reduce using rule 498 (expr)


State 543

  497 expr: expr_method_call .

    $default  reduce using rule 497 (expr)


State 544

  469 expr: func_addr_expr .

    $default  reduce using rule 469 (expr)


State 545

  430 expr: expr_field .

    $default  reduce using rule 430 (expr)


State 546

  470 expr: expr_call .

    $default  reduce using rule 470 (expr)


State 547

   67 expression_if_one_liner: expr .
  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr .
  358            | expr . '=' expr
  359            | expr . "<-" expr
  360            | expr . ":=" expr
  361            | expr . "&=" expr
  362            | expr . "|=" expr
  363            | expr . "^=" expr
  364            | expr . "&&=" expr
  365            | expr . "||=" expr
  366            | expr . "^^=" expr
  367            | expr . "+=" expr
  368            | expr . "-=" expr
  369            | expr . "*=" expr
  370            | expr . "/=" expr
  371            | expr . "%=" expr
  372            | expr . "<<=" expr
  373            | expr . ">>=" expr
  374            | expr . "<<<=" expr
  375            | expr . ">>>=" expr
  380 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  381                 | expr . "<-" expr_assign_pipe_right
  382                 | expr . "&=" expr_assign_pipe_right
  383                 | expr . "|=" expr_assign_pipe_right
  384                 | expr . "^=" expr_assign_pipe_right
  385                 | expr . "&&=" expr_assign_pipe_right
  386                 | expr . "||=" expr_assign_pipe_right
  387                 | expr . "^^=" expr_assign_pipe_right
  388                 | expr . "+=" expr_assign_pipe_right
  389                 | expr . "-=" expr_assign_pipe_right
  390                 | expr . "*=" expr_assign_pipe_right
  391                 | expr . "/=" expr_assign_pipe_right
  392                 | expr . "%=" expr_assign_pipe_right
  393                 | expr . "<<=" expr_assign_pipe_right
  394                 | expr . ">>=" expr_assign_pipe_right
  395                 | expr . "<<<=" expr_assign_pipe_right
  396                 | expr . ">>>=" expr_assign_pipe_right
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 734
    "-="    shift, and go to state 735
    "/="    shift, and go to state 736
    "*="    shift, and go to state 737
    "%="    shift, and go to state 738
    "&="    shift, and go to state 739
    "|="    shift, and go to state 740
    "^="    shift, and go to state 741
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 747
    ">>="   shift, and go to state 748
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 753
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 762
    ">>>="  shift, and go to state 763
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 767
    "||="   shift, and go to state 768
    "^^="   shift, and go to state 769
    ".."    shift, and go to state 770
    '='     shift, and go to state 771
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 548

  431 expr: expr_mtag .

    $default  reduce using rule 431 (expr)


State 549

  420 expr_call: basic_type_declaration . '(' ')'
  421          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 786


State 550

  427 expr: make_decl .

    $default  reduce using rule 427 (expr)


State 551

  773 make_decl: make_struct_decl .

    $default  reduce using rule 773 (make_decl)


State 552

  777 make_decl: make_tuple_call .

    $default  reduce using rule 777 (make_decl)


State 553

  774 make_decl: make_dim_decl .

    $default  reduce using rule 774 (make_decl)


State 554

  775 make_decl: make_table_decl .

    $default  reduce using rule 775 (make_decl)


State 555

  776 make_decl: array_comprehension .

    $default  reduce using rule 776 (make_decl)


State 556

  597 enum_list: enum_list "name" . "end of expression"
  598          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 787
    '='                  shift, and go to state 788


State 557

  596 enum_list: enum_list "end of expression" .

    $default  reduce using rule 596 (enum_list)


State 558

  615 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 789


State 559

  618 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 595 (enum_list)

    enum_list  go to state 790


State 560

  620 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 620 (optional_structure_parent)


State 561

  538 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  540                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  542                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  543                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  630 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 791
    '['                  shift, and go to state 792

    "def"     reduce using rule 119 (optional_annotation_list)
    $default  reduce using rule 537 ($@34)

    optional_annotation_list  go to state 793
    $@34                      go to state 794


State 562

  586 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 586 (global_variable_declaration_list)


State 563

  523 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 523 (optional_field_annotation)


State 564

  504 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 661


State 565

  474 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  475     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 795


State 566

  258 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 695


State 567

  505 expr: expression_keyword .

    $default  reduce using rule 505 (expr)


State 568

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  575 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 796


State 569

  576 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 576 (let_variable_name_with_pos_list)


State 570

  577 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  578                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 797

    $default  reduce using rule 577 (let_variable_name_with_pos_list)


State 571

  579 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  580                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  581                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 406
    "implicit"           shift, and go to state 407
    "explicit"           shift, and go to state 408
    "=="                 shift, and go to state 409
    "<-"                 shift, and go to state 572
    "??"                 shift, and go to state 410
    ":="                 shift, and go to state 573
    "end of expression"  shift, and go to state 798
    '='                  shift, and go to state 574
    '?'                  shift, and go to state 411
    '&'                  shift, and go to state 412
    '-'                  shift, and go to state 413
    '['                  shift, and go to state 414
    '#'                  shift, and go to state 415

    copy_or_move_or_clone  go to state 799
    dim_list               go to state 416


State 572

  570 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 570 (copy_or_move_or_clone)


State 573

  571 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 571 (copy_or_move_or_clone)


State 574

  569 copy_or_move_or_clone: '=' .

    $default  reduce using rule 569 (copy_or_move_or_clone)


State 575

  582 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  583                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 800
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 801
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 576

  698 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 802


State 577

  721 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 803


State 578

  724 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    table_type_pair              go to state 804
    type_declaration_no_options  go to state 356
    type_declaration             go to state 805


State 579

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  699 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 806


State 580

  727 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 807


State 581

  717 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 808


State 582

  676 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 809


State 583

  685 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 810

    bitfield_bits  go to state 811


State 584

  731 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 812


State 585

  734 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 813


State 586

  738 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 814


State 587

  741 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 815


State 588

  745 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 816


State 589

  748 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 817


State 590

  751 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 609
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    tuple_type                   go to state 818
    tuple_type_list              go to state 819
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 612


State 591

  754 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 614

    variant_type       go to state 820
    variant_type_list  go to state 821


State 592

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  677 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 822


State 593

  702 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 701 ($@51)

    $@51  go to state 823


State 594

  700 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 248 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 824
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 825
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 595

  712 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 712 (type_declaration_no_options)


State 596

  713 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 713 (type_declaration_no_options)


State 597

  706 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 706 (type_declaration_no_options)


State 598

  708 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 708 (type_declaration_no_options)


State 599

  703 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 826


State 600

  711 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 711 (type_declaration_no_options)


State 601

  695 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 602

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  688 dim_list: '[' expr . ']'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 827


State 603

  689 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 828
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 604

  757 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 757 (type_declaration)


State 605

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  756 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    $default  reduce using rule 756 (type_declaration)

    dim_list  go to state 416


State 606

  682 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 829


State 607

  681 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 681 (bitfield_alias_bits)


State 608

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 830


State 609

  267 name_in_namespace: "name" .
  268                  | "name" . "::" "name"
  549 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 831

    $default  reduce using rule 267 (name_in_namespace)


State 610

  553 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 553 (tuple_alias_type_list)


State 611

  554 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 832


State 612

  548 tuple_type: type_declaration .
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 548 (tuple_type)


State 613

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 833


State 614

  555 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 834


State 615

  559 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 559 (variant_alias_type_list)


State 616

  560 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 835


State 617

  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 836


State 618

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  545 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 837


State 619

  635 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 838


State 620

  634 variable_name_with_pos_list: "name" .
  636                            | "name" . "aka" "name"

    "aka"  shift, and go to state 839

    $default  reduce using rule 634 (variable_name_with_pos_list)


State 621

  544 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 544 (function_argument_declaration)


State 622

  563 variable_declaration: variable_name_with_pos_list .
  564                     | variable_name_with_pos_list . '&'
  565                     | variable_name_with_pos_list . ':' type_declaration
  566                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  567                     | variable_name_with_pos_list . copy_or_move expr
  568                     | variable_name_with_pos_list . copy_or_move expr_pipe
  637 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  638                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 840
    ','   shift, and go to state 841
    '='   shift, and go to state 842
    ':'   shift, and go to state 843
    '&'   shift, and go to state 844

    $default  reduce using rule 563 (variable_declaration)

    copy_or_move  go to state 845


State 623

  547 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 547 (function_argument_list)


State 624

  818 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 816 ($@88)

    $@88  go to state 846


State 625

  821 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 819 ($@90)

    $@90  go to state 847


State 626

   78 expression_while_loop: "while" expr . expression_block
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 848


State 627

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 849


State 628

  274 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 272 ($@11)

    $@11  go to state 850


State 629

  276 expr_new: "new" new_type_declaration .
  277         | "new" new_type_declaration . '(' use_initializer ')'
  278         | "new" new_type_declaration . '(' expr_list ')'
  279         | "new" new_type_declaration . '(' make_struct_single ')'
  280         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 851

    '('       [reduce using rule 276 (expr_new)]
    $default  reduce using rule 276 (expr_new)


State 630

  275 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 275 (new_type_declaration)


State 631

  281 expr_new: "new" make_decl .

    $default  reduce using rule 281 (expr_new)


State 632

  323 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  324               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  325               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 852


State 633

  326 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  327               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 853
    '('  shift, and go to state 854


State 634

  322 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 320 ($@19)

    $@19  go to state 855


State 635

  844 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 856


State 636

  847 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 857


State 637

  850 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    '<'  shift, and go to state 858


State 638

  854 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    $default  reduce using rule 852 ($@104)

    $@104  go to state 859


State 639

  851 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 860
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 640

  286 expression_return_no_pipe: "return" "<-" . expr_list
  289 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 861
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 862
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 644
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 641

  288 expression_return: "return" expr_pipe .

    $default  reduce using rule 288 (expression_return)


State 642

  285 expression_return_no_pipe: "return" expr_list .
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 863

    $default  reduce using rule 285 (expression_return_no_pipe)


State 643

  262 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 730


State 644

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  329 expr_list: expr .
  357 expr_assign: expr .
  358            | expr . '=' expr
  359            | expr . "<-" expr
  360            | expr . ":=" expr
  361            | expr . "&=" expr
  362            | expr . "|=" expr
  363            | expr . "^=" expr
  364            | expr . "&&=" expr
  365            | expr . "||=" expr
  366            | expr . "^^=" expr
  367            | expr . "+=" expr
  368            | expr . "-=" expr
  369            | expr . "*=" expr
  370            | expr . "/=" expr
  371            | expr . "%=" expr
  372            | expr . "<<=" expr
  373            | expr . ">>=" expr
  374            | expr . "<<<=" expr
  375            | expr . ">>>=" expr
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 864
    "-="    shift, and go to state 865
    "/="    shift, and go to state 866
    "*="    shift, and go to state 867
    "%="    shift, and go to state 868
    "&="    shift, and go to state 869
    "|="    shift, and go to state 870
    "^="    shift, and go to state 871
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 872
    ">>="   shift, and go to state 873
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 874
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 875
    ">>>="  shift, and go to state 876
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 877
    "||="   shift, and go to state 878
    "^^="   shift, and go to state 879
    ".."    shift, and go to state 770
    '='     shift, and go to state 880
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    " <|"     reduce using rule 357 (expr_assign)
    $default  reduce using rule 329 (expr_list)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 645

  295 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 881


State 646

  866 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  867                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 882


State 647

  865 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 252 (optional_expr_map_tuple_list)

    string_builder                go to state 505
    expr_reader                   go to state 506
    optional_expr_map_tuple_list  go to state 883
    expression_keyword            go to state 567
    name_in_namespace             go to state 522
    expr_new                      go to state 524
    expr_cast                     go to state 534
    expr_type_decl                go to state 535
    expr_type_info                go to state 536
    block_or_lambda               go to state 537
    expr_full_block               go to state 538
    expr_numeric_const            go to state 539
    expr_named_call               go to state 542
    expr_method_call              go to state 543
    func_addr_expr                go to state 544
    expr_field                    go to state 545
    expr_call                     go to state 546
    expr                          go to state 692
    expr_mtag                     go to state 548
    basic_type_declaration        go to state 549
    make_decl                     go to state 550
    make_struct_decl              go to state 551
    make_map_tuple                go to state 700
    make_tuple_call               go to state 552
    make_dim_decl                 go to state 553
    expr_map_tuple_list           go to state 884
    make_table_decl               go to state 554
    array_comprehension           go to state 555


State 648

  271 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 885
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 649

  270 expression_delete: "delete" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 270 (expression_delete)


State 650

  472 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 886
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 651

   79 expression_with: "with" expr . expression_block
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 887


State 652

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 888


State 653

  313 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 311 ($@13)

    $@13  go to state 889


State 654

  316 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 314 ($@15)

    $@15  go to state 890


State 655

  473 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 891
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 656

  243 expression_any: "pass" "end of expression" .

    $default  reduce using rule 243 (expression_any)


State 657

  319 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 317 ($@17)

    $@17  go to state 892


State 658

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 893


State 659

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 894


State 660

   56 expression_goto: "goto" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 56 (expression_goto)


State 661

  504 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 895
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 662

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 663

  858 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 856 ($@106)

    $@106  go to state 896


State 664

  855 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 897
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 665

  827 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 825 ($@94)

    $@94  go to state 898


State 666

  836 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 834 ($@96)

    $@96  go to state 899


State 667

  833 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 900
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 668

  824 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    $default  reduce using rule 822 ($@92)

    $@92  go to state 901


State 669

  222 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  474 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  475     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 902


State 670

  291 expression_yield_no_pipe: "yield" "<-" . expr
  294 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 903
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 904
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 671

  293 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 293 (expression_yield)


State 672

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  290 expression_yield_no_pipe: "yield" expr .
  357 expr_assign: expr .
  358            | expr . '=' expr
  359            | expr . "<-" expr
  360            | expr . ":=" expr
  361            | expr . "&=" expr
  362            | expr . "|=" expr
  363            | expr . "^=" expr
  364            | expr . "&&=" expr
  365            | expr . "||=" expr
  366            | expr . "^^=" expr
  367            | expr . "+=" expr
  368            | expr . "-=" expr
  369            | expr . "*=" expr
  370            | expr . "/=" expr
  371            | expr . "%=" expr
  372            | expr . "<<=" expr
  373            | expr . ">>=" expr
  374            | expr . "<<<=" expr
  375            | expr . ">>>=" expr
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 864
    "-="    shift, and go to state 865
    "/="    shift, and go to state 866
    "*="    shift, and go to state 867
    "%="    shift, and go to state 868
    "&="    shift, and go to state 869
    "|="    shift, and go to state 870
    "^="    shift, and go to state 871
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 872
    ">>="   shift, and go to state 873
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 874
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 875
    ">>>="  shift, and go to state 876
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 877
    "||="   shift, and go to state 878
    "^^="   shift, and go to state 879
    ".."    shift, and go to state 770
    '='     shift, and go to state 880
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    " <|"     reduce using rule 357 (expr_assign)
    $default  reduce using rule 290 (expression_yield_no_pipe)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 673

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  458     | "++" expr .
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 458 (expr)


State 674

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  459     | "--" expr .
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 459 (expr)


State 675

  335 block_or_lambda: '@' .
  336                | '@' . '@'

    '@'  shift, and go to state 905

    $default  reduce using rule 335 (block_or_lambda)


State 676

  345 expr_block: expression_block .

    $default  reduce using rule 345 (expr_block)


State 677

  346 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 906


State 678

  265 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 265 (expr_pipe)


State 679

  263 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 263 (expr_pipe)


State 680

  264 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 264 (expr_pipe)


State 681

  506 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 907
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 682

  507 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 908
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 683

  508 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 909
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 684

  509 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 910
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 685

  510 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 911
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 686

  512 expr_mtag: "$c" '(' . expr ')' '(' ')'
  513          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 912
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 687

  874 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 913


State 688

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  810 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  811                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  812                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  813                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  840 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 406
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "where"                           shift, and go to state 914
    "reinterpret"                     shift, and go to state 457
    "implicit"                        shift, and go to state 407
    "explicit"                        shift, and go to state 408
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "=="                              shift, and go to state 409
    "??"                              shift, and go to state 410
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 915
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 916
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '?'                               shift, and go to state 411
    '&'                               shift, and go to state 412
    '-'                               shift, and go to state 917
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 918
    '('                               shift, and go to state 919
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 415

    $default  reduce using rule 794 (optional_block)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 920
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    dim_list                go to state 416
    make_decl               go to state 550
    make_struct_fields      go to state 921
    make_struct_dim         go to state 922
    optional_block          go to state 923
    make_struct_decl        go to state 551
    make_tuple              go to state 924
    make_tuple_call         go to state 552
    make_dim                go to state 925
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 689

  875 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 926


State 690

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  814 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  815                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  841 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 406
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "implicit"                        shift, and go to state 407
    "explicit"                        shift, and go to state 408
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "=="                              shift, and go to state 409
    "??"                              shift, and go to state 410
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 915
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 916
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '?'                               shift, and go to state 411
    '&'                               shift, and go to state 412
    '-'                               shift, and go to state 917
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 918
    '('                               shift, and go to state 927
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 415

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 920
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    dim_list                go to state 416
    make_decl               go to state 550
    make_struct_fields      go to state 921
    make_struct_dim         go to state 928
    make_struct_decl        go to state 551
    make_tuple              go to state 924
    make_tuple_call         go to state 552
    make_dim                go to state 929
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 691

  877 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 930


State 692

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  831 make_map_tuple: expr . "=>" expr
  832               | expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "=>"   shift, and go to state 931
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 832 (make_map_tuple)


State 693

  859 make_table: make_map_tuple .

    $default  reduce using rule 859 (make_table)


State 694

  860 make_table: make_table . "end of expression" make_map_tuple
  864 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 932
    "end of expression"  shift, and go to state 933
    ";}}"                shift, and go to state 934

    optional_trailing_semicolon_cur_cur  go to state 935


State 695

  258 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 256 ($@7)

    $@7  go to state 936


State 696

  247 expr_keyword: "keyword" expr . expression_block
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 937


State 697

  261 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 259 ($@9)

    $@9  go to state 938


State 698

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 939
    "{"                   shift, and go to state 940

    character_sequence  go to state 941


State 699

  876 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 942


State 700

  861 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 861 (expr_map_tuple_list)


State 701

  862 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  863 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 943

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 944


State 702

  219 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 945


State 703

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  435 expr: '-' expr .
  436     | expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 435 (expr)


State 704

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  434 expr: '+' expr .
  436     | expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 434 (expr)


State 705

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  471     | '*' expr .
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 471 (expr)


State 706

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  433 expr: '~' expr .
  436     | expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 433 (expr)


State 707

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  432 expr: '!' expr .
  436     | expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 432 (expr)


State 708

  872 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 946


State 709

  873 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 947


State 710

  330 expr_list: expr_list . ',' expr
  839 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 948

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 949


State 711

  329 expr_list: expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 329 (expr_list)


State 712

  330 expr_list: expr_list . ',' expr
  462 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 948

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 950


State 713

  336 block_or_lambda: '@' '@' .
  403 func_addr_expr: '@' '@' . func_addr_name
  406               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  409               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  521 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 951
    "$c"    shift, and go to state 952
    "name"  shift, and go to state 59
    '<'     shift, and go to state 953

    $default  reduce using rule 336 (block_or_lambda)

    name_in_namespace  go to state 954
    func_addr_name     go to state 955


State 714

  241 expression_any: expression_label "end of expression" .

    $default  reduce using rule 241 (expression_any)


State 715

  242 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 242 (expression_any)


State 716

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 956


State 717

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 957


State 718

  349 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 348 ($@21)

    $@21  go to state 958


State 719

  221 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 221 (expr_call_pipe)


State 720

  503 expr: name_in_namespace "name" .

    $default  reduce using rule 503 (expr)


State 721

  397 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  398                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  417 expr_call: name_in_namespace '(' . ')'
  418          | name_in_namespace '(' . make_struct_single ')'
  419          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 915
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 916
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 959
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 960
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 961
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 962
    make_struct_single      go to state 963
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 722

  228 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 228 (expression_any)


State 723

  235 expression_any: expression_break "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 724

  236 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 725

  287 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 287 (expression_return)


State 726

  292 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 292 (expression_yield)


State 727

  301 optional_in_scope: "inscope" .

    $default  reduce using rule 301 (optional_in_scope)


State 728

  309 expression_let: kwd_let optional_in_scope . let_variable_declaration
  310               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 305
    "[["    shift, and go to state 964
    "name"  shift, and go to state 306
    '('     shift, and go to state 965

    tuple_expansion_variable_declaration  go to state 966
    let_variable_name_with_pos_list       go to state 307
    let_variable_declaration              go to state 967


State 729

  347 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 968

    $default  reduce using rule 343 (optional_capture_list)

    optional_capture_list  go to state 969


State 730

  262 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 970


State 731

  227 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 227 (expression_any)


State 732

  480 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr "is" . basic_type_declaration
  482     | expr "is" . "name"
  520 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 971
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 972
    "name"      shift, and go to state 973

    basic_type_declaration  go to state 974


State 733

  483 expr: expr "as" . "name"
  486     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  487     | expr "as" . basic_type_declaration
  518 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 975
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 976
    "name"      shift, and go to state 977

    basic_type_declaration  go to state 978


State 734

  367 expr_assign: expr "+=" . expr
  388 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 983
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 984
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 735

  368 expr_assign: expr "-=" . expr
  389 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 985
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 986
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 736

  370 expr_assign: expr "/=" . expr
  391 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 987
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 988
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 737

  369 expr_assign: expr "*=" . expr
  390 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 989
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 990
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 738

  371 expr_assign: expr "%=" . expr
  392 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 991
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 992
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 739

  361 expr_assign: expr "&=" . expr
  382 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 993
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 994
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 740

  362 expr_assign: expr "|=" . expr
  383 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 995
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 996
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 741

  363 expr_assign: expr "^=" . expr
  384 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 997
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 998
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 742

  436 expr: expr "<<" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 999
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 743

  437 expr: expr ">>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1000
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 744

  460 expr: expr "++" .

    $default  reduce using rule 460 (expr)


State 745

  461 expr: expr "--" .

    $default  reduce using rule 461 (expr)


State 746

  449 expr: expr "<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1001
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 747

  372 expr_assign: expr "<<=" . expr
  393 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1003
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 748

  373 expr_assign: expr ">>=" . expr
  394 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1004
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1005
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 749

  450 expr: expr ">=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1006
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 750

  447 expr: expr "==" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1007
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 751

  448 expr: expr "!=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1008
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 752

  399 expr_method_call: expr "->" . "name" '(' ')'
  400                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1009


State 753

  359 expr_assign: expr "<-" . expr
  381 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1010
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1011
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 754

  476 expr: expr "??" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1012
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 755

  467 expr: expr "?." . "name"
  515 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1013
    "name"  shift, and go to state 1014


State 756

  465 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1015
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 757

  500 expr: expr "<|" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1016
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 758

  501 expr: expr "|>" . expr
  502     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1017
    expr_mtag               go to state 548
    basic_type_declaration  go to state 1018
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 759

  360 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1019
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 760

  438 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1020
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 761

  439 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1021
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 762

  374 expr_assign: expr "<<<=" . expr
  395 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1022
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1023
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 763

  375 expr_assign: expr ">>>=" . expr
  396 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1024
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1025
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 764

  454 expr: expr "&&" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1026
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 765

  455 expr: expr "||" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1027
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 766

  456 expr: expr "^^" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1028
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 767

  364 expr_assign: expr "&&=" . expr
  385 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1029
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1030
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 768

  365 expr_assign: expr "||=" . expr
  386 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1031
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1032
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 769

  366 expr_assign: expr "^^=" . expr
  387 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1033
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1034
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 770

  457 expr: expr ".." . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1035
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 771

  358 expr_assign: expr '=' . expr
  380 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 979
    "@ <|"                            shift, and go to state 980
    "@@ <|"                           shift, and go to state 981
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 982
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1036
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1037
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 772

  477 expr: expr '?' . expr ':' expr
  488     | expr '?' . "as" "name"
  491     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr '?' . "as" basic_type_declaration
  519 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "as"                              shift, and go to state 1038
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1039
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 773

  452 expr: expr '|' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1040
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 774

  453 expr: expr '^' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1041
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 775

  451 expr: expr '&' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1042
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 776

  445 expr: expr '<' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1043
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 777

  446 expr: expr '>' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1044
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 778

  441 expr: expr '-' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1045
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 779

  440 expr: expr '+' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1046
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 780

  442 expr: expr '*' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1047
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 781

  443 expr: expr '/' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1048
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 782

  444 expr: expr '%' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1049
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 783

  410 expr_field: expr '.' . "name"
  411           | expr '.' . '.' "name"
  412           | expr '.' . "name" '(' ')'
  413           | expr '.' . "name" '(' expr_list ')'
  416           | expr '.' . $@26 error $@27
  464 expr: expr '.' . '[' expr ']'
  466     | expr '.' . "?[" expr ']'
  468     | expr '.' . "?." "name"
  514 expr_mtag: expr '.' . "$f" '(' expr ')'
  516          | expr '.' . '.' "$f" '(' expr ')'
  517          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1050
    "?["    shift, and go to state 1051
    "$f"    shift, and go to state 1052
    "name"  shift, and go to state 1053
    '.'     shift, and go to state 1054
    '['     shift, and go to state 1055

    $default  reduce using rule 414 ($@26)

    $@26  go to state 1056


State 784

  463 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1057
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 785

  220 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 220 (expr_call_pipe)


State 786

  420 expr_call: basic_type_declaration '(' . ')'
  421          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1058
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1059
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 787

  597 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 597 (enum_list)


State 788

  598 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1060
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 789

  615 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 615 (enum_declaration)


State 790

  596 enum_list: enum_list . "end of expression"
  597          | enum_list . "name" "end of expression"
  598          | enum_list . "name" '=' expr "end of expression"
  618 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 556
    "end of expression"  shift, and go to state 557

    $default  reduce using rule 617 ($@44)

    $@44  go to state 1061


State 791

  630 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 630 (optional_struct_variable_declaration_list)


State 792

  120 optional_annotation_list: '[' . annotation_list ']'
  543 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1062
    name_in_namespace             go to state 70


State 793

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  542                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1063


State 794

  538 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 522 (optional_field_annotation)

    metadata_argument_list          go to state 220
    optional_field_annotation       go to state 1064
    structure_variable_declaration  go to state 1065


State 795

  474 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  475     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1066


State 796

  575 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 575 (let_variable_name_with_pos_list)


State 797

  578 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1067


State 798

  579 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 579 (let_variable_declaration)


State 799

  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  581                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 1068
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1069
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 800

  583 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 583 (let_variable_declaration)


State 801

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr .
  358            | expr . '=' expr
  359            | expr . "<-" expr
  360            | expr . ":=" expr
  361            | expr . "&=" expr
  362            | expr . "|=" expr
  363            | expr . "^=" expr
  364            | expr . "&&=" expr
  365            | expr . "||=" expr
  366            | expr . "^^=" expr
  367            | expr . "+=" expr
  368            | expr . "-=" expr
  369            | expr . "*=" expr
  370            | expr . "/=" expr
  371            | expr . "%=" expr
  372            | expr . "<<=" expr
  373            | expr . ">>=" expr
  374            | expr . "<<<=" expr
  375            | expr . ">>>=" expr
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  582 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "+="                 shift, and go to state 864
    "-="                 shift, and go to state 865
    "/="                 shift, and go to state 866
    "*="                 shift, and go to state 867
    "%="                 shift, and go to state 868
    "&="                 shift, and go to state 869
    "|="                 shift, and go to state 870
    "^="                 shift, and go to state 871
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    "<<="                shift, and go to state 872
    ">>="                shift, and go to state 873
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "<-"                 shift, and go to state 874
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    ":="                 shift, and go to state 759
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "<<<="               shift, and go to state 875
    ">>>="               shift, and go to state 876
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    "&&="                shift, and go to state 877
    "||="                shift, and go to state 878
    "^^="                shift, and go to state 879
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1070
    '='                  shift, and go to state 880
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784
    '$'                  shift, and go to state 503
    '@'                  shift, and go to state 675

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 802

  698 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1071


State 803

  721 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1072


State 804

  724 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1073


State 805

  686 table_type_pair: type_declaration .
  687                | type_declaration . "end of expression" type_declaration
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 1074
    '|'                  shift, and go to state 417

    $default  reduce using rule 686 (table_type_pair)


State 806

  699 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 699 (type_declaration_no_options)


State 807

  727 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1075


State 808

  717 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1076


State 809

  676 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 676 (auto_type_declaration)


State 810

  678 bitfield_bits: "name" .

    $default  reduce using rule 678 (bitfield_bits)


State 811

  679 bitfield_bits: bitfield_bits . "end of expression" "name"
  685 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1077
    '>'                  shift, and go to state 1078


State 812

  731 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1079


State 813

  734 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1080


State 814

  738 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1081


State 815

  741 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1082


State 816

  745 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1083


State 817

  748 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1084


State 818

  550 tuple_type_list: tuple_type .

    $default  reduce using rule 550 (tuple_type_list)


State 819

  551 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  751 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 1085
    '>'                  shift, and go to state 1086


State 820

  556 variant_type_list: variant_type .

    $default  reduce using rule 556 (variant_type_list)


State 821

  557 variant_type_list: variant_type_list . "end of expression" variant_type
  754 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 1087
    '>'                  shift, and go to state 1088


State 822

  677 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 677 (auto_type_declaration)


State 823

  702 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1089
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1090


State 824

  700 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1091


State 825

  249 optional_expr_list: expr_list . optional_comma
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 948

    ','       [reduce using rule 870 (optional_comma)]
    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 1092


State 826

  703 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 703 (type_declaration_no_options)


State 827

  688 dim_list: '[' expr ']' .

    $default  reduce using rule 688 (dim_list)


State 828

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  689 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1093


State 829

  682 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 682 (bitfield_alias_bits)


State 830

  772 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 772 (bitfield_alias_declaration)


State 831

  549 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1094


State 832

  554 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 554 (tuple_alias_type_list)


State 833

  762 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 762 (tuple_alias_declaration)


State 834

  555 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1095


State 835

  560 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 560 (variant_alias_type_list)


State 836

  767 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 767 (variant_alias_declaration)


State 837

  545 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 545 (function_argument_declaration)


State 838

  635 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1096
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 839

  636 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1097


State 840

  562 copy_or_move: "<-" .

    $default  reduce using rule 562 (copy_or_move)


State 841

  637 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  638                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1098


State 842

  561 copy_or_move: '=' .

    $default  reduce using rule 561 (copy_or_move)


State 843

  565 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  566                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1099


State 844

  564 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 564 (variable_declaration)


State 845

  567 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  568                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 1100
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 643
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1101
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 846

  818 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1102


State 847

  821 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1103


State 848

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 849

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  637 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  638                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1104
    ','   shift, and go to state 841


State 850

  274 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1105


State 851

  277 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  278         | "new" new_type_declaration '(' . expr_list ')'
  279         | "new" new_type_declaration '(' . make_struct_single ')'
  280         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "uninitialized"                   shift, and go to state 1106
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 915
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 916
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 808 (use_initializer)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1107
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 962
    make_struct_single      go to state 1108
    use_initializer         go to state 1109
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 852

  323 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  324               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  325               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '<'                               shift, and go to state 1110
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1111
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 853

  327 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1112


State 854

  326 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1113
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 855

  322 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1114


State 856

  844 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 842 ($@98)

    $@98  go to state 1115


State 857

  847 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 845 ($@100)

    $@100  go to state 1116


State 858

  850 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    $default  reduce using rule 848 ($@102)

    $@102  go to state 1117


State 859

  854 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1118


State 860

  330 expr_list: expr_list . ',' expr
  851 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 948

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 1119


State 861

  289 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 289 (expression_return)


State 862

  286 expression_return_no_pipe: "return" "<-" expr_list .
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 863

    $default  reduce using rule 286 (expression_return_no_pipe)


State 863

  330 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1120
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 864

  367 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1121
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 865

  368 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1122
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 866

  370 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1123
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 867

  369 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1124
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 868

  371 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1125
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 869

  361 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1126
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 870

  362 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1127
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 871

  363 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1128
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 872

  372 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1129
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 873

  373 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1130
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 874

  359 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1131
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 875

  374 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1132
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 876

  375 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1133
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 877

  364 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1134
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 878

  365 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1135
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 879

  366 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1136
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 880

  358 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1137
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 881

  295 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1138


State 882

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  866 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  867                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 406
    "implicit"           shift, and go to state 407
    "explicit"           shift, and go to state 408
    "=="                 shift, and go to state 409
    "??"                 shift, and go to state 410
    "end of expression"  shift, and go to state 1139
    '?'                  shift, and go to state 411
    '&'                  shift, and go to state 412
    '>'                  shift, and go to state 1140
    '-'                  shift, and go to state 413
    '['                  shift, and go to state 414
    '#'                  shift, and go to state 415

    dim_list  go to state 416


State 883

  865 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1141


State 884

  253 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  862 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 943

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 1142


State 885

  271 expression_delete: "delete" "explicit" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 271 (expression_delete)


State 886

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  472     | "deref" '(' expr . ')'
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1143


State 887

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 888

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1144


State 889

  313 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1145


State 890

  316 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1146


State 891

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  473     | "addr" '(' expr . ')'
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1147


State 892

  319 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1148


State 893

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 894

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 895

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  504     | "unsafe" '(' expr . ')'
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1149


State 896

  858 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1150


State 897

  330 expr_list: expr_list . ',' expr
  855 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 948

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 1151


State 898

  827 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1152


State 899

  836 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1153


State 900

  330 expr_list: expr_list . ',' expr
  833 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 948

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 1154


State 901

  824 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1155


State 902

  222 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  474 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  475     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1156
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 903

  294 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 294 (expression_yield)


State 904

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  291 expression_yield_no_pipe: "yield" "<-" expr .
  357 expr_assign: expr .
  358            | expr . '=' expr
  359            | expr . "<-" expr
  360            | expr . ":=" expr
  361            | expr . "&=" expr
  362            | expr . "|=" expr
  363            | expr . "^=" expr
  364            | expr . "&&=" expr
  365            | expr . "||=" expr
  366            | expr . "^^=" expr
  367            | expr . "+=" expr
  368            | expr . "-=" expr
  369            | expr . "*=" expr
  370            | expr . "/=" expr
  371            | expr . "%=" expr
  372            | expr . "<<=" expr
  373            | expr . ">>=" expr
  374            | expr . "<<<=" expr
  375            | expr . ">>>=" expr
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 864
    "-="    shift, and go to state 865
    "/="    shift, and go to state 866
    "*="    shift, and go to state 867
    "%="    shift, and go to state 868
    "&="    shift, and go to state 869
    "|="    shift, and go to state 870
    "^="    shift, and go to state 871
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 872
    ">>="   shift, and go to state 873
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 874
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 875
    ">>>="  shift, and go to state 876
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 877
    "||="   shift, and go to state 878
    "^^="   shift, and go to state 879
    ".."    shift, and go to state 770
    '='     shift, and go to state 880
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    " <|"     reduce using rule 357 (expr_assign)
    $default  reduce using rule 291 (expression_yield_no_pipe)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 905

  336 block_or_lambda: '@' '@' .

    $default  reduce using rule 336 (block_or_lambda)


State 906

  346 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 968

    $default  reduce using rule 343 (optional_capture_list)

    optional_capture_list  go to state 1157


State 907

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  506 expr_mtag: "$$" '(' expr . ')'
  514          | expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1158


State 908

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  507 expr_mtag: "$i" '(' expr . ')'
  514          | expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1159


State 909

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  508 expr_mtag: "$v" '(' expr . ')'
  514          | expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1160


State 910

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  509 expr_mtag: "$b" '(' expr . ')'
  514          | expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1161


State 911

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  510 expr_mtag: "$a" '(' expr . ')'
  514          | expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1162


State 912

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  512 expr_mtag: "$c" '(' expr . ')' '(' ')'
  513          | "$c" '(' expr . ')' '(' expr_list ')'
  514          | expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1163


State 913

  637 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  638                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  874 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1164
    ','   shift, and go to state 841


State 914

  795 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 1165


State 915

  782 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  783                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1166


State 916

  267 name_in_namespace: "name" .
  268                  | "name" . "::" "name"
  778 make_struct_fields: "name" . copy_or_move expr
  779                   | "name" . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1167
    "::"  shift, and go to state 98
    '='   shift, and go to state 842

    $default  reduce using rule 267 (name_in_namespace)

    copy_or_move  go to state 1168


State 917

  435 expr: '-' . expr
  703 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  706                            | type_declaration_no_options '-' . "const"
  708                            | type_declaration_no_options '-' . '&'
  711                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 597
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '&'                               shift, and go to state 598
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 1169
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 600

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 703
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 918

  688 dim_list: '[' . expr ']'
  695 type_declaration_no_options: type_declaration_no_options '[' . ']'
  839 make_dim_decl: '[' . expr_list optional_comma ']'
  872 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  873                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 601
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1170
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 919

  462 expr: '(' . expr_list optional_comma ')'
  812 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  813                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1171
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 712
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 920

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  828 make_tuple: expr .
  829           | expr . "=>" expr

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "=>"   shift, and go to state 1172
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 828 (make_tuple)


State 921

  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  788 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1173

    $default  reduce using rule 788 (make_struct_dim)


State 922

  789 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  810 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 914
    "end of expression"  shift, and go to state 1174

    $default  reduce using rule 794 (optional_block)

    optional_block  go to state 1175


State 923

  811 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1176
    ",]]"  shift, and go to state 1177
    ']'    shift, and go to state 1178

    optional_trailing_delim_sqr_sqr  go to state 1179


State 924

  830 make_tuple: make_tuple . ',' expr
  837 make_dim: make_tuple .

    ','  shift, and go to state 1180

    $default  reduce using rule 837 (make_dim)


State 925

  838 make_dim: make_dim . "end of expression" make_tuple
  840 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1181
    ";]]"                shift, and go to state 1182
    ']'                  shift, and go to state 1183

    optional_trailing_semicolon_sqr_sqr  go to state 1184


State 926

  637 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  638                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  875 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1185
    ','   shift, and go to state 841


State 927

  462 expr: '(' . expr_list optional_comma ')'
  815 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1186
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 712
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 928

  789 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  814 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 914
    "end of expression"  shift, and go to state 1174

    $default  reduce using rule 794 (optional_block)

    optional_block  go to state 1187


State 929

  838 make_dim: make_dim . "end of expression" make_tuple
  841 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1188
    "end of expression"  shift, and go to state 1181
    ";}]"                shift, and go to state 1189

    optional_trailing_semicolon_cur_sqr  go to state 1190


State 930

  637 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  638                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  877 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1191
    ','   shift, and go to state 841


State 931

  831 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1192
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 932

  796 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1193


State 933

  860 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1194
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 934

  797 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 797 (optional_trailing_semicolon_cur_cur)


State 935

  864 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 864 (make_table_decl)


State 936

  258 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1195
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1090


State 937

  247 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 247 (expr_keyword)


State 938

  261 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1196
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1090


State 939

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 940

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1197
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 941

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223

    $default  reduce using rule 29 (string_builder_body)


State 942

  637 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  638                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  876 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1198
    ','   shift, and go to state 841


State 943

  862 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  871 optional_comma: ',' .

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 871 (optional_comma)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1199
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 944

  863 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1200


State 945

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 244 (expressions)

    expressions  go to state 1201


State 946

  637 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  638                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  872 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1202
    ','   shift, and go to state 841


State 947

  873 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_name_with_pos_list  go to state 1203


State 948

  330 expr_list: expr_list ',' . expr
  871 optional_comma: ',' .

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 871 (optional_comma)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1120
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 949

  839 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1204


State 950

  462 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1205


State 951

  402 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1206


State 952

  521 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1207


State 953

  406 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  409               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 407 ($@24)
    '>'       reduce using rule 407 ($@24)
    '('       reduce using rule 407 ($@24)
    $default  reduce using rule 404 ($@22)

    $@22  go to state 1208
    $@24  go to state 1209


State 954

  401 func_addr_name: name_in_namespace .

    $default  reduce using rule 401 (func_addr_name)


State 955

  403 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 403 (func_addr_expr)


State 956

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1210
    "elif"         shift, and go to state 1211
    "static_elif"  shift, and go to state 1212

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1213
    expression_else      go to state 1214


State 957

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1215
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 958

  349 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 1216


State 959

  397 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  839 make_dim_decl: '[' . expr_list optional_comma ']'
  872 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  873                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 915
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 916
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 1217
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 960

  417 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 417 (expr_call)


State 961

  330 expr_list: expr_list . ',' expr
  398 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  419 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1218
    ')'  shift, and go to state 1219


State 962

  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  787 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1173

    $default  reduce using rule 787 (make_struct_single)


State 963

  418 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1220


State 964

  305 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  307                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1221

    tuple_expansion  go to state 1222


State 965

  306 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1221

    tuple_expansion  go to state 1223


State 966

  310 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 310 (expression_let)


State 967

  309 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 309 (expression_let)


State 968

  344 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1224
    ":="  shift, and go to state 1225
    '='   shift, and go to state 1226
    '&'   shift, and go to state 1227

    capture_entry  go to state 1228
    capture_list   go to state 1229


State 969

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1230


State 970

  262 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 262 (expr_pipe)


State 971

  480 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1231


State 972

  520 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1232


State 973

  482 expr: expr "is" "name" .

    $default  reduce using rule 482 (expr)


State 974

  481 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 481 (expr)


State 975

  486 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1233


State 976

  518 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1234


State 977

  483 expr: expr "as" "name" .

    $default  reduce using rule 483 (expr)


State 978

  487 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 487 (expr)


State 979

  378 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 1235


State 980

  376 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 1236


State 981

  377 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 675

    expression_block  go to state 676
    block_or_lambda   go to state 677
    expr_block        go to state 1237


State 982

  379 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 379 (expr_assign_pipe_right)


State 983

  388 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 984

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr "+=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 985

  389 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 986

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "-=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 987

  391 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 391 (expr_assign_pipe)


State 988

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  370 expr_assign: expr "/=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 370 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 989

  390 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 990

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  369 expr_assign: expr "*=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 369 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 991

  392 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 392 (expr_assign_pipe)


State 992

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr "%=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 993

  382 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 994

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr "&=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 995

  383 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 996

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "|=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 997

  384 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 998

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "^=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 999

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  436     | expr "<<" expr .
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '-'   shift, and go to state 778
    '+'   shift, and go to state 779
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 436 (expr)


State 1000

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  437     | expr ">>" expr .
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '-'   shift, and go to state 778
    '+'   shift, and go to state 779
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 437 (expr)


State 1001

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  449     | expr "<=" expr .
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 449 (expr)


State 1002

  393 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 393 (expr_assign_pipe)


State 1003

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  372 expr_assign: expr "<<=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 372 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1004

  394 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 394 (expr_assign_pipe)


State 1005

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  373 expr_assign: expr ">>=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 373 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1006

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  450     | expr ">=" expr .
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 450 (expr)


State 1007

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  447     | expr "==" expr .
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 447 (expr)


State 1008

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  448     | expr "!=" expr .
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 448 (expr)


State 1009

  399 expr_method_call: expr "->" "name" . '(' ')'
  400                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1238


State 1010

  381 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 1011

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "<-" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1012

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  476     | expr "??" expr .
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 476 (expr)


State 1013

  515 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1239


State 1014

  467 expr: expr "?." "name" .

    $default  reduce using rule 467 (expr)


State 1015

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  465     | expr "?[" expr . ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1240


State 1016

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  500     | expr "<|" expr .
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 500 (expr)


State 1017

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  501     | expr "|>" expr .
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 752
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 501 (expr)


State 1018

  420 expr_call: basic_type_declaration . '(' ')'
  421          | basic_type_declaration . '(' expr_list ')'
  502 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 786

    $default  reduce using rule 502 (expr)


State 1019

  360 expr_assign: expr ":=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 360 (expr_assign)


State 1020

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  438     | expr "<<<" expr .
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '-'   shift, and go to state 778
    '+'   shift, and go to state 779
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 438 (expr)


State 1021

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  439     | expr ">>>" expr .
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '-'   shift, and go to state 778
    '+'   shift, and go to state 779
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 439 (expr)


State 1022

  395 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 395 (expr_assign_pipe)


State 1023

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  374 expr_assign: expr "<<<=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 374 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1024

  396 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 396 (expr_assign_pipe)


State 1025

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  375 expr_assign: expr ">>>=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 375 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1026

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  454     | expr "&&" expr .
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 454 (expr)


State 1027

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  455     | expr "||" expr .
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "^^"   shift, and go to state 766
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 455 (expr)


State 1028

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  456     | expr "^^" expr .
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 456 (expr)


State 1029

  385 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 1030

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr "&&=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1031

  386 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 1032

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "||=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1033

  387 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 1034

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr "^^=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1035

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  457     | expr ".." expr .
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    ".."  error (nonassociative)

    $default  reduce using rule 457 (expr)


State 1036

  380 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 1037

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr '=' expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    '$'    shift, and go to state 503
    '@'    shift, and go to state 675

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1038

  488 expr: expr '?' "as" . "name"
  491     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  492     | expr '?' "as" . basic_type_declaration
  519 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1241
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 1242
    "name"      shift, and go to state 1243

    basic_type_declaration  go to state 1244


State 1039

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  477     | expr '?' expr . ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    ':'    shift, and go to state 1245
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784


State 1040

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  452     | expr '|' expr .
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 452 (expr)


State 1041

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  453     | expr '^' expr .
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 453 (expr)


State 1042

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  451     | expr '&' expr .
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 451 (expr)


State 1043

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  445     | expr '<' expr .
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 445 (expr)


State 1044

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  446     | expr '>' expr .
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 446 (expr)


State 1045

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  441     | expr '-' expr .
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 441 (expr)


State 1046

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  440     | expr '+' expr .
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '*'   shift, and go to state 780
    '/'   shift, and go to state 781
    '%'   shift, and go to state 782
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 440 (expr)


State 1047

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  442     | expr '*' expr .
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 442 (expr)


State 1048

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  443     | expr '/' expr .
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 443 (expr)


State 1049

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  444     | expr '%' expr .
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 732
    "as"  shift, and go to state 733
    "++"  shift, and go to state 744
    "--"  shift, and go to state 745
    "->"  shift, and go to state 752
    "??"  shift, and go to state 754
    "?."  shift, and go to state 755
    "?["  shift, and go to state 756
    "<|"  shift, and go to state 757
    "|>"  shift, and go to state 758
    '.'   shift, and go to state 783
    '['   shift, and go to state 784

    $default  reduce using rule 444 (expr)


State 1050

  468 expr: expr '.' "?." . "name"
  517 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1246
    "name"  shift, and go to state 1247


State 1051

  466 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1248
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1052

  514 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1249


State 1053

  410 expr_field: expr '.' "name" .
  412           | expr '.' "name" . '(' ')'
  413           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1250

    '('       [reduce using rule 410 (expr_field)]
    $default  reduce using rule 410 (expr_field)


State 1054

  411 expr_field: expr '.' '.' . "name"
  516 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1251
    "name"  shift, and go to state 1252


State 1055

  464 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1253
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1056

  416 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1254


State 1057

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  463     | expr '[' expr . ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1255


State 1058

  420 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 420 (expr_call)


State 1059

  330 expr_list: expr_list . ',' expr
  421 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 863
    ')'  shift, and go to state 1256


State 1060

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  598 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1257
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1061

  618 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1258


State 1062

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'
  543 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1259


State 1063

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  542                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1260
    "private"  shift, and go to state 1261

    $default  reduce using rule 530 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1262


State 1064

  535 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1263

    $default  reduce using rule 533 (optional_static_member_variable)

    optional_static_member_variable  go to state 1264


State 1065

  538 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1265


State 1066

  474 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  475     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1266
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1067

  578 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 578 (let_variable_name_with_pos_list)


State 1068

  581 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 581 (let_variable_declaration)


State 1069

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr .
  358            | expr . '=' expr
  359            | expr . "<-" expr
  360            | expr . ":=" expr
  361            | expr . "&=" expr
  362            | expr . "|=" expr
  363            | expr . "^=" expr
  364            | expr . "&&=" expr
  365            | expr . "||=" expr
  366            | expr . "^^=" expr
  367            | expr . "+=" expr
  368            | expr . "-=" expr
  369            | expr . "*=" expr
  370            | expr . "/=" expr
  371            | expr . "%=" expr
  372            | expr . "<<=" expr
  373            | expr . ">>=" expr
  374            | expr . "<<<=" expr
  375            | expr . ">>>=" expr
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "+="                 shift, and go to state 864
    "-="                 shift, and go to state 865
    "/="                 shift, and go to state 866
    "*="                 shift, and go to state 867
    "%="                 shift, and go to state 868
    "&="                 shift, and go to state 869
    "|="                 shift, and go to state 870
    "^="                 shift, and go to state 871
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    "<<="                shift, and go to state 872
    ">>="                shift, and go to state 873
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "<-"                 shift, and go to state 874
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    ":="                 shift, and go to state 759
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "<<<="               shift, and go to state 875
    ">>>="               shift, and go to state 876
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    "&&="                shift, and go to state 877
    "||="                shift, and go to state 878
    "^^="                shift, and go to state 879
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1267
    '='                  shift, and go to state 880
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784
    '$'                  shift, and go to state 503
    '@'                  shift, and go to state 675

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1070

  582 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 582 (let_variable_declaration)


State 1071

  698 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 697 ($@50)

    $@50  go to state 1268


State 1072

  721 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 720 ($@55)

    $@55  go to state 1269


State 1073

  724 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 723 ($@57)

    $@57  go to state 1270


State 1074

  687 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1271


State 1075

  727 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 726 ($@59)

    $@59  go to state 1272


State 1076

  717 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 716 ($@53)

    $@53  go to state 1273


State 1077

  679 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1274


State 1078

  685 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 684 ($@48)

    $@48  go to state 1275


State 1079

  731 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 730 ($@61)

    $@61  go to state 1276


State 1080

  734 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1277


State 1081

  738 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 737 ($@65)

    $@65  go to state 1278


State 1082

  741 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1279


State 1083

  745 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 744 ($@69)

    $@69  go to state 1280


State 1084

  748 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1281


State 1085

  551 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 609
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    tuple_type                   go to state 1282
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 612


State 1086

  751 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 750 ($@73)

    $@73  go to state 1283


State 1087

  557 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 614

    variant_type  go to state 1284


State 1088

  754 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 753 ($@75)

    $@75  go to state 1285


State 1089

  255 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  702 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1286
    '>'                  shift, and go to state 1287


State 1090

  254 type_declaration_no_options_list: type_declaration .
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 254 (type_declaration_no_options_list)


State 1091

  700 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 700 (type_declaration_no_options)


State 1092

  249 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 249 (optional_expr_list)


State 1093

  689 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 689 (dim_list)


State 1094

  549 tuple_type: "name" ':' type_declaration .
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 549 (tuple_type)


State 1095

  555 variant_type: "name" ':' type_declaration .
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 555 (variant_type)


State 1096

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  635 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1288


State 1097

  636 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 636 (variable_name_with_pos_list)


State 1098

  637 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  638                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1289

    $default  reduce using rule 637 (variable_name_with_pos_list)


State 1099

  565 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  566                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 840
    '='   shift, and go to state 842
    '|'   shift, and go to state 417

    $default  reduce using rule 565 (variable_declaration)

    copy_or_move  go to state 1290


State 1100

  568 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 568 (variable_declaration)


State 1101

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr .
  358            | expr . '=' expr
  359            | expr . "<-" expr
  360            | expr . ":=" expr
  361            | expr . "&=" expr
  362            | expr . "|=" expr
  363            | expr . "^=" expr
  364            | expr . "&&=" expr
  365            | expr . "||=" expr
  366            | expr . "^^=" expr
  367            | expr . "+=" expr
  368            | expr . "-=" expr
  369            | expr . "*=" expr
  370            | expr . "/=" expr
  371            | expr . "%=" expr
  372            | expr . "<<=" expr
  373            | expr . ">>=" expr
  374            | expr . "<<<=" expr
  375            | expr . ">>>=" expr
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  567 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "+="    shift, and go to state 864
    "-="    shift, and go to state 865
    "/="    shift, and go to state 866
    "*="    shift, and go to state 867
    "%="    shift, and go to state 868
    "&="    shift, and go to state 869
    "|="    shift, and go to state 870
    "^="    shift, and go to state 871
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    "<<="   shift, and go to state 872
    ">>="   shift, and go to state 873
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "<-"    shift, and go to state 874
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    ":="    shift, and go to state 759
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "<<<="  shift, and go to state 875
    ">>>="  shift, and go to state 876
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    "&&="   shift, and go to state 877
    "||="   shift, and go to state 878
    "^^="   shift, and go to state 879
    ".."    shift, and go to state 770
    '='     shift, and go to state 880
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784
    '$'     shift, and go to state 503
    '@'     shift, and go to state 675

    " <|"     reduce using rule 357 (expr_assign)
    $default  reduce using rule 567 (variable_declaration)

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 785


State 1102

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  818 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1291
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1103

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  821 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1292
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1104

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1293
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1105

  274 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1294


State 1106

  280 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  809 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295

    $default  reduce using rule 809 (use_initializer)

    make_struct_fields  go to state 962
    make_struct_single  go to state 1296


State 1107

  278 expr_new: "new" new_type_declaration '(' expr_list . ')'
  330 expr_list: expr_list . ',' expr

    ','  shift, and go to state 863
    ')'  shift, and go to state 1297


State 1108

  279 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1298


State 1109

  277 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1299


State 1110

  324 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  325               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1300


State 1111

  323 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1301


State 1112

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1302
    '>'                  shift, and go to state 1303


State 1113

  326 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1304


State 1114

  322 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1305


State 1115

  844 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1306


State 1116

  847 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1307


State 1117

  850 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1308


State 1118

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  854 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' optional_expr_list ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1309
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1119

  851 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1310


State 1120

  330 expr_list: expr_list ',' expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 330 (expr_list)


State 1121

  367 expr_assign: expr "+=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 367 (expr_assign)


State 1122

  368 expr_assign: expr "-=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 368 (expr_assign)


State 1123

  370 expr_assign: expr "/=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 370 (expr_assign)


State 1124

  369 expr_assign: expr "*=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 369 (expr_assign)


State 1125

  371 expr_assign: expr "%=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 371 (expr_assign)


State 1126

  361 expr_assign: expr "&=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 361 (expr_assign)


State 1127

  362 expr_assign: expr "|=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 362 (expr_assign)


State 1128

  363 expr_assign: expr "^=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 363 (expr_assign)


State 1129

  372 expr_assign: expr "<<=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 372 (expr_assign)


State 1130

  373 expr_assign: expr ">>=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 373 (expr_assign)


State 1131

  359 expr_assign: expr "<-" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 359 (expr_assign)


State 1132

  374 expr_assign: expr "<<<=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 374 (expr_assign)


State 1133

  375 expr_assign: expr ">>>=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 375 (expr_assign)


State 1134

  364 expr_assign: expr "&&=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 364 (expr_assign)


State 1135

  365 expr_assign: expr "||=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 365 (expr_assign)


State 1136

  366 expr_assign: expr "^^=" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 366 (expr_assign)


State 1137

  358 expr_assign: expr '=' expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 358 (expr_assign)


State 1138

  295 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 295 (expression_try_catch)


State 1139

  867 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1311


State 1140

  866 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1312


State 1141

  865 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 865 (make_table_decl)


State 1142

  253 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 253 (optional_expr_map_tuple_list)


State 1143

  472 expr: "deref" '(' expr ')' .

    $default  reduce using rule 472 (expr)


State 1144

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1313
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1145

  313 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1314
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1146

  316 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1315
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1147

  473 expr: "addr" '(' expr ')' .

    $default  reduce using rule 473 (expr)


State 1148

  319 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1316
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1149

  504 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 504 (expr)


State 1150

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  858 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1317
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1151

  855 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1318


State 1152

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  827 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1319
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1153

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  836 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1320
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1154

  833 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1321


State 1155

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  824 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_variant_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1322
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1156

  222 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  474 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  475     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 968

    $default  reduce using rule 343 (optional_capture_list)

    optional_capture_list  go to state 1323


State 1157

  346 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1324


State 1158

  506 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1159

  507 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1160

  508 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1161

  509 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1162

  510 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1163

  512 expr_mtag: "$c" '(' expr ')' . '(' ')'
  513          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1325


State 1164

  874 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1326
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1165

  795 optional_block: "where" expr_block .

    $default  reduce using rule 795 (optional_block)


State 1166

  782 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  783                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1327
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1167

  779 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1328
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1168

  778 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1329
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1169

  703 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  839 make_dim_decl: '[' . expr_list optional_comma ']'
  872 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  873                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 826
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1170

  329 expr_list: expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  688 dim_list: '[' expr . ']'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 827

    ']'       [reduce using rule 329 (expr_list)]
    $default  reduce using rule 329 (expr_list)


State 1171

  812 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  813                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 914
    "$f"     shift, and go to state 915
    "name"   shift, and go to state 1295

    $default  reduce using rule 794 (optional_block)

    make_struct_fields  go to state 921
    make_struct_dim     go to state 1330
    optional_block      go to state 1331


State 1172

  829 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1332
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1173

  780 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  781                   | make_struct_fields ',' . "name" ":=" expr
  784                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1333
    "name"  shift, and go to state 1334


State 1174

  789 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 1335


State 1175

  810 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1176
    ",]]"  shift, and go to state 1177
    ']'    shift, and go to state 1178

    optional_trailing_delim_sqr_sqr  go to state 1336


State 1176

  803 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 803 (optional_trailing_delim_sqr_sqr)


State 1177

  804 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 804 (optional_trailing_delim_sqr_sqr)


State 1178

  802 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1337


State 1179

  811 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 811 (make_struct_decl)


State 1180

  830 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1338
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1181

  838 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 920
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple              go to state 1339
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1182

  801 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 801 (optional_trailing_semicolon_sqr_sqr)


State 1183

  800 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1340


State 1184

  840 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 840 (make_dim_decl)


State 1185

  875 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1341
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1186

  815 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 921
    make_struct_dim     go to state 1342


State 1187

  814 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1343
    ";}]"                shift, and go to state 1344
    ",}]"                shift, and go to state 1345

    optional_trailing_delim_cur_sqr  go to state 1346


State 1188

  798 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1347


State 1189

  799 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 799 (optional_trailing_semicolon_cur_sqr)


State 1190

  841 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 841 (make_dim_decl)


State 1191

  877 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1348
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1192

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  831 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 831 (make_map_tuple)


State 1193

  796 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 796 (optional_trailing_semicolon_cur_cur)


State 1194

  860 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 860 (make_table)


State 1195

  255 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  258 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 1286
    '>'                  shift, and go to state 1349


State 1196

  255 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  261 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1286
    '>'                  shift, and go to state 1350


State 1197

   30 string_builder_body: string_builder_body "{" expr . "}"
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    "}"    shift, and go to state 1351
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784


State 1198

  876 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1352
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1199

  862 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 862 (expr_map_tuple_list)


State 1200

  863 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 863 (make_table_decl)


State 1201

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  245 expressions: expressions . expression_any
  246            | expressions . error

    error                             shift, and go to state 430
    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 433
    "if"                              shift, and go to state 434
    "static_if"                       shift, and go to state 435
    "for"                             shift, and go to state 436
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 443
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "try"                             shift, and go to state 446
    "table"                           shift, and go to state 447
    "delete"                          shift, and go to state 448
    "deref"                           shift, and go to state 449
    "with"                            shift, and go to state 450
    "assume"                          shift, and go to state 451
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "pass"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 458
    "goto"                            shift, and go to state 459
    "unsafe"                          shift, and go to state 460
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 467
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 490
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    "end of code block"               shift, and go to state 1353
    "end of expression"               shift, and go to state 495
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_label           go to state 507
    expression_goto            go to state 508
    if_or_static_if            go to state 509
    expression_if_one_liner    go to state 510
    expression_if_then_else    go to state 511
    expression_for_loop        go to state 512
    expression_unsafe          go to state 513
    expression_while_loop      go to state 514
    expression_with            go to state 515
    expression_with_alias      go to state 516
    expr_call_pipe             go to state 517
    expression_any             go to state 518
    expr_keyword               go to state 519
    expression_keyword         go to state 520
    expr_pipe                  go to state 521
    name_in_namespace          go to state 522
    expression_delete          go to state 523
    expr_new                   go to state 524
    expression_break           go to state 525
    expression_continue        go to state 526
    expression_return_no_pipe  go to state 527
    expression_return          go to state 528
    expression_yield_no_pipe   go to state 529
    expression_yield           go to state 530
    expression_try_catch       go to state 531
    kwd_let                    go to state 532
    expression_let             go to state 533
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_assign                go to state 540
    expr_assign_pipe           go to state 541
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 547
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 1202

  872 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1354
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1203

  637 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  638                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  873 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1355
    ','   shift, and go to state 841


State 1204

  839 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 839 (make_dim_decl)


State 1205

  462 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 462 (expr)


State 1206

  402 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1356
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1207

  521 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1357
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1208

  406 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1358


State 1209

  409 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1359


State 1210

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1360


State 1211

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1212

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1213

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1361
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1214

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1215

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1362
    "is"    shift, and go to state 732
    "as"    shift, and go to state 733
    "<<"    shift, and go to state 742
    ">>"    shift, and go to state 743
    "++"    shift, and go to state 744
    "--"    shift, and go to state 745
    "<="    shift, and go to state 746
    ">="    shift, and go to state 749
    "=="    shift, and go to state 750
    "!="    shift, and go to state 751
    "->"    shift, and go to state 752
    "??"    shift, and go to state 754
    "?."    shift, and go to state 755
    "?["    shift, and go to state 756
    "<|"    shift, and go to state 757
    "|>"    shift, and go to state 758
    "<<<"   shift, and go to state 760
    ">>>"   shift, and go to state 761
    "&&"    shift, and go to state 764
    "||"    shift, and go to state 765
    "^^"    shift, and go to state 766
    ".."    shift, and go to state 770
    '?'     shift, and go to state 772
    '|'     shift, and go to state 773
    '^'     shift, and go to state 774
    '&'     shift, and go to state 775
    '<'     shift, and go to state 776
    '>'     shift, and go to state 777
    '-'     shift, and go to state 778
    '+'     shift, and go to state 779
    '*'     shift, and go to state 780
    '/'     shift, and go to state 781
    '%'     shift, and go to state 782
    '.'     shift, and go to state 783
    '['     shift, and go to state 784

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1363


State 1216

  349 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 968

    $default  reduce using rule 343 (optional_capture_list)

    optional_capture_list  go to state 1364


State 1217

  397 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1173
    ']'  shift, and go to state 1365


State 1218

  330 expr_list: expr_list ',' . expr
  398 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 1366
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1120
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1219

  419 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 419 (expr_call)


State 1220

  418 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 418 (expr_call)


State 1221

  303 tuple_expansion: "name" .

    $default  reduce using rule 303 (tuple_expansion)


State 1222

  304 tuple_expansion: tuple_expansion . ',' "name"
  305 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  307                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1367
    ']'  shift, and go to state 1368


State 1223

  304 tuple_expansion: tuple_expansion . ',' "name"
  306 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1367
    ')'  shift, and go to state 1369


State 1224

  339 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1370


State 1225

  340 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1371


State 1226

  338 capture_entry: '=' . "name"

    "name"  shift, and go to state 1372


State 1227

  337 capture_entry: '&' . "name"

    "name"  shift, and go to state 1373


State 1228

  341 capture_list: capture_entry .

    $default  reduce using rule 341 (capture_list)


State 1229

  342 capture_list: capture_list . ',' capture_entry
  344 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1374
    ']'  shift, and go to state 1375


State 1230

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1376


State 1231

  480 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 478 ($@28)

    $@28  go to state 1377


State 1232

  520 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1378
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1233

  486 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 484 ($@30)

    $@30  go to state 1379


State 1234

  518 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1380
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1235

  378 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 378 (expr_assign_pipe_right)


State 1236

  376 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 376 (expr_assign_pipe_right)


State 1237

  377 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 377 (expr_assign_pipe_right)


State 1238

  399 expr_method_call: expr "->" "name" '(' . ')'
  400                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1381
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1382
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1239

  515 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1383
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1240

  465 expr: expr "?[" expr ']' .

    $default  reduce using rule 465 (expr)


State 1241

  491 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1384


State 1242

  519 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1385


State 1243

  488 expr: expr '?' "as" "name" .

    $default  reduce using rule 488 (expr)


State 1244

  492 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 492 (expr)


State 1245

  477 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1386
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1246

  517 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1387


State 1247

  468 expr: expr '.' "?." "name" .

    $default  reduce using rule 468 (expr)


State 1248

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  466     | expr '.' "?[" expr . ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1388


State 1249

  514 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1389
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1250

  412 expr_field: expr '.' "name" '(' . ')'
  413           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1390
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1391
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1251

  516 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1392


State 1252

  411 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 411 (expr_field)


State 1253

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  464     | expr '.' '[' expr . ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ']'    shift, and go to state 1393


State 1254

  416 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 415 ($@27)

    $@27  go to state 1394


State 1255

  463 expr: expr '[' expr ']' .

    $default  reduce using rule 463 (expr)


State 1256

  421 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 421 (expr_call)


State 1257

  598 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 598 (enum_list)


State 1258

  618 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 618 (enum_declaration)


State 1259

  120 optional_annotation_list: '[' annotation_list ']' .
  543 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1395

    $default  reduce using rule 120 (optional_annotation_list)


State 1260

  531 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 531 (optional_public_or_private_member_variable)


State 1261

  532 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 532 (optional_public_or_private_member_variable)


State 1262

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  542                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1396
    "static"    shift, and go to state 1263

    $default  reduce using rule 533 (optional_static_member_variable)

    optional_static_member_variable  go to state 1397


State 1263

  534 optional_static_member_variable: "static" .

    $default  reduce using rule 534 (optional_static_member_variable)


State 1264

  535 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1398
    "sealed"    shift, and go to state 1399

    $default  reduce using rule 525 (optional_override)

    optional_override  go to state 1400


State 1265

  538 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 538 (struct_variable_declaration_list)


State 1266

  474 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  475     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 968

    $default  reduce using rule 343 (optional_capture_list)

    optional_capture_list  go to state 1401


State 1267

  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 580 (let_variable_declaration)


State 1268

  698 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 698 (type_declaration_no_options)


State 1269

  721 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 721 (type_declaration_no_options)


State 1270

  724 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 724 (type_declaration_no_options)


State 1271

  687 table_type_pair: type_declaration "end of expression" type_declaration .
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 687 (table_type_pair)


State 1272

  727 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 727 (type_declaration_no_options)


State 1273

  717 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 717 (type_declaration_no_options)


State 1274

  679 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 679 (bitfield_bits)


State 1275

  685 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 685 (bitfield_type_declaration)


State 1276

  731 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1277

  734 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 733 ($@63)

    $@63  go to state 1402


State 1278

  738 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 738 (type_declaration_no_options)


State 1279

  741 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 740 ($@67)

    $@67  go to state 1403


State 1280

  745 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 745 (type_declaration_no_options)


State 1281

  748 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 747 ($@71)

    $@71  go to state 1404


State 1282

  551 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 551 (tuple_type_list)


State 1283

  751 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 751 (type_declaration_no_options)


State 1284

  557 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 557 (variant_type_list)


State 1285

  754 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 754 (type_declaration_no_options)


State 1286

  255 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1405


State 1287

  702 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1406


State 1288

  635 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 635 (variable_name_with_pos_list)


State 1289

  638 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1407


State 1290

  566 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1408
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1291

  818 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 817 ($@89)

    $@89  go to state 1409


State 1292

  821 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 820 ($@91)

    $@91  go to state 1410


State 1293

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  330 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 286
    ','                    shift, and go to state 863

    expression_block  go to state 1411


State 1294

  274 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 273 ($@12)

    $@12  go to state 1412


State 1295

  778 make_struct_fields: "name" . copy_or_move expr
  779                   | "name" . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1167
    '='   shift, and go to state 842

    copy_or_move  go to state 1168


State 1296

  280 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1413


State 1297

  278 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 278 (expr_new)


State 1298

  279 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 279 (expr_new)


State 1299

  277 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 277 (expr_new)


State 1300

  324 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  325               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1414
    '>'                  shift, and go to state 1415


State 1301

  323 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 323 (expr_type_info)


State 1302

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1416


State 1303

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1417


State 1304

  326 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 326 (expr_type_info)


State 1305

  322 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 321 ($@20)

    $@20  go to state 1418


State 1306

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  844 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1419
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1307

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  847 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer make_struct_dim_decl ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1420
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1308

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  850 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_variant_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1421
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1309

  854 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' optional_expr_list ')'

    $default  reduce using rule 853 ($@105)

    $@105  go to state 1422


State 1310

  851 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 851 (make_dim_decl)


State 1311

  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"
  867 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1423
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1312

  866 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 252 (optional_expr_map_tuple_list)

    string_builder                go to state 505
    expr_reader                   go to state 506
    optional_expr_map_tuple_list  go to state 1424
    expression_keyword            go to state 567
    name_in_namespace             go to state 522
    expr_new                      go to state 524
    expr_cast                     go to state 534
    expr_type_decl                go to state 535
    expr_type_info                go to state 536
    block_or_lambda               go to state 537
    expr_full_block               go to state 538
    expr_numeric_const            go to state 539
    expr_named_call               go to state 542
    expr_method_call              go to state 543
    func_addr_expr                go to state 544
    expr_field                    go to state 545
    expr_call                     go to state 546
    expr                          go to state 692
    expr_mtag                     go to state 548
    basic_type_declaration        go to state 549
    make_decl                     go to state 550
    make_struct_decl              go to state 551
    make_map_tuple                go to state 700
    make_tuple_call               go to state 552
    make_dim_decl                 go to state 553
    expr_map_tuple_list           go to state 884
    make_table_decl               go to state 554
    array_comprehension           go to state 555


State 1313

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 81 (expression_with_alias)


State 1314

  313 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 312 ($@14)

    $@14  go to state 1425


State 1315

  316 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 315 ($@16)

    $@16  go to state 1426


State 1316

  319 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 318 ($@18)

    $@18  go to state 1427


State 1317

  858 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 857 ($@107)

    $@107  go to state 1428


State 1318

  855 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 855 (make_dim_decl)


State 1319

  827 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 826 ($@95)

    $@95  go to state 1429


State 1320

  836 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 835 ($@97)

    $@97  go to state 1430


State 1321

  833 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 833 (make_tuple_call)


State 1322

  824 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_variant_dim ')'

    $default  reduce using rule 823 ($@93)

    $@93  go to state 1431


State 1323

  222 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  474 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  475     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1432
    '$'  shift, and go to state 503
    '@'  shift, and go to state 675

    block_or_lambda                go to state 718
    expr_full_block_assumed_piped  go to state 1433


State 1324

  346 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1434


State 1325

  512 expr_mtag: "$c" '(' expr ')' '(' . ')'
  513          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1435
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1436
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1326

  330 expr_list: expr_list . ',' expr
  874 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1437
    ','                  shift, and go to state 863


State 1327

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  782 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  783                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1438


State 1328

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  779 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 779 (make_struct_fields)


State 1329

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  778 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 778 (make_struct_fields)


State 1330

  789 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  813 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 914
    "end of expression"  shift, and go to state 1174

    $default  reduce using rule 794 (optional_block)

    optional_block  go to state 1439


State 1331

  812 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1176
    ",]]"  shift, and go to state 1177
    ']'    shift, and go to state 1178

    optional_trailing_delim_sqr_sqr  go to state 1440


State 1332

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  829 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 829 (make_tuple)


State 1333

  784 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  785                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1441


State 1334

  780 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  781                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1442
    '='   shift, and go to state 842

    copy_or_move  go to state 1443


State 1335

  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  789 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1173

    $default  reduce using rule 789 (make_struct_dim)


State 1336

  810 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 810 (make_struct_decl)


State 1337

  802 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 802 (optional_trailing_delim_sqr_sqr)


State 1338

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  830 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 830 (make_tuple)


State 1339

  830 make_tuple: make_tuple . ',' expr
  838 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1180

    $default  reduce using rule 838 (make_dim)


State 1340

  800 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 800 (optional_trailing_semicolon_sqr_sqr)


State 1341

  330 expr_list: expr_list . ',' expr
  875 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1444
    ','                  shift, and go to state 863


State 1342

  789 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  815 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 914
    "end of expression"  shift, and go to state 1174

    $default  reduce using rule 794 (optional_block)

    optional_block  go to state 1445


State 1343

  805 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1446


State 1344

  806 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 806 (optional_trailing_delim_cur_sqr)


State 1345

  807 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 807 (optional_trailing_delim_cur_sqr)


State 1346

  814 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 814 (make_struct_decl)


State 1347

  798 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 798 (optional_trailing_semicolon_cur_sqr)


State 1348

  330 expr_list: expr_list . ',' expr
  877 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1447
    ','                  shift, and go to state 863


State 1349

  258 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 257 ($@8)

    $@8  go to state 1448


State 1350

  261 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 260 ($@10)

    $@10  go to state 1449


State 1351

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1352

  330 expr_list: expr_list . ',' expr
  876 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1450
    ','                  shift, and go to state 863


State 1353

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 219 (expression_block)


State 1354

  330 expr_list: expr_list . ',' expr
  872 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1451
    ','                  shift, and go to state 863


State 1355

  873 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1452
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1356

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  402 func_addr_name: "$i" '(' expr . ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1453


State 1357

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  521          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1454


State 1358

  406 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1455
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1359

  409 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1456


State 1360

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1361

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 732
    "as"                   shift, and go to state 733
    "<<"                   shift, and go to state 742
    ">>"                   shift, and go to state 743
    "++"                   shift, and go to state 744
    "--"                   shift, and go to state 745
    "<="                   shift, and go to state 746
    ">="                   shift, and go to state 749
    "=="                   shift, and go to state 750
    "!="                   shift, and go to state 751
    "->"                   shift, and go to state 752
    "??"                   shift, and go to state 754
    "?."                   shift, and go to state 755
    "?["                   shift, and go to state 756
    "<|"                   shift, and go to state 757
    "|>"                   shift, and go to state 758
    "<<<"                  shift, and go to state 760
    ">>>"                  shift, and go to state 761
    "&&"                   shift, and go to state 764
    "||"                   shift, and go to state 765
    "^^"                   shift, and go to state 766
    ".."                   shift, and go to state 770
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 772
    '|'                    shift, and go to state 773
    '^'                    shift, and go to state 774
    '&'                    shift, and go to state 775
    '<'                    shift, and go to state 776
    '>'                    shift, and go to state 777
    '-'                    shift, and go to state 778
    '+'                    shift, and go to state 779
    '*'                    shift, and go to state 780
    '/'                    shift, and go to state 781
    '%'                    shift, and go to state 782
    '.'                    shift, and go to state 783
    '['                    shift, and go to state 784

    expression_block  go to state 1457


State 1362

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1458


State 1363

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1459


State 1364

  349 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1460


State 1365

  397 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1461


State 1366

  398 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  839 make_dim_decl: '[' . expr_list optional_comma ']'
  872 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  873                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 708
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 709
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 915
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 916
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 710
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 1462
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1367

  304 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1463


State 1368

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  307                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1464


State 1369

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1465
    '&'  shift, and go to state 389

    $default  reduce using rule 572 (optional_ref)

    optional_ref  go to state 1466


State 1370

  339 capture_entry: "<-" "name" .

    $default  reduce using rule 339 (capture_entry)


State 1371

  340 capture_entry: ":=" "name" .

    $default  reduce using rule 340 (capture_entry)


State 1372

  338 capture_entry: '=' "name" .

    $default  reduce using rule 338 (capture_entry)


State 1373

  337 capture_entry: '&' "name" .

    $default  reduce using rule 337 (capture_entry)


State 1374

  342 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1224
    ":="  shift, and go to state 1225
    '='   shift, and go to state 1226
    '&'   shift, and go to state 1227

    capture_entry  go to state 1467


State 1375

  344 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1468


State 1376

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1469
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1470
    block_or_simple_block  go to state 1471


State 1377

  480 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1472


State 1378

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  520          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1473


State 1379

  486 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1474


State 1380

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  518          | expr "as" "$f" '(' expr . ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1475


State 1381

  399 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 399 (expr_method_call)


State 1382

  330 expr_list: expr_list . ',' expr
  400 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 863
    ')'  shift, and go to state 1476


State 1383

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  515          | expr "?." "$f" '(' expr . ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1477


State 1384

  491 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 489 ($@32)

    $@32  go to state 1478


State 1385

  519 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1479
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1386

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  477     | expr '?' expr ':' expr .
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 477 (expr)


State 1387

  517 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1480
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1388

  466 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 466 (expr)


State 1389

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  514          | expr '.' "$f" '(' expr . ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1481


State 1390

  412 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 412 (expr_field)


State 1391

  330 expr_list: expr_list . ',' expr
  413 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 863
    ')'  shift, and go to state 1482


State 1392

  516 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1483
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1393

  464 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 464 (expr)


State 1394

  416 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 416 (expr_field)


State 1395

  543 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 543 (struct_variable_declaration_list)


State 1396

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1484

    $default  reduce using rule 528 (optional_constant)

    optional_constant  go to state 1485


State 1397

  542 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1398
    "sealed"    shift, and go to state 1399

    $default  reduce using rule 525 (optional_override)

    optional_override  go to state 1486


State 1398

  526 optional_override: "override" .

    $default  reduce using rule 526 (optional_override)


State 1399

  527 optional_override: "sealed" .

    $default  reduce using rule 527 (optional_override)


State 1400

  535 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1260
    "private"  shift, and go to state 1261

    $default  reduce using rule 530 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1487


State 1401

  474 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  475     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1432


State 1402

  734 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1403

  741 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 741 (type_declaration_no_options)


State 1404

  748 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 748 (type_declaration_no_options)


State 1405

  255 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 255 (type_declaration_no_options_list)


State 1406

  702 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 248 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1488
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 825
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1407

  638 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 638 (variable_name_with_pos_list)


State 1408

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  566 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 566 (variable_declaration)


State 1409

  818 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1489


State 1410

  821 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1490


State 1411

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1412

  274 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 274 (new_type_declaration)


State 1413

  280 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 280 (expr_new)


State 1414

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1491


State 1415

  324 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1492
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1416

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1493


State 1417

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1494
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1418

  322 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 322 (expr_type_decl)


State 1419

  844 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 843 ($@99)

    $@99  go to state 1495


State 1420

  847 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 846 ($@101)

    $@101  go to state 1496


State 1421

  850 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_variant_dim ')'

    $default  reduce using rule 849 ($@103)

    $@103  go to state 1497


State 1422

  854 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' optional_expr_list ')'

    '('  shift, and go to state 1498


State 1423

  867 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1499


State 1424

  866 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1500


State 1425

  313 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1501
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1426

  316 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1502
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1427

  319 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1503
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1428

  858 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1504


State 1429

  827 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1505

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1506


State 1430

  836 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1507


State 1431

  824 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_variant_dim ')'

    '('  shift, and go to state 1508


State 1432

  474 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  475     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1509
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1510
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1433

  222 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 222 (expr_call_pipe)


State 1434

  346 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1469
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1470
    block_or_simple_block  go to state 1511


State 1435

  512 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1436

  330 expr_list: expr_list . ',' expr
  513 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 863
    ')'  shift, and go to state 1512


State 1437

  874 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1513
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1438

  782 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  783                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1514
    '='   shift, and go to state 842

    copy_or_move  go to state 1515


State 1439

  813 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1176
    ",]]"  shift, and go to state 1177
    ']'    shift, and go to state 1178

    optional_trailing_delim_sqr_sqr  go to state 1516


State 1440

  812 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 812 (make_struct_decl)


State 1441

  784 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  785                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1517
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1442

  781 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1518
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1443

  780 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1519
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1444

  875 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1520
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1445

  815 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1343
    ";}]"                shift, and go to state 1344
    ",}]"                shift, and go to state 1345

    optional_trailing_delim_cur_sqr  go to state 1521


State 1446

  805 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 805 (optional_trailing_delim_cur_sqr)


State 1447

  877 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1522
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1448

  258 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1523
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1449

  261 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1524

    '('       [reduce using rule 250 (optional_expr_list_in_braces)]
    $default  reduce using rule 250 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1525


State 1450

  876 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 692
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1526
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1451

  872 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1527
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1452

  330 expr_list: expr_list . ',' expr
  873 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1528
    ','                  shift, and go to state 863


State 1453

  402 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 402 (func_addr_name)


State 1454

  521 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 521 (expr_mtag)


State 1455

  406 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 405 ($@23)

    $@23  go to state 1529


State 1456

  409 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1530


State 1457

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1210
    "elif"         shift, and go to state 1211
    "static_elif"  shift, and go to state 1212

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1213
    expression_else      go to state 1531


State 1458

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 1532
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "yield"                           shift, and go to state 1533
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_if_one_liner    go to state 1534
    expression_keyword         go to state 567
    name_in_namespace          go to state 522
    expr_new                   go to state 524
    expression_break           go to state 1535
    expression_continue        go to state 1536
    expression_return_no_pipe  go to state 1537
    expression_yield_no_pipe   go to state 1538
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 1539
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 1459

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1460

  349 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1540


State 1461

  397 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 397 (expr_named_call)


State 1462

  398 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1173
    ']'  shift, and go to state 1541


State 1463

  304 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 304 (tuple_expansion)


State 1464

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  307                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1542
    '&'  shift, and go to state 389

    $default  reduce using rule 572 (optional_ref)

    optional_ref  go to state 1543


State 1465

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1544


State 1466

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 572
    ":="  shift, and go to state 573
    '='   shift, and go to state 574

    copy_or_move_or_clone  go to state 1545


State 1467

  342 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 342 (capture_list)


State 1468

  344 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 344 (optional_capture_list)


State 1469

  332 block_or_simple_block: "=>" . expr
  333                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1546
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1547
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1470

  331 block_or_simple_block: expression_block .

    $default  reduce using rule 331 (block_or_simple_block)


State 1471

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 347 (expr_full_block)


State 1472

  480 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1548
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1473

  520 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 520 (expr_mtag)


State 1474

  486 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1549


State 1475

  518 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 1476

  400 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 400 (expr_method_call)


State 1477

  515 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1478

  491 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1550


State 1479

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  519          | expr '?' "as" "$f" '(' expr . ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1551


State 1480

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  517          | expr '.' "?." "$f" '(' expr . ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1552


State 1481

  514 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1482

  413 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 413 (expr_field)


State 1483

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  516          | expr '.' '.' "$f" '(' expr . ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1553


State 1484

  529 optional_constant: "const" .

    $default  reduce using rule 529 (optional_constant)


State 1485

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 539 ($@35)

    $@35  go to state 1554


State 1486

  542 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1484

    $default  reduce using rule 528 (optional_constant)

    optional_constant  go to state 1555


State 1487

  535 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 619
    "name"  shift, and go to state 620

    variable_declaration         go to state 1556
    variable_name_with_pos_list  go to state 622


State 1488

  702 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1557


State 1489

  818 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1505

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1558


State 1490

  821 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1505

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1559


State 1491

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1560


State 1492

  324 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1561


State 1493

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1562


State 1494

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1563


State 1495

  844 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1564


State 1496

  847 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1565


State 1497

  850 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_variant_dim ')'

    '('  shift, and go to state 1566


State 1498

  854 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 248 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1567
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 825
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1499

  867 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 252 (optional_expr_map_tuple_list)

    string_builder                go to state 505
    expr_reader                   go to state 506
    optional_expr_map_tuple_list  go to state 1568
    expression_keyword            go to state 567
    name_in_namespace             go to state 522
    expr_new                      go to state 524
    expr_cast                     go to state 534
    expr_type_decl                go to state 535
    expr_type_info                go to state 536
    block_or_lambda               go to state 537
    expr_full_block               go to state 538
    expr_numeric_const            go to state 539
    expr_named_call               go to state 542
    expr_method_call              go to state 543
    func_addr_expr                go to state 544
    expr_field                    go to state 545
    expr_call                     go to state 546
    expr                          go to state 692
    expr_mtag                     go to state 548
    basic_type_declaration        go to state 549
    make_decl                     go to state 550
    make_struct_decl              go to state 551
    make_map_tuple                go to state 700
    make_tuple_call               go to state 552
    make_dim_decl                 go to state 553
    expr_map_tuple_list           go to state 884
    make_table_decl               go to state 554
    array_comprehension           go to state 555


State 1500

  866 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 866 (make_table_decl)


State 1501

  313 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 313 (expr_cast)


State 1502

  316 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 316 (expr_cast)


State 1503

  319 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 319 (expr_cast)


State 1504

  858 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1569
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1505

  809 use_initializer: "uninitialized" .

    $default  reduce using rule 809 (use_initializer)


State 1506

  827 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 827 (make_struct_decl)


State 1507

  836 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1505

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1570


State 1508

  824 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 1571
    make_variant_dim    go to state 1572


State 1509

  474 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 474 (expr)


State 1510

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  475     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1573


State 1511

  346 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 346 (expr_block)


State 1512

  513 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1513

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  874 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1574
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784

    $default  reduce using rule 868 (array_comprehension_where)

    array_comprehension_where  go to state 1575


State 1514

  783 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1576
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1515

  782 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1577
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1516

  813 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 813 (make_struct_decl)


State 1517

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  784 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  785                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1578


State 1518

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  781 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 781 (make_struct_fields)


State 1519

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  780 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 780 (make_struct_fields)


State 1520

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  875 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1574
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784

    $default  reduce using rule 868 (array_comprehension_where)

    array_comprehension_where  go to state 1579


State 1521

  815 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 815 (make_struct_decl)


State 1522

  877 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1574

    $default  reduce using rule 868 (array_comprehension_where)

    array_comprehension_where  go to state 1580


State 1523

  258 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 258 (expression_keyword)


State 1524

  251 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 248 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1581
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 825
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1525

  261 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 261 (expression_keyword)


State 1526

  876 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1574

    $default  reduce using rule 868 (array_comprehension_where)

    array_comprehension_where  go to state 1582


State 1527

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  872 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1574
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784

    $default  reduce using rule 868 (array_comprehension_where)

    array_comprehension_where  go to state 1583


State 1528

  873 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1584
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1529

  406 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 951
    "name"  shift, and go to state 59

    name_in_namespace  go to state 954
    func_addr_name     go to state 1585


State 1530

  409 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 408 ($@25)

    $@25  go to state 1586


State 1531

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1532

  284 expression_return_no_pipe: "return" .
  285                          | "return" . expr_list
  286                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1587
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 284 (expression_return_no_pipe)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 642
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1533

  290 expression_yield_no_pipe: "yield" . expr
  291                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1588
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1589
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1534

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1535

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1536

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1537

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1538

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1539

   67 expression_if_one_liner: expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 67 (expression_if_one_liner)


State 1540

  349 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1590


State 1541

  398 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1591


State 1542

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1592


State 1543

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 572
    ":="  shift, and go to state 573
    '='   shift, and go to state 574

    copy_or_move_or_clone  go to state 1593


State 1544

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "<-"        shift, and go to state 572
    "??"        shift, and go to state 410
    ":="        shift, and go to state 573
    '='         shift, and go to state 574
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    copy_or_move_or_clone  go to state 1594
    dim_list               go to state 416


State 1545

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1595
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1546

  333 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1596
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1547

  332 block_or_simple_block: "=>" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    ".."  error (nonassociative)

    $default  reduce using rule 332 (block_or_simple_block)


State 1548

  480 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 479 ($@29)

    $@29  go to state 1597


State 1549

  486 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 485 ($@31)

    $@31  go to state 1598


State 1550

  491 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  756 type_declaration: type_declaration . '|' type_declaration_no_options
  757                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1599


State 1551

  519 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 1552

  517 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 1553

  516 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 1554

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1600


State 1555

  542 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 541 ($@36)

    $@36  go to state 1601


State 1556

  535 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 535 (structure_variable_declaration)


State 1557

  702 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 702 (type_declaration_no_options)


State 1558

  818 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1605


State 1559

  821 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1606


State 1560

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1607
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1561

  324 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 324 (expr_type_info)


State 1562

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1608
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1563

  327 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 327 (expr_type_info)


State 1564

  844 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1505

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1609


State 1565

  847 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1505

    $default  reduce using rule 808 (use_initializer)

    use_initializer  go to state 1610


State 1566

  850 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 1571
    make_variant_dim    go to state 1611


State 1567

  854 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1612


State 1568

  867 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1613


State 1569

  330 expr_list: expr_list . ',' expr
  858 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 948

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 1614


State 1570

  836 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1615


State 1571

  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  786 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1173

    $default  reduce using rule 786 (make_variant_dim)


State 1572

  824 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1616


State 1573

  475 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 475 (expr)


State 1574

  869 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1617


State 1575

  874 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1618


State 1576

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  783 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 783 (make_struct_fields)


State 1577

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  782 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 782 (make_struct_fields)


State 1578

  784 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  785                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 840
    ":="  shift, and go to state 1619
    '='   shift, and go to state 842

    copy_or_move  go to state 1620


State 1579

  875 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1621


State 1580

  877 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1622


State 1581

  251 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1623

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 1624


State 1582

  876 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1625


State 1583

  872 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1626


State 1584

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  873 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1574
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784

    $default  reduce using rule 868 (array_comprehension_where)

    array_comprehension_where  go to state 1627


State 1585

  406 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 406 (func_addr_expr)


State 1586

  409 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 951
    "name"  shift, and go to state 59

    name_in_namespace  go to state 954
    func_addr_name     go to state 1628


State 1587

  286 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 862
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1588

  291 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1629
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1589

  290 expression_yield_no_pipe: "yield" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 290 (expression_yield_no_pipe)


State 1590

  349 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 349 (expr_full_block_assumed_piped)


State 1591

  398 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 398 (expr_named_call)


State 1592

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  694 type_declaration_no_options: type_declaration_no_options . dim_list
  695                            | type_declaration_no_options . '[' ']'
  703                            | type_declaration_no_options . '-' '[' ']'
  704                            | type_declaration_no_options . "explicit"
  705                            | type_declaration_no_options . "const"
  706                            | type_declaration_no_options . '-' "const"
  707                            | type_declaration_no_options . '&'
  708                            | type_declaration_no_options . '-' '&'
  709                            | type_declaration_no_options . '#'
  710                            | type_declaration_no_options . "implicit"
  711                            | type_declaration_no_options . '-' '#'
  712                            | type_declaration_no_options . "==" "const"
  713                            | type_declaration_no_options . "==" '&'
  714                            | type_declaration_no_options . '?'
  718                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "<-"        shift, and go to state 572
    "??"        shift, and go to state 410
    ":="        shift, and go to state 573
    '='         shift, and go to state 574
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    copy_or_move_or_clone  go to state 1630
    dim_list               go to state 416


State 1593

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1631
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1594

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1632
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1595

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1633
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1596

  333 block_or_simple_block: "=>" "<-" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 333 (block_or_simple_block)


State 1597

  480 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 480 (expr)


State 1598

  486 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 486 (expr)


State 1599

  491 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 490 ($@33)

    $@33  go to state 1634


State 1600

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1635


State 1601

  542 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1636


State 1602

  790 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 1637


State 1603

  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  792 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1173

    $default  reduce using rule 792 (make_struct_dim_decl)


State 1604

  791 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  793 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1638

    $default  reduce using rule 870 (optional_comma)

    optional_comma  go to state 1639


State 1605

  818 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1640


State 1606

  821 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1641


State 1607

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1642


State 1608

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784
    ')'    shift, and go to state 1643


State 1609

  844 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1644


State 1610

  847 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295
    '('     shift, and go to state 1602

    make_struct_fields    go to state 1603
    make_struct_dim_list  go to state 1604
    make_struct_dim_decl  go to state 1645


State 1611

  850 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1646


State 1612

  854 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')' .

    $default  reduce using rule 854 (make_dim_decl)


State 1613

  867 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 867 (make_table_decl)


State 1614

  858 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1647


State 1615

  836 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1648


State 1616

  824 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')' .

    $default  reduce using rule 824 (make_struct_decl)


State 1617

  869 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1649
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1618

  874 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1650


State 1619

  785 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1651
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1620

  784 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1652
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1621

  875 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1653


State 1622

  877 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1654


State 1623

  871 optional_comma: ',' .

    $default  reduce using rule 871 (optional_comma)


State 1624

  251 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1655


State 1625

  876 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 876 (array_comprehension)


State 1626

  872 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 872 (array_comprehension)


State 1627

  873 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1656


State 1628

  409 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 409 (func_addr_expr)


State 1629

  291 expression_yield_no_pipe: "yield" "<-" expr .
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 291 (expression_yield_no_pipe)


State 1630

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 565
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 566
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 567
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1657
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1631

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1658
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1632

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1659
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1633

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 308 (tuple_expansion_variable_declaration)


State 1634

  491 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 491 (expr)


State 1635

  540 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 540 (struct_variable_declaration_list)


State 1636

  542 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1660


State 1637

  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  790 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1173
    ')'  shift, and go to state 1661


State 1638

  791 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  871 optional_comma: ',' .

    '('  shift, and go to state 1662

    $default  reduce using rule 871 (optional_comma)


State 1639

  793 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 793 (make_struct_dim_decl)


State 1640

  818 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 818 (make_struct_decl)


State 1641

  821 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 821 (make_struct_decl)


State 1642

  325 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 325 (expr_type_info)


State 1643

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 328 (expr_type_info)


State 1644

  844 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1663


State 1645

  847 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1664


State 1646

  850 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')' .

    $default  reduce using rule 850 (make_dim_decl)


State 1647

  858 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 858 (make_dim_decl)


State 1648

  836 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 836 (make_tuple_call)


State 1649

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  869 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 869 (array_comprehension_where)


State 1650

  874 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 874 (array_comprehension)


State 1651

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  785 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 785 (make_struct_fields)


State 1652

  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'
  784 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 732
    "as"   shift, and go to state 733
    "<<"   shift, and go to state 742
    ">>"   shift, and go to state 743
    "++"   shift, and go to state 744
    "--"   shift, and go to state 745
    "<="   shift, and go to state 746
    ">="   shift, and go to state 749
    "=="   shift, and go to state 750
    "!="   shift, and go to state 751
    "->"   shift, and go to state 752
    "??"   shift, and go to state 754
    "?."   shift, and go to state 755
    "?["   shift, and go to state 756
    "<|"   shift, and go to state 757
    "|>"   shift, and go to state 758
    "<<<"  shift, and go to state 760
    ">>>"  shift, and go to state 761
    "&&"   shift, and go to state 764
    "||"   shift, and go to state 765
    "^^"   shift, and go to state 766
    ".."   shift, and go to state 770
    '?'    shift, and go to state 772
    '|'    shift, and go to state 773
    '^'    shift, and go to state 774
    '&'    shift, and go to state 775
    '<'    shift, and go to state 776
    '>'    shift, and go to state 777
    '-'    shift, and go to state 778
    '+'    shift, and go to state 779
    '*'    shift, and go to state 780
    '/'    shift, and go to state 781
    '%'    shift, and go to state 782
    '.'    shift, and go to state 783
    '['    shift, and go to state 784

    $default  reduce using rule 784 (make_struct_fields)


State 1653

  875 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 875 (array_comprehension)


State 1654

  877 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 877 (array_comprehension)


State 1655

  251 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 251 (optional_expr_list_in_braces)


State 1656

  873 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 873 (array_comprehension)


State 1657

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  399 expr_method_call: expr . "->" "name" '(' ')'
  400                 | expr . "->" "name" '(' expr_list ')'
  410 expr_field: expr . '.' "name"
  411           | expr . '.' '.' "name"
  412           | expr . '.' "name" '(' ')'
  413           | expr . '.' "name" '(' expr_list ')'
  416           | expr . '.' $@26 error $@27
  436 expr: expr . "<<" expr
  437     | expr . ">>" expr
  438     | expr . "<<<" expr
  439     | expr . ">>>" expr
  440     | expr . '+' expr
  441     | expr . '-' expr
  442     | expr . '*' expr
  443     | expr . '/' expr
  444     | expr . '%' expr
  445     | expr . '<' expr
  446     | expr . '>' expr
  447     | expr . "==" expr
  448     | expr . "!=" expr
  449     | expr . "<=" expr
  450     | expr . ">=" expr
  451     | expr . '&' expr
  452     | expr . '|' expr
  453     | expr . '^' expr
  454     | expr . "&&" expr
  455     | expr . "||" expr
  456     | expr . "^^" expr
  457     | expr . ".." expr
  460     | expr . "++"
  461     | expr . "--"
  463     | expr . '[' expr ']'
  464     | expr . '.' '[' expr ']'
  465     | expr . "?[" expr ']'
  466     | expr . '.' "?[" expr ']'
  467     | expr . "?." "name"
  468     | expr . '.' "?." "name"
  476     | expr . "??" expr
  477     | expr . '?' expr ':' expr
  480     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  481     | expr . "is" basic_type_declaration
  482     | expr . "is" "name"
  483     | expr . "as" "name"
  486     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  487     | expr . "as" basic_type_declaration
  488     | expr . '?' "as" "name"
  491     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  492     | expr . '?' "as" basic_type_declaration
  500     | expr . "<|" expr
  501     | expr . "|>" expr
  502     | expr . "|>" basic_type_declaration
  514 expr_mtag: expr . '.' "$f" '(' expr ')'
  515          | expr . "?." "$f" '(' expr ')'
  516          | expr . '.' '.' "$f" '(' expr ')'
  517          | expr . '.' "?." "$f" '(' expr ')'
  518          | expr . "as" "$f" '(' expr ')'
  519          | expr . '?' "as" "$f" '(' expr ')'
  520          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 732
    "as"                 shift, and go to state 733
    "<<"                 shift, and go to state 742
    ">>"                 shift, and go to state 743
    "++"                 shift, and go to state 744
    "--"                 shift, and go to state 745
    "<="                 shift, and go to state 746
    ">="                 shift, and go to state 749
    "=="                 shift, and go to state 750
    "!="                 shift, and go to state 751
    "->"                 shift, and go to state 752
    "??"                 shift, and go to state 754
    "?."                 shift, and go to state 755
    "?["                 shift, and go to state 756
    "<|"                 shift, and go to state 757
    "|>"                 shift, and go to state 758
    "<<<"                shift, and go to state 760
    ">>>"                shift, and go to state 761
    "&&"                 shift, and go to state 764
    "||"                 shift, and go to state 765
    "^^"                 shift, and go to state 766
    ".."                 shift, and go to state 770
    "end of expression"  shift, and go to state 1665
    '?'                  shift, and go to state 772
    '|'                  shift, and go to state 773
    '^'                  shift, and go to state 774
    '&'                  shift, and go to state 775
    '<'                  shift, and go to state 776
    '>'                  shift, and go to state 777
    '-'                  shift, and go to state 778
    '+'                  shift, and go to state 779
    '*'                  shift, and go to state 780
    '/'                  shift, and go to state 781
    '%'                  shift, and go to state 782
    '.'                  shift, and go to state 783
    '['                  shift, and go to state 784


State 1658

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 307 (tuple_expansion_variable_declaration)


State 1659

  306 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 306 (tuple_expansion_variable_declaration)


State 1660

  542 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 542 (struct_variable_declaration_list)


State 1661

  790 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 790 (make_struct_dim_list)


State 1662

  791 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 915
    "name"  shift, and go to state 1295

    make_struct_fields  go to state 1666


State 1663

  844 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 844 (make_dim_decl)


State 1664

  847 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 847 (make_dim_decl)


State 1665

  305 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 305 (tuple_expansion_variable_declaration)


State 1666

  780 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  781                   | make_struct_fields . ',' "name" ":=" expr
  784                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  785                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  791 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1173
    ')'  shift, and go to state 1667


State 1667

  791 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 791 (make_struct_dim_list)
