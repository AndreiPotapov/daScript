Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 325 conflicts: 1 shift/reduce
State 422 conflicts: 1 shift/reduce
State 526 conflicts: 2 shift/reduce
State 528 conflicts: 2 shift/reduce
State 637 conflicts: 1 shift/reduce
State 833 conflicts: 1 shift/reduce
State 1063 conflicts: 1 shift/reduce
State 1181 conflicts: 1 shift/reduce
State 1471 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 string_builder_body: %empty
   30                    | string_builder_body character_sequence
   31                    | string_builder_body "{" expr "}"

   32 string_builder: "start of the string" string_builder_body "end of the string"

   33 reader_character_sequence: STRING_CHARACTER
   34                          | reader_character_sequence STRING_CHARACTER

   35 $@1: %empty

   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   37 options_declaration: "options" annotation_argument_list

   38 require_declaration: "require" require_module

   39 keyword_or_name: "name"
   40                | "keyword"
   41                | "type function"

   42 require_module_name: keyword_or_name
   43                    | '%' require_module_name
   44                    | require_module_name '.' keyword_or_name
   45                    | require_module_name '/' keyword_or_name

   46 require_module: require_module_name is_public_module
   47               | require_module_name "as" "name" is_public_module

   48 is_public_module: %empty
   49                 | "public"

   50 expect_declaration: "expect" expect_list

   51 expect_list: expect_error
   52            | expect_list ',' expect_error

   53 expect_error: "integer constant"
   54             | "integer constant" ':' "integer constant"

   55 expression_label: "label" "integer constant" ':'

   56 expression_goto: "goto" "label" "integer constant"
   57                | "goto" expr

   58 elif_or_static_elif: "elif"
   59                    | "static_elif"

   60 expression_else: %empty
   61                | "else" expression_block
   62                | elif_or_static_elif expr expression_block expression_else

   63 if_or_static_if: "if"
   64                | "static_if"

   65 expression_else_one_liner: %empty

   66 $@2: %empty

   67 expression_else_one_liner: "else" $@2 expression_if_one_liner

   68 expression_if_one_liner: expr
   69                        | expression_return_no_pipe
   70                        | expression_yield_no_pipe
   71                        | expression_break
   72                        | expression_continue

   73 expression_if_then_else: if_or_static_if expr expression_block expression_else

   74 $@3: %empty

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   76 $@4: %empty

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   78 expression_unsafe: "unsafe" expression_block

   79 expression_while_loop: "while" expr expression_block

   80 expression_with: "with" expr expression_block

   81 $@5: %empty

   82 expression_with_alias: "assume" "name" '=' $@5 expr

   83 annotation_argument_value: string_constant
   84                          | "name"
   85                          | "integer constant"
   86                          | "floating point constant"
   87                          | "true"
   88                          | "false"

   89 annotation_argument_value_list: annotation_argument_value
   90                               | annotation_argument_value_list ',' annotation_argument_value

   91 annotation_argument_name: "name"
   92                         | "type"
   93                         | "in"

   94 annotation_argument: annotation_argument_name '=' string_constant
   95                    | annotation_argument_name '=' "name"
   96                    | annotation_argument_name '=' "integer constant"
   97                    | annotation_argument_name '=' "floating point constant"
   98                    | annotation_argument_name '=' "true"
   99                    | annotation_argument_name '=' "false"
  100                    | annotation_argument_name
  101                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  102 annotation_argument_list: annotation_argument
  103                         | annotation_argument_list ',' annotation_argument

  104 metadata_argument_list: '@' annotation_argument
  105                       | metadata_argument_list '@' annotation_argument
  106                       | metadata_argument_list "end of expression"

  107 annotation_declaration_name: name_in_namespace
  108                            | "require"
  109                            | "private"
  110                            | "template"

  111 annotation_declaration_basic: annotation_declaration_name
  112                             | annotation_declaration_name '(' annotation_argument_list ')'

  113 annotation_declaration: annotation_declaration_basic
  114                       | '!' annotation_declaration
  115                       | annotation_declaration "&&" annotation_declaration
  116                       | annotation_declaration "||" annotation_declaration
  117                       | annotation_declaration "^^" annotation_declaration
  118                       | '(' annotation_declaration ')'
  119                       | "|>" annotation_declaration

  120 annotation_list: annotation_declaration
  121                | annotation_list ',' annotation_declaration

  122 optional_annotation_list: %empty
  123                         | '[' annotation_list ']'

  124 optional_function_argument_list: %empty
  125                                | '(' ')'
  126                                | '(' function_argument_list ')'

  127 optional_function_type: %empty
  128                       | ':' type_declaration

  129 function_name: "name"
  130              | "operator" '!'
  131              | "operator" '~'
  132              | "operator" "+="
  133              | "operator" "-="
  134              | "operator" "*="
  135              | "operator" "/="
  136              | "operator" "%="
  137              | "operator" "&="
  138              | "operator" "|="
  139              | "operator" "^="
  140              | "operator" "&&="
  141              | "operator" "||="
  142              | "operator" "^^="
  143              | "operator" "&&"
  144              | "operator" "||"
  145              | "operator" "^^"
  146              | "operator" '+'
  147              | "operator" '-'
  148              | "operator" '*'
  149              | "operator" '/'
  150              | "operator" '%'
  151              | "operator" '<'
  152              | "operator" '>'
  153              | "operator" ".."
  154              | "operator" "=="
  155              | "operator" "!="
  156              | "operator" "<="
  157              | "operator" ">="
  158              | "operator" '&'
  159              | "operator" '|'
  160              | "operator" '^'
  161              | "++" "operator"
  162              | "--" "operator"
  163              | "operator" "++"
  164              | "operator" "--"
  165              | "operator" "<<"
  166              | "operator" ">>"
  167              | "operator" "<<="
  168              | "operator" ">>="
  169              | "operator" "<<<"
  170              | "operator" ">>>"
  171              | "operator" "<<<="
  172              | "operator" ">>>="
  173              | "operator" '[' ']'
  174              | "operator" "?[" ']'
  175              | "operator" '.'
  176              | "operator" "?."
  177              | "operator" '.' "name"
  178              | "operator" '.' "name" ":="
  179              | "operator" "?." "name"
  180              | "operator" ":="
  181              | "operator" "delete"
  182              | "operator" "??"
  183              | "operator" "is"
  184              | "operator" "as"
  185              | "operator" "is" "name"
  186              | "operator" "as" "name"
  187              | "operator" '?' "as"
  188              | "operator" '?' "as" "name"
  189              | "bool"
  190              | "string"
  191              | "int"
  192              | "int2"
  193              | "int3"
  194              | "int4"
  195              | "uint"
  196              | "uint2"
  197              | "uint3"
  198              | "uint4"
  199              | "float"
  200              | "float2"
  201              | "float3"
  202              | "float4"
  203              | "range"
  204              | "urange"
  205              | "range64"
  206              | "urange64"
  207              | "int64"
  208              | "uint64"
  209              | "double"
  210              | "int8"
  211              | "uint8"
  212              | "int16"
  213              | "uint16"

  214 global_function_declaration: optional_annotation_list "def" function_declaration

  215 optional_public_or_private_function: %empty
  216                                    | "private"
  217                                    | "public"

  218 function_declaration_header: function_name optional_function_argument_list optional_function_type

  219 $@6: %empty

  220 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  221 expression_block: "begin of code block" expressions "end of code block"
  222                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  223 expr_call_pipe: expr expr_full_block_assumed_piped
  224               | expression_keyword expr_full_block_assumed_piped
  225               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  226 expression_any: "end of expression"
  227               | expr_pipe
  228               | expr_keyword
  229               | expr_assign_pipe
  230               | expr_assign "end of expression"
  231               | expression_delete "end of expression"
  232               | expression_let
  233               | expression_while_loop
  234               | expression_unsafe
  235               | expression_with
  236               | expression_with_alias
  237               | expression_for_loop
  238               | expression_break "end of expression"
  239               | expression_continue "end of expression"
  240               | expression_return
  241               | expression_yield
  242               | expression_if_then_else
  243               | expression_try_catch
  244               | expression_label "end of expression"
  245               | expression_goto "end of expression"
  246               | "pass" "end of expression"

  247 expressions: %empty
  248            | expressions expression_any
  249            | expressions error

  250 expr_keyword: "keyword" expr expression_block

  251 optional_expr_list: %empty
  252                   | expr_list optional_comma

  253 optional_expr_list_in_braces: %empty
  254                             | '(' optional_expr_list optional_comma ')'

  255 optional_expr_map_tuple_list: %empty
  256                             | expr_map_tuple_list optional_comma

  257 type_declaration_no_options_list: type_declaration
  258                                 | type_declaration_no_options_list c_or_s type_declaration

  259 $@7: %empty

  260 $@8: %empty

  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  262 $@9: %empty

  263 $@10: %empty

  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  265 expr_pipe: expr_assign " <|" expr_block
  266          | "@ <|" expr_block
  267          | "@@ <|" expr_block
  268          | "$ <|" expr_block
  269          | expr_call_pipe

  270 name_in_namespace: "name"
  271                  | "name" "::" "name"
  272                  | "::" "name"

  273 expression_delete: "delete" expr
  274                  | "delete" "explicit" expr

  275 $@11: %empty

  276 $@12: %empty

  277 new_type_declaration: '<' $@11 type_declaration '>' $@12
  278                     | structure_type_declaration

  279 expr_new: "new" new_type_declaration
  280         | "new" new_type_declaration '(' use_initializer ')'
  281         | "new" new_type_declaration '(' expr_list ')'
  282         | "new" new_type_declaration '(' make_struct_single ')'
  283         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  284         | "new" make_decl

  285 expression_break: "break"

  286 expression_continue: "continue"

  287 expression_return_no_pipe: "return"
  288                          | "return" expr_list
  289                          | "return" "<-" expr_list

  290 expression_return: expression_return_no_pipe "end of expression"
  291                  | "return" expr_pipe
  292                  | "return" "<-" expr_pipe

  293 expression_yield_no_pipe: "yield" expr
  294                         | "yield" "<-" expr

  295 expression_yield: expression_yield_no_pipe "end of expression"
  296                 | "yield" expr_pipe
  297                 | "yield" "<-" expr_pipe

  298 expression_try_catch: "try" expression_block "recover" expression_block

  299 kwd_let_var_or_nothing: "let"
  300                       | "var"
  301                       | %empty

  302 kwd_let: "let"
  303        | "var"

  304 optional_in_scope: "inscope"
  305                  | %empty

  306 tuple_expansion: "name"
  307                | tuple_expansion ',' "name"

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  310                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  314                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"
  315                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  316 expression_let: kwd_let optional_in_scope let_variable_declaration
  317               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  318 $@13: %empty

  319 $@14: %empty

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  321 $@15: %empty

  322 $@16: %empty

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  324 $@17: %empty

  325 $@18: %empty

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  327 $@19: %empty

  328 $@20: %empty

  329 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  330 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  331               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  332               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  333               | "typeinfo" name_in_namespace '(' expr ')'
  334               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  336 expr_list: expr
  337          | expr_list ',' expr

  338 block_or_simple_block: expression_block
  339                      | "=>" expr
  340                      | "=>" "<-" expr

  341 block_or_lambda: '$'
  342                | '@'
  343                | '@' '@'

  344 capture_entry: '&' "name"
  345              | '=' "name"
  346              | "<-" "name"
  347              | ":=" "name"
  348              | "name" '(' "name" ')'

  349 capture_list: capture_entry
  350             | capture_list ',' capture_entry

  351 optional_capture_list: %empty
  352                      | "[[" capture_list ']' ']'
  353                      | "capture" '(' capture_list ')'

  354 expr_block: expression_block
  355           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  357 $@21: %empty

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  359 expr_numeric_const: "integer constant"
  360                   | "unsigned integer constant"
  361                   | "long integer constant"
  362                   | "unsigned long integer constant"
  363                   | "unsigned int8 constant"
  364                   | "floating point constant"
  365                   | "double constant"

  366 expr_assign: expr
  367            | expr '=' expr
  368            | expr "<-" expr
  369            | expr ":=" expr
  370            | expr "&=" expr
  371            | expr "|=" expr
  372            | expr "^=" expr
  373            | expr "&&=" expr
  374            | expr "||=" expr
  375            | expr "^^=" expr
  376            | expr "+=" expr
  377            | expr "-=" expr
  378            | expr "*=" expr
  379            | expr "/=" expr
  380            | expr "%=" expr
  381            | expr "<<=" expr
  382            | expr ">>=" expr
  383            | expr "<<<=" expr
  384            | expr ">>>=" expr

  385 expr_assign_pipe_right: "@ <|" expr_block
  386                       | "@@ <|" expr_block
  387                       | "$ <|" expr_block
  388                       | expr_call_pipe

  389 expr_assign_pipe: expr '=' expr_assign_pipe_right
  390                 | expr "<-" expr_assign_pipe_right
  391                 | expr "&=" expr_assign_pipe_right
  392                 | expr "|=" expr_assign_pipe_right
  393                 | expr "^=" expr_assign_pipe_right
  394                 | expr "&&=" expr_assign_pipe_right
  395                 | expr "||=" expr_assign_pipe_right
  396                 | expr "^^=" expr_assign_pipe_right
  397                 | expr "+=" expr_assign_pipe_right
  398                 | expr "-=" expr_assign_pipe_right
  399                 | expr "*=" expr_assign_pipe_right
  400                 | expr "/=" expr_assign_pipe_right
  401                 | expr "%=" expr_assign_pipe_right
  402                 | expr "<<=" expr_assign_pipe_right
  403                 | expr ">>=" expr_assign_pipe_right
  404                 | expr "<<<=" expr_assign_pipe_right
  405                 | expr ">>>=" expr_assign_pipe_right

  406 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  407                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  408 expr_method_call: expr "->" "name" '(' ')'
  409                 | expr "->" "name" '(' expr_list ')'

  410 func_addr_name: name_in_namespace
  411               | "$i" '(' expr ')'

  412 func_addr_expr: '@' '@' func_addr_name

  413 $@22: %empty

  414 $@23: %empty

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  416 $@24: %empty

  417 $@25: %empty

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  419 expr_field: expr '.' "name"
  420           | expr '.' '.' "name"
  421           | expr '.' "name" '(' ')'
  422           | expr '.' "name" '(' expr_list ')'
  423           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr '.' basic_type_declaration '(' ')'
  425           | expr '.' basic_type_declaration '(' expr_list ')'

  426 $@26: %empty

  427 $@27: %empty

  428 expr_field: expr '.' $@26 error $@27

  429 expr_call: name_in_namespace '(' ')'
  430          | name_in_namespace '(' "uninitialized" ')'
  431          | name_in_namespace '(' make_struct_single ')'
  432          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  433          | name_in_namespace '(' expr_list ')'
  434          | basic_type_declaration '(' ')'
  435          | basic_type_declaration '(' expr_list ')'

  436 expr: "null"
  437     | name_in_namespace
  438     | expr_numeric_const
  439     | expr_reader
  440     | string_builder
  441     | make_decl
  442     | "true"
  443     | "false"
  444     | expr_field
  445     | expr_mtag
  446     | '!' expr
  447     | '~' expr
  448     | '+' expr
  449     | '-' expr
  450     | expr "<<" expr
  451     | expr ">>" expr
  452     | expr "<<<" expr
  453     | expr ">>>" expr
  454     | expr '+' expr
  455     | expr '-' expr
  456     | expr '*' expr
  457     | expr '/' expr
  458     | expr '%' expr
  459     | expr '<' expr
  460     | expr '>' expr
  461     | expr "==" expr
  462     | expr "!=" expr
  463     | expr "<=" expr
  464     | expr ">=" expr
  465     | expr '&' expr
  466     | expr '|' expr
  467     | expr '^' expr
  468     | expr "&&" expr
  469     | expr "||" expr
  470     | expr "^^" expr
  471     | expr ".." expr
  472     | "++" expr
  473     | "--" expr
  474     | expr "++"
  475     | expr "--"
  476     | '(' expr_list optional_comma ')'
  477     | expr '[' expr ']'
  478     | expr '.' '[' expr ']'
  479     | expr "?[" expr ']'
  480     | expr '.' "?[" expr ']'
  481     | expr "?." "name"
  482     | expr '.' "?." "name"
  483     | func_addr_expr
  484     | expr_call
  485     | '*' expr
  486     | "deref" '(' expr ')'
  487     | "addr" '(' expr ')'
  488     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  489     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  490     | expr "??" expr
  491     | expr '?' expr ':' expr

  492 $@28: %empty

  493 $@29: %empty

  494 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr "is" basic_type_declaration
  496     | expr "is" "name"
  497     | expr "as" "name"

  498 $@30: %empty

  499 $@31: %empty

  500 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr "as" basic_type_declaration
  502     | expr '?' "as" "name"

  503 $@32: %empty

  504 $@33: %empty

  505 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr '?' "as" basic_type_declaration
  507     | expr_type_info
  508     | expr_type_decl
  509     | expr_cast
  510     | expr_new
  511     | expr_method_call
  512     | expr_named_call
  513     | expr_full_block
  514     | expr "<|" expr
  515     | expr "|>" expr
  516     | expr "|>" basic_type_declaration
  517     | name_in_namespace "name"
  518     | "unsafe" '(' expr ')'
  519     | expression_keyword

  520 expr_mtag: "$$" '(' expr ')'
  521          | "$i" '(' expr ')'
  522          | "$v" '(' expr ')'
  523          | "$b" '(' expr ')'
  524          | "$a" '(' expr ')'
  525          | "..."
  526          | "$c" '(' expr ')' '(' ')'
  527          | "$c" '(' expr ')' '(' expr_list ')'
  528          | expr '.' "$f" '(' expr ')'
  529          | expr "?." "$f" '(' expr ')'
  530          | expr '.' '.' "$f" '(' expr ')'
  531          | expr '.' "?." "$f" '(' expr ')'
  532          | expr "as" "$f" '(' expr ')'
  533          | expr '?' "as" "$f" '(' expr ')'
  534          | expr "is" "$f" '(' expr ')'
  535          | '@' '@' "$c" '(' expr ')'

  536 optional_field_annotation: %empty
  537                          | "[[" annotation_argument_list ']' ']'
  538                          | metadata_argument_list

  539 optional_override: %empty
  540                  | "override"
  541                  | "sealed"

  542 optional_constant: %empty
  543                  | "const"

  544 optional_public_or_private_member_variable: %empty
  545                                           | "public"
  546                                           | "private"

  547 optional_static_member_variable: %empty
  548                                | "static"

  549 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  550 struct_variable_declaration_list: %empty

  551 $@34: %empty

  552 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  553 $@35: %empty

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  555 $@36: %empty

  556 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  557                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  558 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  559                              | "$a" '(' expr ')'

  560 function_argument_list: function_argument_declaration
  561                       | function_argument_list "end of expression" function_argument_declaration

  562 tuple_type: type_declaration
  563           | "name" ':' type_declaration

  564 tuple_type_list: tuple_type
  565                | tuple_type_list c_or_s tuple_type

  566 tuple_alias_type_list: %empty
  567                      | tuple_alias_type_list c_or_s
  568                      | tuple_alias_type_list tuple_type c_or_s

  569 variant_type: "name" ':' type_declaration

  570 variant_type_list: variant_type
  571                  | variant_type_list c_or_s variant_type

  572 variant_alias_type_list: %empty
  573                        | variant_alias_type_list c_or_s
  574                        | variant_alias_type_list variant_type c_or_s

  575 copy_or_move: '='
  576             | "<-"

  577 variable_declaration: variable_name_with_pos_list
  578                     | variable_name_with_pos_list '&'
  579                     | variable_name_with_pos_list ':' type_declaration
  580                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  581                     | variable_name_with_pos_list copy_or_move expr
  582                     | variable_name_with_pos_list copy_or_move expr_pipe

  583 copy_or_move_or_clone: '='
  584                      | "<-"
  585                      | ":="

  586 optional_ref: %empty
  587             | '&'

  588 let_variable_name_with_pos_list: "name"
  589                                | "$i" '(' expr ')'
  590                                | "name" "aka" "name"
  591                                | let_variable_name_with_pos_list ',' "name"
  592                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  593 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  594                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  595                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  596                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  597                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  598 global_variable_declaration_list: %empty

  599 $@37: %empty

  600 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  601 optional_shared: %empty
  602                | "shared"

  603 optional_public_or_private_variable: %empty
  604                                    | "private"
  605                                    | "public"

  606 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  607 $@38: %empty

  608 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  609 enum_list: %empty
  610          | enum_list "end of expression"
  611          | enum_list "name" "end of expression"
  612          | enum_list "name" '=' expr "end of expression"

  613 optional_public_or_private_alias: %empty
  614                                 | "private"
  615                                 | "public"

  616 $@39: %empty

  617 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  618 alias_list: single_alias "end of expression"
  619           | alias_list single_alias "end of expression"

  620 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  621 $@40: %empty

  622 alias_declaration: "typedef" $@40 single_alias "end of expression"

  623 optional_public_or_private_enum: %empty
  624                                | "private"
  625                                | "public"

  626 enum_name: "name"

  627 $@41: %empty

  628 $@42: %empty

  629 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  630 $@43: %empty

  631 $@44: %empty

  632 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  633 optional_structure_parent: %empty
  634                          | ':' name_in_namespace

  635 optional_sealed: %empty
  636                | "sealed"

  637 structure_name: optional_sealed "name" optional_structure_parent

  638 class_or_struct: "class"
  639                | "struct"
  640                | "template" "class"
  641                | "template" "struct"

  642 optional_public_or_private_structure: %empty
  643                                     | "private"
  644                                     | "public"

  645 optional_struct_variable_declaration_list: %empty
  646                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  647 $@45: %empty

  648 $@46: %empty

  649 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  650 variable_name_with_pos_list: "name"
  651                            | "$i" '(' expr ')'
  652                            | "name" "aka" "name"
  653                            | variable_name_with_pos_list ',' "name"
  654                            | variable_name_with_pos_list ',' "name" "aka" "name"

  655 basic_type_declaration: "bool"
  656                       | "string"
  657                       | "int"
  658                       | "int8"
  659                       | "int16"
  660                       | "int64"
  661                       | "int2"
  662                       | "int3"
  663                       | "int4"
  664                       | "uint"
  665                       | "uint8"
  666                       | "uint16"
  667                       | "uint64"
  668                       | "uint2"
  669                       | "uint3"
  670                       | "uint4"
  671                       | "float"
  672                       | "float2"
  673                       | "float3"
  674                       | "float4"
  675                       | "void"
  676                       | "range"
  677                       | "urange"
  678                       | "range64"
  679                       | "urange64"
  680                       | "double"
  681                       | "bitfield"

  682 enum_basic_type_declaration: "int"
  683                            | "int8"
  684                            | "int16"
  685                            | "uint"
  686                            | "uint8"
  687                            | "uint16"
  688                            | "int64"
  689                            | "uint64"

  690 structure_type_declaration: name_in_namespace

  691 auto_type_declaration: "auto"
  692                      | "auto" '(' "name" ')'
  693                      | "$t" '(' expr ')'

  694 bitfield_bits: "name"
  695              | bitfield_bits "end of expression" "name"

  696 bitfield_alias_bits: %empty
  697                    | bitfield_alias_bits "end of expression"
  698                    | bitfield_alias_bits "name" "end of expression"

  699 $@47: %empty

  700 $@48: %empty

  701 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  702 c_or_s: ','
  703       | "end of expression"

  704 table_type_pair: type_declaration
  705                | type_declaration c_or_s type_declaration

  706 dim_list: '[' expr ']'
  707         | dim_list '[' expr ']'

  708 type_declaration_no_options: basic_type_declaration
  709                            | auto_type_declaration
  710                            | bitfield_type_declaration
  711                            | structure_type_declaration
  712                            | type_declaration_no_options dim_list
  713                            | type_declaration_no_options '[' ']'

  714 $@49: %empty

  715 $@50: %empty

  716 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  717                            | "typedecl" '(' expr ')'
  718                            | '$' name_in_namespace '(' optional_expr_list ')'

  719 $@51: %empty

  720 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  721                            | type_declaration_no_options '-' '[' ']'
  722                            | type_declaration_no_options "explicit"
  723                            | type_declaration_no_options "const"
  724                            | type_declaration_no_options '-' "const"
  725                            | type_declaration_no_options '&'
  726                            | type_declaration_no_options '-' '&'
  727                            | type_declaration_no_options '#'
  728                            | type_declaration_no_options "implicit"
  729                            | type_declaration_no_options '-' '#'
  730                            | type_declaration_no_options "==" "const"
  731                            | type_declaration_no_options "==" '&'
  732                            | type_declaration_no_options '?'

  733 $@52: %empty

  734 $@53: %empty

  735 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  736                            | type_declaration_no_options "??"

  737 $@54: %empty

  738 $@55: %empty

  739 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  740 $@56: %empty

  741 $@57: %empty

  742 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  743 $@58: %empty

  744 $@59: %empty

  745 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  746                            | "block"

  747 $@60: %empty

  748 $@61: %empty

  749 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  750 $@62: %empty

  751 $@63: %empty

  752 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  753                            | "function"

  754 $@64: %empty

  755 $@65: %empty

  756 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  757 $@66: %empty

  758 $@67: %empty

  759 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  760                            | "lambda"

  761 $@68: %empty

  762 $@69: %empty

  763 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  764 $@70: %empty

  765 $@71: %empty

  766 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  767 $@72: %empty

  768 $@73: %empty

  769 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  770 $@74: %empty

  771 $@75: %empty

  772 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  773 type_declaration: type_declaration_no_options
  774                 | type_declaration '|' type_declaration_no_options
  775                 | type_declaration '|' '#'

  776 $@76: %empty

  777 $@77: %empty

  778 $@78: %empty

  779 $@79: %empty

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  781 $@80: %empty

  782 $@81: %empty

  783 $@82: %empty

  784 $@83: %empty

  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  786 $@84: %empty

  787 $@85: %empty

  788 $@86: %empty

  789 $@87: %empty

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  791 make_decl: make_struct_decl
  792          | make_dim_decl
  793          | make_table_decl
  794          | array_comprehension
  795          | make_tuple_call

  796 make_struct_fields: "name" copy_or_move expr
  797                   | "name" ":=" expr
  798                   | make_struct_fields ',' "name" copy_or_move expr
  799                   | make_struct_fields ',' "name" ":=" expr
  800                   | "$f" '(' expr ')' copy_or_move expr
  801                   | "$f" '(' expr ')' ":=" expr
  802                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  804 make_variant_dim: make_struct_fields

  805 make_struct_single: make_struct_fields

  806 make_struct_dim: make_struct_fields
  807                | make_struct_dim "end of expression" make_struct_fields

  808 make_struct_dim_list: '(' make_struct_fields ')'
  809                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  810 make_struct_dim_decl: make_struct_fields
  811                     | make_struct_dim_list optional_comma

  812 optional_make_struct_dim_decl: make_struct_dim_decl
  813                              | %empty

  814 optional_block: %empty
  815               | "where" expr_block

  816 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  817                                    | ";}}"

  818 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  819                                    | ";}]"

  820 optional_trailing_semicolon_sqr_sqr: ']' ']'
  821                                    | ";]]"

  822 optional_trailing_delim_sqr_sqr: ']' ']'
  823                                | ";]]"
  824                                | ",]]"

  825 optional_trailing_delim_cur_sqr: "end of code block" ']'
  826                                | ";}]"
  827                                | ",}]"

  828 use_initializer: %empty
  829                | "uninitialized"

  830 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  831                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  832                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  833                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  834                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  835                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  836 $@88: %empty

  837 $@89: %empty

  838 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

  839 $@90: %empty

  840 $@91: %empty

  841 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  842 $@92: %empty

  843 $@93: %empty

  844 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

  845 $@94: %empty

  846 $@95: %empty

  847 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  848 make_tuple: expr
  849           | expr "=>" expr
  850           | make_tuple ',' expr

  851 make_map_tuple: expr "=>" expr
  852               | expr

  853 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  854 $@96: %empty

  855 $@97: %empty

  856 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

  857 make_dim: make_tuple
  858         | make_dim "end of expression" make_tuple

  859 make_dim_decl: '[' expr_list optional_comma ']'
  860              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  861              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  862 $@98: %empty

  863 $@99: %empty

  864 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  865 $@100: %empty

  866 $@101: %empty

  867 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  868 $@102: %empty

  869 $@103: %empty

  870 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  871              | "array" '(' expr_list optional_comma ')'

  872 $@104: %empty

  873 $@105: %empty

  874 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'
  875              | "fixed_array" '(' expr_list optional_comma ')'

  876 $@106: %empty

  877 $@107: %empty

  878 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  879 make_table: make_map_tuple
  880           | make_table "end of expression" make_map_tuple

  881 expr_map_tuple_list: make_map_tuple
  882                    | expr_map_tuple_list ',' make_map_tuple

  883 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  884                | "{{" make_table optional_trailing_semicolon_cur_cur
  885                | "table" '(' optional_expr_map_tuple_list ')'
  886                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  887                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  888 array_comprehension_where: %empty
  889                          | "end of expression" "where" expr

  890 optional_comma: %empty
  891               | ','

  892 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  893                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  894                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  895                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  896                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  897                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 114 130 446
    '#' (35) 727 729 775
    '$' (36) 20 341 718 720
    '%' (37) 36 43 150 458
    '&' (38) 158 344 465 578 587 725 726 731
    '(' (40) 101 112 118 125 126 254 280 281 282 283 310 311 314 315 330 331 332 333 334 335 348 353 406 407 408 409 411 421 422 423 424 425 429 430 431 432 433 434 435 476 486 487 488 489 518 520 521 522 523 524 526 527 528 529 530 531 532 533 534 535 559 589 651 692 693 717 718 720 800 801 802 803 808 809 832 833 835 838 841 844 853 856 864 867 870 871 874 875 878 885 886 887
    ')' (41) 101 112 118 125 126 254 280 281 282 283 310 311 314 315 330 331 332 333 334 335 348 353 406 407 408 409 411 421 422 423 424 425 429 430 431 432 433 434 435 476 486 487 488 489 518 520 521 522 523 524 526 527 528 529 530 531 532 533 534 535 559 589 651 692 693 717 718 720 800 801 802 803 808 809 832 833 835 838 841 844 853 856 864 867 870 871 874 875 878 885 886 887
    '*' (42) 148 456 485
    '+' (43) 146 448 454
    ',' (44) 52 90 103 121 307 337 350 407 591 592 653 654 702 798 799 802 803 809 850 882 891
    '-' (45) 147 449 455 721 724 726 729
    '.' (46) 44 175 177 178 419 420 421 422 423 424 425 428 478 480 482 528 530 531
    '/' (47) 45 149 457
    ':' (58) 54 55 128 308 309 310 311 491 563 569 579 580 593 594 595 632 634
    "end of expression" (59) 15 16 75 106 226 230 231 238 239 244 245 246 290 295 308 310 312 314 335 552 554 557 561 593 594 596 610 611 612 618 619 622 695 697 698 703 807 858 880 889 892 893 894 895 896 897
    '<' (60) 151 225 261 264 277 320 323 326 329 331 332 334 335 415 418 459 488 489 494 500 505 701 716 720 735 739 742 745 749 752 756 759 763 766 769 772 838 841 844 847 856 864 867 870 874 878 886 887
    '=' (61) 82 94 95 96 97 98 99 101 345 367 389 575 583 612 617
    '>' (62) 152 225 261 264 277 320 323 326 329 331 332 334 335 415 418 460 488 489 494 500 505 701 716 720 735 739 742 745 749 752 756 759 763 766 769 772 838 841 844 847 856 864 867 870 874 878 886 887
    '?' (63) 187 188 491 502 505 506 533 732
    '@' (64) 104 105 342 343 412 415 418 535
    '[' (91) 123 173 406 407 423 477 478 557 706 707 713 721 859 892 893
    ']' (93) 123 173 174 308 309 312 313 352 406 407 423 477 478 479 480 537 557 706 707 713 721 818 820 822 825 859 892 893 894 895
    '^' (94) 160 467
    "begin of code block" (123) 221 222 606 620 629 632 646 780 785 790 883 896
    '|' (124) 159 466 774 775
    "end of code block" (125) 221 222 606 620 629 632 646 780 785 790 816 818 825 883 895 896 897
    '~' (126) 131 447
    error (256) 249 428
    "lexer error" (258)
    "capture" (259) 353
    "struct" (260) 639 641 838 864
    "class" (261) 638 640 841
    "let" (262) 299 302
    "def" (263) 214 554 556
    "while" (264) 79
    "if" (265) 63 75
    "static_if" (266) 64
    "else" (267) 61 67
    "for" (268) 77 892 893 894 895 896 897
    "recover" (269) 298
    "true" (270) 87 98 442
    "false" (271) 88 99 443
    "new" (272) 279 280 281 282 283 284
    "typeinfo" (273) 330 331 332 333 334 335
    "type" (274) 92 329 494 500 505 716
    "in" (275) 77 93 892 893 894 895 896 897
    "is" (276) 183 185 494 495 496 534
    "as" (277) 47 184 186 187 188 497 500 501 502 505 506 532 533
    "elif" (278) 58
    "static_elif" (279) 59
    "array" (280) 739 864 867 870 871 874
    "return" (281) 287 288 289 291 292
    "null" (282) 436
    "break" (283) 285
    "try" (284) 298
    "options" (285) 37
    "table" (286) 742 885 886 887
    "expect" (287) 50
    "const" (288) 543 723 724 730
    "require" (289) 38 108
    "operator" (290) 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188
    "enum" (291) 629 632
    "finally" (292) 222
    "delete" (293) 181 273 274
    "deref" (294) 486
    "typedef" (295) 620 622
    "typedecl" (296) 717
    "with" (297) 80
    "aka" (298) 590 592 652 654
    "assume" (299) 82
    "cast" (300) 320
    "override" (301) 540
    "abstract" (302) 554
    "upcast" (303) 323
    "iterator" (304) 745 893
    "var" (305) 300 303
    "addr" (306) 487
    "continue" (307) 286
    "where" (308) 815 889
    "pass" (309) 246
    "reinterpret" (310) 326
    "module" (311) 22
    "public" (312) 18 49 217 545 605 615 625 644
    "label" (313) 55 56
    "goto" (314) 56 57
    "implicit" (315) 728
    "explicit" (316) 274 722
    "shared" (317) 602
    "private" (318) 19 109 216 546 604 614 624 643
    "smart_ptr" (319) 735
    "unsafe" (320) 78 518
    "inscope" (321) 304
    "static" (322) 548
    "fixed_array" (323) 875 878
    "default" (324) 847
    "uninitialized" (325) 283 430 432 829
    "bool" (326) 189 655
    "void" (327) 675
    "string" (328) 190 656
    "auto" (329) 691 692
    "int" (330) 191 657 682
    "int2" (331) 192 661
    "int3" (332) 193 662
    "int4" (333) 194 663
    "uint" (334) 195 664 685
    "bitfield" (335) 681 701 790
    "uint2" (336) 196 668
    "uint3" (337) 197 669
    "uint4" (338) 198 670
    "float" (339) 199 671
    "float2" (340) 200 672
    "float3" (341) 201 673
    "float4" (342) 202 674
    "range" (343) 203 676
    "urange" (344) 204 677
    "range64" (345) 205 678
    "urange64" (346) 206 679
    "block" (347) 746 749 752
    "int64" (348) 207 660 688
    "uint64" (349) 208 667 689
    "double" (350) 209 680
    "function" (351) 753 756 759
    "lambda" (352) 760 763 766
    "int8" (353) 210 658 683
    "uint8" (354) 211 665 686
    "int16" (355) 212 659 684
    "uint16" (356) 213 666 687
    "tuple" (357) 769 780 853 856 867
    "variant" (358) 772 785 844 870
    "generator" (359) 225 488 489
    "yield" (360) 293 294 296 297
    "sealed" (361) 541 636
    "template" (362) 110 640 641
    "+=" (363) 132 376 397
    "-=" (364) 133 377 398
    "/=" (365) 135 379 400
    "*=" (366) 134 378 399
    "%=" (367) 136 380 401
    "&=" (368) 137 370 391
    "|=" (369) 138 371 392
    "^=" (370) 139 372 393
    "<<" (371) 165 450
    ">>" (372) 166 451
    "++" (373) 161 163 472 474
    "--" (374) 162 164 473 475
    "<=" (375) 156 463
    "<<=" (376) 167 381 402
    ">>=" (377) 168 382 403
    ">=" (378) 157 464
    "==" (379) 154 461 730 731
    "!=" (380) 155 462
    "->" (381) 408 409
    "<-" (382) 289 292 294 297 340 346 368 390 576 584
    "??" (383) 182 490 736
    "?." (384) 176 179 481 482 529 531
    "?[" (385) 174 479 480
    "<|" (386) 514
    " <|" (387) 265
    "$ <|" (388) 268 387
    "@ <|" (389) 266 385
    "@@ <|" (390) 267 386
    "|>" (391) 119 515 516
    ":=" (392) 178 180 347 369 585 797 799 801 803
    "<<<" (393) 169 452
    ">>>" (394) 170 453
    "<<<=" (395) 171 383 404
    ">>>=" (396) 172 384 405
    "=>" (397) 339 340 849 851
    "::" (398) 271 272
    "&&" (399) 115 143 468
    "||" (400) 116 144 469
    "^^" (401) 117 145 470
    "&&=" (402) 140 373 394
    "||=" (403) 141 374 395
    "^^=" (404) 142 375 396
    ".." (405) 153 471
    "$$" (406) 520
    "$i" (407) 411 521 589 651
    "$v" (408) 522
    "$b" (409) 523
    "$a" (410) 524 559
    "$t" (411) 693
    "$c" (412) 526 527 535
    "$f" (413) 528 529 530 531 532 533 534 800 801 802 803
    "..." (414) 525
    "[[" (415) 308 309 312 313 352 537 830 831 832 833 860 894
    "[{" (416) 834 835 861 895
    "{{" (417) 884 897
    "integer constant" <i> (418) 53 54 55 56 85 96 359
    "long integer constant" <i64> (419) 361
    "unsigned integer constant" <ui> (420) 360
    "unsigned long integer constant" <ui64> (421) 362
    "unsigned int8 constant" <ui> (422) 363
    "floating point constant" <fd> (423) 86 97 364
    "double constant" <d> (424) 365
    "name" <s> (425) 21 39 47 82 84 91 95 129 177 178 179 185 186 188 270 271 272 306 307 331 332 334 335 344 345 346 347 348 408 409 419 420 421 422 423 481 482 496 497 502 517 563 569 588 590 591 592 611 612 617 626 637 650 652 653 654 692 694 695 698 780 785 790 796 797 798 799
    "keyword" <s> (426) 40 250 261
    "type function" <s> (427) 41 264
    "start of the string" (428) 27 28 32
    STRING_CHARACTER <ch> (429) 23 25 33 34
    STRING_CHARACTER_ESC (430) 24 26
    "end of the string" (431) 27 28 32
    "{" (432) 31
    "}" (433) 31
    "end of failed eader macro" (434)
    ";}}" (435) 817
    ";}]" (436) 819 826
    ";]]" (437) 821 823
    ",]]" (438) 824
    ",}]" (439) 827
    UNARY_MINUS (440)
    UNARY_PLUS (441)
    PRE_INC (442)
    PRE_DEC (443)
    POST_INC (444)
    POST_DEC (445)
    DEREF (446)


Nonterminals, with rules where they appear

    $accept (219)
        on left: 0
    program (220)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (221)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (222)
        on left: 17 18 19
        on right: 22
    module_name <s> (223)
        on left: 20 21
        on right: 22
    module_declaration (224)
        on left: 22
        on right: 2
    character_sequence <s> (225)
        on left: 23 24 25 26
        on right: 25 26 27 30
    string_constant <s> (226)
        on left: 27 28
        on right: 83 94
    string_builder_body <pExpression> (227)
        on left: 29 30 31
        on right: 30 31 32
    string_builder <pExpression> (228)
        on left: 32
        on right: 440
    reader_character_sequence (229)
        on left: 33 34
        on right: 34 36
    expr_reader <pExpression> (230)
        on left: 36
        on right: 16 439
    $@1 (231)
        on left: 35
        on right: 36
    options_declaration (232)
        on left: 37
        on right: 9
    require_declaration (233)
        on left: 38
        on right: 8
    keyword_or_name <s> (234)
        on left: 39 40 41
        on right: 42 44 45
    require_module_name <s> (235)
        on left: 42 43 44 45
        on right: 43 44 45 46 47
    require_module (236)
        on left: 46 47
        on right: 38
    is_public_module <b> (237)
        on left: 48 49
        on right: 46 47
    expect_declaration (238)
        on left: 50
        on right: 7
    expect_list (239)
        on left: 51 52
        on right: 50 52
    expect_error (240)
        on left: 53 54
        on right: 51 52
    expression_label <pExpression> (241)
        on left: 55
        on right: 244
    expression_goto <pExpression> (242)
        on left: 56 57
        on right: 245
    elif_or_static_elif <b> (243)
        on left: 58 59
        on right: 62
    expression_else <pExpression> (244)
        on left: 60 61 62
        on right: 62 73
    if_or_static_if <b> (245)
        on left: 63 64
        on right: 73
    expression_else_one_liner <pExpression> (246)
        on left: 65 67
        on right: 75
    $@2 (247)
        on left: 66
        on right: 67
    expression_if_one_liner <pExpression> (248)
        on left: 68 69 70 71 72
        on right: 67 75
    expression_if_then_else <pExpression> (249)
        on left: 73 75
        on right: 242
    $@3 (250)
        on left: 74
        on right: 75
    expression_for_loop <pExpression> (251)
        on left: 77
        on right: 237
    $@4 (252)
        on left: 76
        on right: 77
    expression_unsafe <pExpression> (253)
        on left: 78
        on right: 234
    expression_while_loop <pExpression> (254)
        on left: 79
        on right: 233
    expression_with <pExpression> (255)
        on left: 80
        on right: 235
    expression_with_alias <pExpression> (256)
        on left: 82
        on right: 236
    $@5 (257)
        on left: 81
        on right: 82
    annotation_argument_value <aa> (258)
        on left: 83 84 85 86 87 88
        on right: 89 90
    annotation_argument_value_list <aaList> (259)
        on left: 89 90
        on right: 90 101
    annotation_argument_name <s> (260)
        on left: 91 92 93
        on right: 94 95 96 97 98 99 100 101
    annotation_argument <aa> (261)
        on left: 94 95 96 97 98 99 100 101
        on right: 102 103 104 105
    annotation_argument_list <aaList> (262)
        on left: 102 103
        on right: 37 103 112 537
    metadata_argument_list <aaList> (263)
        on left: 104 105 106
        on right: 105 106 538
    annotation_declaration_name <s> (264)
        on left: 107 108 109 110
        on right: 111 112
    annotation_declaration_basic <fa> (265)
        on left: 111 112
        on right: 113
    annotation_declaration <fa> (266)
        on left: 113 114 115 116 117 118 119
        on right: 114 115 116 117 118 119 120 121
    annotation_list <faList> (267)
        on left: 120 121
        on right: 121 123 557
    optional_annotation_list <faList> (268)
        on left: 122 123
        on right: 214 355 356 358 554 556 629 632 649
    optional_function_argument_list <pVarDeclList> (269)
        on left: 124 125 126
        on right: 218 355 356 358 418 752 759 766
    optional_function_type <pTypeDecl> (270)
        on left: 127 128
        on right: 218 355 356 358 418 752 759 766
    function_name <s> (271)
        on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213
        on right: 218
    global_function_declaration (272)
        on left: 214
        on right: 6
    optional_public_or_private_function <b> (273)
        on left: 215 216 217
        on right: 220
    function_declaration_header <pFuncDecl> (274)
        on left: 218
        on right: 220 554 556
    function_declaration <pFuncDecl> (275)
        on left: 220
        on right: 214
    $@6 (276)
        on left: 219
        on right: 220
    expression_block <pExpression> (277)
        on left: 221 222
        on right: 61 62 73 77 78 79 80 220 250 298 338 354 358 556
    expr_call_pipe <pExpression> (278)
        on left: 223 224 225
        on right: 269 388
    expression_any <pExpression> (279)
        on left: 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246
        on right: 248
    expressions <pExpression> (280)
        on left: 247 248 249
        on right: 221 222 248 249
    expr_keyword <pExpression> (281)
        on left: 250
        on right: 228
    optional_expr_list <pExpression> (282)
        on left: 251 252
        on right: 254 718 720 874
    optional_expr_list_in_braces <pExpression> (283)
        on left: 253 254
        on right: 264
    optional_expr_map_tuple_list <pExpression> (284)
        on left: 255 256
        on right: 885 886 887
    type_declaration_no_options_list <pTypeDeclList> (285)
        on left: 257 258
        on right: 258 261 264 720
    expression_keyword <pExpression> (286)
        on left: 261 264
        on right: 224 519
    $@7 (287)
        on left: 259
        on right: 261
    $@8 (288)
        on left: 260
        on right: 261
    $@9 (289)
        on left: 262
        on right: 264
    $@10 (290)
        on left: 263
        on right: 264
    expr_pipe <pExpression> (291)
        on left: 265 266 267 268 269
        on right: 227 291 292 296 297 309 311 313 315 582 595 597
    name_in_namespace <s> (292)
        on left: 270 271 272
        on right: 36 107 330 331 332 333 334 335 406 407 410 429 430 431 432 433 437 517 634 690 718 720
    expression_delete <pExpression> (293)
        on left: 273 274
        on right: 231
    new_type_declaration <pTypeDecl> (294)
        on left: 277 278
        on right: 279 280 281 282 283
    $@11 (295)
        on left: 275
        on right: 277
    $@12 (296)
        on left: 276
        on right: 277
    expr_new <pExpression> (297)
        on left: 279 280 281 282 283 284
        on right: 510
    expression_break <pExpression> (298)
        on left: 285
        on right: 71 238
    expression_continue <pExpression> (299)
        on left: 286
        on right: 72 239
    expression_return_no_pipe <pExpression> (300)
        on left: 287 288 289
        on right: 69 290
    expression_return <pExpression> (301)
        on left: 290 291 292
        on right: 240
    expression_yield_no_pipe <pExpression> (302)
        on left: 293 294
        on right: 70 295
    expression_yield <pExpression> (303)
        on left: 295 296 297
        on right: 241
    expression_try_catch <pExpression> (304)
        on left: 298
        on right: 243
    kwd_let_var_or_nothing <b> (305)
        on left: 299 300 301
        on right: 558
    kwd_let <b> (306)
        on left: 302 303
        on right: 316 317 606 608
    optional_in_scope <b> (307)
        on left: 304 305
        on right: 316 317
    tuple_expansion <pNameList> (308)
        on left: 306 307
        on right: 307 308 309 310 311 312 313 314 315
    tuple_expansion_variable_declaration <pVarDecl> (309)
        on left: 308 309 310 311 312 313 314 315
        on right: 317
    expression_let <pExpression> (310)
        on left: 316 317
        on right: 232
    expr_cast <pExpression> (311)
        on left: 320 323 326
        on right: 509
    $@13 (312)
        on left: 318
        on right: 320
    $@14 (313)
        on left: 319
        on right: 320
    $@15 (314)
        on left: 321
        on right: 323
    $@16 (315)
        on left: 322
        on right: 323
    $@17 (316)
        on left: 324
        on right: 326
    $@18 (317)
        on left: 325
        on right: 326
    expr_type_decl <pExpression> (318)
        on left: 329
        on right: 508
    $@19 (319)
        on left: 327
        on right: 329
    $@20 (320)
        on left: 328
        on right: 329
    expr_type_info <pExpression> (321)
        on left: 330 331 332 333 334 335
        on right: 507
    expr_list <pExpression> (322)
        on left: 336 337
        on right: 77 252 281 288 289 337 407 409 422 425 433 435 476 527 853 859 871 875 878 892 893 894 895 896 897
    block_or_simple_block <pExpression> (323)
        on left: 338 339 340
        on right: 355 356
    block_or_lambda <i> (324)
        on left: 341 342 343
        on right: 355 356 358
    capture_entry <pCapt> (325)
        on left: 344 345 346 347 348
        on right: 349 350
    capture_list <pCaptList> (326)
        on left: 349 350
        on right: 350 352 353
    optional_capture_list <pCaptList> (327)
        on left: 351 352 353
        on right: 225 355 356 358 488 489
    expr_block <pExpression> (328)
        on left: 354 355
        on right: 265 266 267 268 385 386 387 815
    expr_full_block <pExpression> (329)
        on left: 356
        on right: 513
    expr_full_block_assumed_piped <pExpression> (330)
        on left: 358
        on right: 223 224 225
    $@21 (331)
        on left: 357
        on right: 358
    expr_numeric_const <pExpression> (332)
        on left: 359 360 361 362 363 364 365
        on right: 438
    expr_assign <pExpression> (333)
        on left: 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384
        on right: 230 265
    expr_assign_pipe_right <pExpression> (334)
        on left: 385 386 387 388
        on right: 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405
    expr_assign_pipe <pExpression> (335)
        on left: 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405
        on right: 229
    expr_named_call <pExpression> (336)
        on left: 406 407
        on right: 512
    expr_method_call <pExpression> (337)
        on left: 408 409
        on right: 511
    func_addr_name <pExpression> (338)
        on left: 410 411
        on right: 412 415 418
    func_addr_expr <pExpression> (339)
        on left: 412 415 418
        on right: 483
    $@22 (340)
        on left: 413
        on right: 415
    $@23 (341)
        on left: 414
        on right: 415
    $@24 (342)
        on left: 416
        on right: 418
    $@25 (343)
        on left: 417
        on right: 418
    expr_field <pExpression> (344)
        on left: 419 420 421 422 423 424 425 428
        on right: 444
    $@26 (345)
        on left: 426
        on right: 428
    $@27 (346)
        on left: 427
        on right: 428
    expr_call <pExpression> (347)
        on left: 429 430 431 432 433 434 435
        on right: 484
    expr <pExpression> (348)
        on left: 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 494 495 496 497 500 501 502 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519
        on right
    $@28 (349)
        on left: 492
        on right: 494
    $@29 (350)
        on left: 493
        on right: 494
    $@30 (351)
        on left: 498
        on right: 500
    $@31 (352)
        on left: 499
        on right: 500
    $@32 (353)
        on left: 503
        on right: 505
    $@33 (354)
        on left: 504
        on right: 505
    expr_mtag <pExpression> (355)
        on left: 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535
        on right: 445
    optional_field_annotation <aaList> (356)
        on left: 536 537 538
        on right: 549 558 600 608
    optional_override <i> (357)
        on left: 539 540 541
        on right: 549 556
    optional_constant <b> (358)
        on left: 542 543
        on right: 554 556
    optional_public_or_private_member_variable <b> (359)
        on left: 544 545 546
        on right: 549 554 556
    optional_static_member_variable <b> (360)
        on left: 547 548
        on right: 549 556
    structure_variable_declaration <pVarDecl> (361)
        on left: 549
        on right: 552
    struct_variable_declaration_list <pVarDeclList> (362)
        on left: 550 552 554 556 557
        on right: 552 554 556 557 646
    $@34 (363)
        on left: 551
        on right: 552
    $@35 (364)
        on left: 553
        on right: 554
    $@36 (365)
        on left: 555
        on right: 556
    function_argument_declaration <pVarDecl> (366)
        on left: 558 559
        on right: 560 561
    function_argument_list <pVarDeclList> (367)
        on left: 560 561
        on right: 126 561
    tuple_type <pVarDecl> (368)
        on left: 562 563
        on right: 564 565 568
    tuple_type_list <pVarDeclList> (369)
        on left: 564 565
        on right: 565 769
    tuple_alias_type_list <pVarDeclList> (370)
        on left: 566 567 568
        on right: 567 568 780
    variant_type <pVarDecl> (371)
        on left: 569
        on right: 570 571 574
    variant_type_list <pVarDeclList> (372)
        on left: 570 571
        on right: 571 772
    variant_alias_type_list <pVarDeclList> (373)
        on left: 572 573 574
        on right: 573 574 785
    copy_or_move <b> (374)
        on left: 575 576
        on right: 580 581 582 796 798 800 802
    variable_declaration <pVarDecl> (375)
        on left: 577 578 579 580 581 582
        on right: 549 558
    copy_or_move_or_clone <i> (376)
        on left: 583 584 585
        on right: 308 309 310 311 312 313 314 315 594 595 596 597
    optional_ref <b> (377)
        on left: 586 587
        on right: 312 313 314 315 596 597
    let_variable_name_with_pos_list <pNameWithPosList> (378)
        on left: 588 589 590 591 592
        on right: 591 592 593 594 595 596 597
    let_variable_declaration <pVarDecl> (379)
        on left: 593 594 595 596 597
        on right: 316 600 608
    global_variable_declaration_list <pVarDeclList> (380)
        on left: 598 600
        on right: 600 606
    $@37 (381)
        on left: 599
        on right: 600
    optional_shared <b> (382)
        on left: 601 602
        on right: 22 606 608
    optional_public_or_private_variable <b> (383)
        on left: 603 604 605
        on right: 606 608
    global_let (384)
        on left: 606 608
        on right: 5
    $@38 (385)
        on left: 607
        on right: 608
    enum_list <pEnum> (386)
        on left: 609 610 611 612
        on right: 610 611 612 629 632
    optional_public_or_private_alias <b> (387)
        on left: 613 614 615
        on right: 617 780 785 790
    single_alias (388)
        on left: 617
        on right: 618 619 622
    $@39 (389)
        on left: 616
        on right: 617
    alias_list (390)
        on left: 618 619
        on right: 619 620
    alias_declaration (391)
        on left: 620 622
        on right: 10
    $@40 (392)
        on left: 621
        on right: 622
    optional_public_or_private_enum <b> (393)
        on left: 623 624 625
        on right: 629 632
    enum_name <pEnum> (394)
        on left: 626
        on right: 629 632
    enum_declaration (395)
        on left: 629 632
        on right: 4
    $@41 (396)
        on left: 627
        on right: 629
    $@42 (397)
        on left: 628
        on right: 629
    $@43 (398)
        on left: 630
        on right: 632
    $@44 (399)
        on left: 631
        on right: 632
    optional_structure_parent <s> (400)
        on left: 633 634
        on right: 637
    optional_sealed <b> (401)
        on left: 635 636
        on right: 637
    structure_name <pStructure> (402)
        on left: 637
        on right: 649
    class_or_struct <i> (403)
        on left: 638 639 640 641
        on right: 649
    optional_public_or_private_structure <b> (404)
        on left: 642 643 644
        on right: 649
    optional_struct_variable_declaration_list <pVarDeclList> (405)
        on left: 645 646
        on right: 649
    structure_declaration (406)
        on left: 649
        on right: 3
    $@45 (407)
        on left: 647
        on right: 649
    $@46 (408)
        on left: 648
        on right: 649
    variable_name_with_pos_list <pNameWithPosList> (409)
        on left: 650 651 652 653 654
        on right: 77 577 578 579 580 581 582 653 654 892 893 894 895 896 897
    basic_type_declaration <type> (410)
        on left: 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681
        on right: 424 425 434 435 495 501 506 516 708
    enum_basic_type_declaration <type> (411)
        on left: 682 683 684 685 686 687 688 689
        on right: 632
    structure_type_declaration <pTypeDecl> (412)
        on left: 690
        on right: 278 711
    auto_type_declaration <pTypeDecl> (413)
        on left: 691 692 693
        on right: 709
    bitfield_bits <pNameList> (414)
        on left: 694 695
        on right: 695 701
    bitfield_alias_bits <pNameList> (415)
        on left: 696 697 698
        on right: 697 698 790
    bitfield_type_declaration <pTypeDecl> (416)
        on left: 701
        on right: 710
    $@47 (417)
        on left: 699
        on right: 701
    $@48 (418)
        on left: 700
        on right: 701
    c_or_s (419)
        on left: 702 703
        on right: 258 332 565 567 568 571 573 574 705 887
    table_type_pair <aTypePair> (420)
        on left: 704 705
        on right: 742
    dim_list <pTypeDecl> (421)
        on left: 706 707
        on right: 707 712
    type_declaration_no_options <pTypeDecl> (422)
        on left: 708 709 710 711 712 713 716 717 718 720 721 722 723 724 725 726 727 728 729 730 731 732 735 736 739 742 745 746 749 752 753 756 759 760 763 766 769 772
        on right: 225 308 309 310 311 320 323 326 415 488 489 494 593 594 595 712 713 721 722 723 724 725 726 727 728 729 730 731 732 736 773 774 830 831 832 833 834 835 838 841 844 847 856 860 861 864 867 870 874 878 886 887
    $@49 (423)
        on left: 714
        on right: 716
    $@50 (424)
        on left: 715
        on right: 716
    $@51 (425)
        on left: 719
        on right: 720
    $@52 (426)
        on left: 733
        on right: 735
    $@53 (427)
        on left: 734
        on right: 735
    $@54 (428)
        on left: 737
        on right: 739
    $@55 (429)
        on left: 738
        on right: 739
    $@56 (430)
        on left: 740
        on right: 742
    $@57 (431)
        on left: 741
        on right: 742
    $@58 (432)
        on left: 743
        on right: 745
    $@59 (433)
        on left: 744
        on right: 745
    $@60 (434)
        on left: 747
        on right: 749
    $@61 (435)
        on left: 748
        on right: 749
    $@62 (436)
        on left: 750
        on right: 752
    $@63 (437)
        on left: 751
        on right: 752
    $@64 (438)
        on left: 754
        on right: 756
    $@65 (439)
        on left: 755
        on right: 756
    $@66 (440)
        on left: 757
        on right: 759
    $@67 (441)
        on left: 758
        on right: 759
    $@68 (442)
        on left: 761
        on right: 763
    $@69 (443)
        on left: 762
        on right: 763
    $@70 (444)
        on left: 764
        on right: 766
    $@71 (445)
        on left: 765
        on right: 766
    $@72 (446)
        on left: 767
        on right: 769
    $@73 (447)
        on left: 768
        on right: 769
    $@74 (448)
        on left: 770
        on right: 772
    $@75 (449)
        on left: 771
        on right: 772
    type_declaration <pTypeDecl> (450)
        on left: 773 774 775
        on right: 128 257 258 277 329 500 505 562 563 569 579 580 617 704 705 716 735 739 745 749 756 763 774 775
    tuple_alias_declaration (451)
        on left: 780
        on right: 12
    $@76 (452)
        on left: 776
        on right: 780
    $@77 (453)
        on left: 777
        on right: 780
    $@78 (454)
        on left: 778
        on right: 780
    $@79 (455)
        on left: 779
        on right: 780
    variant_alias_declaration (456)
        on left: 785
        on right: 11
    $@80 (457)
        on left: 781
        on right: 785
    $@81 (458)
        on left: 782
        on right: 785
    $@82 (459)
        on left: 783
        on right: 785
    $@83 (460)
        on left: 784
        on right: 785
    bitfield_alias_declaration (461)
        on left: 790
        on right: 13
    $@84 (462)
        on left: 786
        on right: 790
    $@85 (463)
        on left: 787
        on right: 790
    $@86 (464)
        on left: 788
        on right: 790
    $@87 (465)
        on left: 789
        on right: 790
    make_decl <pExpression> (466)
        on left: 791 792 793 794 795
        on right: 284 441
    make_struct_fields <pMakeStruct> (467)
        on left: 796 797 798 799 800 801 802 803
        on right: 406 407 423 798 799 802 803 804 805 806 807 808 809 810
    make_variant_dim <pExpression> (468)
        on left: 804
        on right: 844 870
    make_struct_single <pExpression> (469)
        on left: 805
        on right: 282 283 431 432
    make_struct_dim <pExpression> (470)
        on left: 806 807
        on right: 807 830 833 834 835
    make_struct_dim_list <pExpression> (471)
        on left: 808 809
        on right: 809 811
    make_struct_dim_decl <pExpression> (472)
        on left: 810 811
        on right: 812
    optional_make_struct_dim_decl <pExpression> (473)
        on left: 812 813
        on right: 838 841 856 864 867
    optional_block <pExpression> (474)
        on left: 814 815
        on right: 830 831 832 833 834 835
    optional_trailing_semicolon_cur_cur (475)
        on left: 816 817
        on right: 884
    optional_trailing_semicolon_cur_sqr (476)
        on left: 818 819
        on right: 861
    optional_trailing_semicolon_sqr_sqr (477)
        on left: 820 821
        on right: 860
    optional_trailing_delim_sqr_sqr (478)
        on left: 822 823 824
        on right: 830 831 832 833
    optional_trailing_delim_cur_sqr (479)
        on left: 825 826 827
        on right: 834 835
    use_initializer <b> (480)
        on left: 828 829
        on right: 280 838 841 847 856 864 867
    make_struct_decl <pExpression> (481)
        on left: 830 831 832 833 834 835 838 841 844 847
        on right: 791
    $@88 (482)
        on left: 836
        on right: 838
    $@89 (483)
        on left: 837
        on right: 838
    $@90 (484)
        on left: 839
        on right: 841
    $@91 (485)
        on left: 840
        on right: 841
    $@92 (486)
        on left: 842
        on right: 844
    $@93 (487)
        on left: 843
        on right: 844
    $@94 (488)
        on left: 845
        on right: 847
    $@95 (489)
        on left: 846
        on right: 847
    make_tuple <pExpression> (490)
        on left: 848 849 850
        on right: 850 857 858
    make_map_tuple <pExpression> (491)
        on left: 851 852
        on right: 879 880 881 882 896 897
    make_tuple_call <pExpression> (492)
        on left: 853 856
        on right: 795
    $@96 (493)
        on left: 854
        on right: 856
    $@97 (494)
        on left: 855
        on right: 856
    make_dim <pExpression> (495)
        on left: 857 858
        on right: 858 860 861
    make_dim_decl <pExpression> (496)
        on left: 859 860 861 864 867 870 871 874 875 878
        on right: 792
    $@98 (497)
        on left: 862
        on right: 864
    $@99 (498)
        on left: 863
        on right: 864
    $@100 (499)
        on left: 865
        on right: 867
    $@101 (500)
        on left: 866
        on right: 867
    $@102 (501)
        on left: 868
        on right: 870
    $@103 (502)
        on left: 869
        on right: 870
    $@104 (503)
        on left: 872
        on right: 874
    $@105 (504)
        on left: 873
        on right: 874
    $@106 (505)
        on left: 876
        on right: 878
    $@107 (506)
        on left: 877
        on right: 878
    make_table <pExpression> (507)
        on left: 879 880
        on right: 880 884
    expr_map_tuple_list <pExpression> (508)
        on left: 881 882
        on right: 256 882 883
    make_table_decl <pExpression> (509)
        on left: 883 884 885 886 887
        on right: 793
    array_comprehension_where <pExpression> (510)
        on left: 888 889
        on right: 892 893 894 895 896 897
    optional_comma <b> (511)
        on left: 890 891
        on right: 252 254 256 476 811 853 859 871 875 878 883
    array_comprehension <pExpression> (512)
        on left: 892 893 894 895 896 897
        on right: 794


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 122 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  302 kwd_let: "let" .

    $default  reduce using rule 302 (kwd_let)


State 4

   37 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   50 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   38 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  620 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  622                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 621 ($@40)

    $@40  go to state 49


State 8

  303 kwd_let: "var" .

    $default  reduce using rule 303 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  790 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 613 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  780 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 613 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  785 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 613 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   36 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  123 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 72


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  214 global_function_declaration: optional_annotation_list . "def" function_declaration
  629 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  632                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  649 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 73
    "class"     shift, and go to state 74
    "def"       shift, and go to state 75
    "enum"      shift, and go to state 76
    "template"  shift, and go to state 77

    class_or_struct  go to state 78


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  606 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  608           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 79

    $default  reduce using rule 601 (optional_shared)

    optional_shared  go to state 80


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   92 annotation_argument_name: "type" .

    $default  reduce using rule 92 (annotation_argument_name)


State 33

   93 annotation_argument_name: "in" .

    $default  reduce using rule 93 (annotation_argument_name)


State 34

   91 annotation_argument_name: "name" .

    $default  reduce using rule 91 (annotation_argument_name)


State 35

   94 annotation_argument: annotation_argument_name . '=' string_constant
   95                    | annotation_argument_name . '=' "name"
   96                    | annotation_argument_name . '=' "integer constant"
   97                    | annotation_argument_name . '=' "floating point constant"
   98                    | annotation_argument_name . '=' "true"
   99                    | annotation_argument_name . '=' "false"
  100                    | annotation_argument_name .
  101                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 81

    $default  reduce using rule 100 (annotation_argument)


State 36

  102 annotation_argument_list: annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 37

   37 options_declaration: "options" annotation_argument_list .
  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 82

    $default  reduce using rule 37 (options_declaration)


State 38

   53 expect_error: "integer constant" .
   54             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 83

    $default  reduce using rule 53 (expect_error)


State 39

   50 expect_declaration: "expect" expect_list .
   52 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 84

    $default  reduce using rule 50 (expect_declaration)


State 40

   51 expect_list: expect_error .

    $default  reduce using rule 51 (expect_list)


State 41

   39 keyword_or_name: "name" .

    $default  reduce using rule 39 (keyword_or_name)


State 42

   40 keyword_or_name: "keyword" .

    $default  reduce using rule 40 (keyword_or_name)


State 43

   41 keyword_or_name: "type function" .

    $default  reduce using rule 41 (keyword_or_name)


State 44

   43 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 85


State 45

   42 require_module_name: keyword_or_name .

    $default  reduce using rule 42 (require_module_name)


State 46

   44 require_module_name: require_module_name . '.' keyword_or_name
   45                    | require_module_name . '/' keyword_or_name
   46 require_module: require_module_name . is_public_module
   47               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 86
    "public"  shift, and go to state 87
    '/'       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 48 (is_public_module)

    is_public_module  go to state 90


State 47

   38 require_declaration: "require" require_module .

    $default  reduce using rule 38 (require_declaration)


State 48

  620 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 613 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 92
    alias_list                        go to state 93


State 49

  622 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 613 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 94


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 79

    $default  reduce using rule 601 (optional_shared)

    optional_shared  go to state 95


State 53

  615 optional_public_or_private_alias: "public" .

    $default  reduce using rule 615 (optional_public_or_private_alias)


State 54

  614 optional_public_or_private_alias: "private" .

    $default  reduce using rule 614 (optional_public_or_private_alias)


State 55

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 786 ($@84)

    $@84  go to state 96


State 56

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 776 ($@76)

    $@76  go to state 97


State 57

  785 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 781 ($@80)

    $@80  go to state 98


State 58

  272 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 99


State 59

  270 name_in_namespace: "name" .
  271                  | "name" . "::" "name"

    "::"  shift, and go to state 100

    "::"      [reduce using rule 270 (name_in_namespace)]
    $default  reduce using rule 270 (name_in_namespace)


State 60

   36 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 35 ($@1)

    $@1  go to state 101


State 61

  108 annotation_declaration_name: "require" .

    $default  reduce using rule 108 (annotation_declaration_name)


State 62

  109 annotation_declaration_name: "private" .

    $default  reduce using rule 109 (annotation_declaration_name)


State 63

  110 annotation_declaration_name: "template" .

    $default  reduce using rule 110 (annotation_declaration_name)


State 64

  119 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 102
    name_in_namespace             go to state 71


State 65

  114 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 103
    name_in_namespace             go to state 71


State 66

  118 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 104
    name_in_namespace             go to state 71


State 67

  111 annotation_declaration_basic: annotation_declaration_name .
  112                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 105

    $default  reduce using rule 111 (annotation_declaration_basic)


State 68

  113 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 113 (annotation_declaration)


State 69

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  120 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108

    $default  reduce using rule 120 (annotation_list)


State 70

  121 annotation_list: annotation_list . ',' annotation_declaration
  123 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 109
    ']'  shift, and go to state 110


State 71

  107 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 107 (annotation_declaration_name)


State 72

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 73

  639 class_or_struct: "struct" .

    $default  reduce using rule 639 (class_or_struct)


State 74

  638 class_or_struct: "class" .

    $default  reduce using rule 638 (class_or_struct)


State 75

  214 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 215 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 113
    function_declaration                 go to state 114


State 76

  629 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  632                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 623 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 117


State 77

  640 class_or_struct: "template" . "class"
  641                | "template" . "struct"

    "struct"  shift, and go to state 118
    "class"   shift, and go to state 119


State 78

  649 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 120
    "private"  shift, and go to state 121

    $default  reduce using rule 642 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 122


State 79

  602 optional_shared: "shared" .

    $default  reduce using rule 602 (optional_shared)


State 80

  606 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  608           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 123
    "private"  shift, and go to state 124

    $default  reduce using rule 603 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 125


State 81

   94 annotation_argument: annotation_argument_name '=' . string_constant
   95                    | annotation_argument_name '=' . "name"
   96                    | annotation_argument_name '=' . "integer constant"
   97                    | annotation_argument_name '=' . "floating point constant"
   98                    | annotation_argument_name '=' . "true"
   99                    | annotation_argument_name '=' . "false"
  101                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 126
    "false"                    shift, and go to state 127
    "integer constant"         shift, and go to state 128
    "floating point constant"  shift, and go to state 129
    "name"                     shift, and go to state 130
    "start of the string"      shift, and go to state 131
    '('                        shift, and go to state 132

    string_constant  go to state 133


State 82

  103 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 134


State 83

   54 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 135


State 84

   52 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 136


State 85

   43 require_module_name: '%' require_module_name .
   44                    | require_module_name . '.' keyword_or_name
   45                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 89

    $default  reduce using rule 43 (require_module_name)


State 86

   47 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 137


State 87

   49 is_public_module: "public" .

    $default  reduce using rule 49 (is_public_module)


State 88

   45 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 138


State 89

   44 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 139


State 90

   46 require_module: require_module_name is_public_module .

    $default  reduce using rule 46 (require_module)


State 91

  617 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 140


State 92

  618 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 141


State 93

  619 alias_list: alias_list . single_alias "end of expression"
  620 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 142

    $default  reduce using rule 613 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91
    single_alias                      go to state 143


State 94

  622 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 144


State 95

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 145
    "private"  shift, and go to state 146

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 147


State 96

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 148


State 97

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 149


State 98

  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 150


State 99

  272 name_in_namespace: "::" "name" .

    $default  reduce using rule 272 (name_in_namespace)


State 100

  271 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 151


State 101

   36 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 152

    reader_character_sequence  go to state 153


State 102

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  119                       | "|>" annotation_declaration .

    $default  reduce using rule 119 (annotation_declaration)


State 103

  114 annotation_declaration: '!' annotation_declaration .
  115                       | annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 114 (annotation_declaration)


State 104

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  118                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108
    ')'   shift, and go to state 154


State 105

  112 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 155


State 106

  115 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 156
    name_in_namespace             go to state 71


State 107

  116 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 157
    name_in_namespace             go to state 71


State 108

  117 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 158
    name_in_namespace             go to state 71


State 109

  121 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 159
    name_in_namespace             go to state 71


State 110

  123 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 123 (optional_annotation_list)


State 111

  217 optional_public_or_private_function: "public" .

    $default  reduce using rule 217 (optional_public_or_private_function)


State 112

  216 optional_public_or_private_function: "private" .

    $default  reduce using rule 216 (optional_public_or_private_function)


State 113

  220 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 219 ($@6)

    $@6  go to state 160


State 114

  214 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 214 (global_function_declaration)


State 115

  625 optional_public_or_private_enum: "public" .

    $default  reduce using rule 625 (optional_public_or_private_enum)


State 116

  624 optional_public_or_private_enum: "private" .

    $default  reduce using rule 624 (optional_public_or_private_enum)


State 117

  629 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  632                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 161

    enum_name  go to state 162


State 118

  641 class_or_struct: "template" "struct" .

    $default  reduce using rule 641 (class_or_struct)


State 119

  640 class_or_struct: "template" "class" .

    $default  reduce using rule 640 (class_or_struct)


State 120

  644 optional_public_or_private_structure: "public" .

    $default  reduce using rule 644 (optional_public_or_private_structure)


State 121

  643 optional_public_or_private_structure: "private" .

    $default  reduce using rule 643 (optional_public_or_private_structure)


State 122

  649 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 647 ($@45)

    $@45  go to state 163


State 123

  605 optional_public_or_private_variable: "public" .

    $default  reduce using rule 605 (optional_public_or_private_variable)


State 124

  604 optional_public_or_private_variable: "private" .

    $default  reduce using rule 604 (optional_public_or_private_variable)


State 125

  606 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  608           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 164

    $default  reduce using rule 607 ($@38)

    $@38  go to state 165


State 126

   98 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 98 (annotation_argument)


State 127

   99 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 99 (annotation_argument)


State 128

   96 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 96 (annotation_argument)


State 129

   97 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 97 (annotation_argument)


State 130

   95 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 95 (annotation_argument)


State 131

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 166
    STRING_CHARACTER_ESC  shift, and go to state 167
    "end of the string"   shift, and go to state 168

    character_sequence  go to state 169


State 132

  101 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 170
    "false"                    shift, and go to state 171
    "integer constant"         shift, and go to state 172
    "floating point constant"  shift, and go to state 173
    "name"                     shift, and go to state 174
    "start of the string"      shift, and go to state 131

    string_constant                 go to state 175
    annotation_argument_value       go to state 176
    annotation_argument_value_list  go to state 177


State 133

   94 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 94 (annotation_argument)


State 134

  103 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 103 (annotation_argument_list)


State 135

   54 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 54 (expect_error)


State 136

   52 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 52 (expect_list)


State 137

   47 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 87

    $default  reduce using rule 48 (is_public_module)

    is_public_module  go to state 178


State 138

   45 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 45 (require_module_name)


State 139

   44 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 140

  617 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 616 ($@39)

    $@39  go to state 179


State 141

  618 alias_list: single_alias "end of expression" .

    $default  reduce using rule 618 (alias_list)


State 142

  620 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 620 (alias_declaration)


State 143

  619 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 180


State 144

  622 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 622 (alias_declaration)


State 145

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 146

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 147

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 148

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 787 ($@85)

    $@85  go to state 181


State 149

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 777 ($@77)

    $@77  go to state 182


State 150

  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 782 ($@81)

    $@81  go to state 183


State 151

  271 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 271 (name_in_namespace)


State 152

   33 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 153

   34 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 184

    $default  reduce using rule 36 (expr_reader)


State 154

  118 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 118 (annotation_declaration)


State 155

  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  112 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 82
    ')'  shift, and go to state 185


State 156

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration "&&" annotation_declaration .
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 115 (annotation_declaration)


State 157

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration "||" annotation_declaration .
  117                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 106
    "^^"  shift, and go to state 108

    $default  reduce using rule 116 (annotation_declaration)


State 158

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  117                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 106

    $default  reduce using rule 117 (annotation_declaration)


State 159

  115 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  116                       | annotation_declaration . "||" annotation_declaration
  117                       | annotation_declaration . "^^" annotation_declaration
  121 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 106
    "||"  shift, and go to state 107
    "^^"  shift, and go to state 108

    $default  reduce using rule 121 (annotation_list)


State 160

  220 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 216


State 161

  626 enum_name: "name" .

    $default  reduce using rule 626 (enum_name)


State 162

  629 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  632                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 217
    ':'                    shift, and go to state 218


State 163

  649 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 219

    $default  reduce using rule 635 (optional_sealed)

    optional_sealed  go to state 220
    structure_name   go to state 221


State 164

  606 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 598 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 222


State 165

  608 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 536 (optional_field_annotation)

    metadata_argument_list     go to state 225
    optional_field_annotation  go to state 226


State 166

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 167

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 168

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 169

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 227
    STRING_CHARACTER_ESC  shift, and go to state 228
    "end of the string"   shift, and go to state 229


State 170

   87 annotation_argument_value: "true" .

    $default  reduce using rule 87 (annotation_argument_value)


State 171

   88 annotation_argument_value: "false" .

    $default  reduce using rule 88 (annotation_argument_value)


State 172

   85 annotation_argument_value: "integer constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 173

   86 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 86 (annotation_argument_value)


State 174

   84 annotation_argument_value: "name" .

    $default  reduce using rule 84 (annotation_argument_value)


State 175

   83 annotation_argument_value: string_constant .

    $default  reduce using rule 83 (annotation_argument_value)


State 176

   89 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 177

   90 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  101 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 230
    ')'  shift, and go to state 231


State 178

   47 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 47 (require_module)


State 179

  617 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 232


State 180

  619 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 619 (alias_list)


State 181

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 233


State 182

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 234


State 183

  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 235


State 184

   34 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 34 (reader_character_sequence)


State 185

  112 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 112 (annotation_declaration_basic)


State 186

  130 function_name: "operator" . '!'
  131              | "operator" . '~'
  132              | "operator" . "+="
  133              | "operator" . "-="
  134              | "operator" . "*="
  135              | "operator" . "/="
  136              | "operator" . "%="
  137              | "operator" . "&="
  138              | "operator" . "|="
  139              | "operator" . "^="
  140              | "operator" . "&&="
  141              | "operator" . "||="
  142              | "operator" . "^^="
  143              | "operator" . "&&"
  144              | "operator" . "||"
  145              | "operator" . "^^"
  146              | "operator" . '+'
  147              | "operator" . '-'
  148              | "operator" . '*'
  149              | "operator" . '/'
  150              | "operator" . '%'
  151              | "operator" . '<'
  152              | "operator" . '>'
  153              | "operator" . ".."
  154              | "operator" . "=="
  155              | "operator" . "!="
  156              | "operator" . "<="
  157              | "operator" . ">="
  158              | "operator" . '&'
  159              | "operator" . '|'
  160              | "operator" . '^'
  163              | "operator" . "++"
  164              | "operator" . "--"
  165              | "operator" . "<<"
  166              | "operator" . ">>"
  167              | "operator" . "<<="
  168              | "operator" . ">>="
  169              | "operator" . "<<<"
  170              | "operator" . ">>>"
  171              | "operator" . "<<<="
  172              | "operator" . ">>>="
  173              | "operator" . '[' ']'
  174              | "operator" . "?[" ']'
  175              | "operator" . '.'
  176              | "operator" . "?."
  177              | "operator" . '.' "name"
  178              | "operator" . '.' "name" ":="
  179              | "operator" . "?." "name"
  180              | "operator" . ":="
  181              | "operator" . "delete"
  182              | "operator" . "??"
  183              | "operator" . "is"
  184              | "operator" . "as"
  185              | "operator" . "is" "name"
  186              | "operator" . "as" "name"
  187              | "operator" . '?' "as"
  188              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 236
    "as"      shift, and go to state 237
    "delete"  shift, and go to state 238
    "+="      shift, and go to state 239
    "-="      shift, and go to state 240
    "/="      shift, and go to state 241
    "*="      shift, and go to state 242
    "%="      shift, and go to state 243
    "&="      shift, and go to state 244
    "|="      shift, and go to state 245
    "^="      shift, and go to state 246
    "<<"      shift, and go to state 247
    ">>"      shift, and go to state 248
    "++"      shift, and go to state 249
    "--"      shift, and go to state 250
    "<="      shift, and go to state 251
    "<<="     shift, and go to state 252
    ">>="     shift, and go to state 253
    ">="      shift, and go to state 254
    "=="      shift, and go to state 255
    "!="      shift, and go to state 256
    "??"      shift, and go to state 257
    "?."      shift, and go to state 258
    "?["      shift, and go to state 259
    ":="      shift, and go to state 260
    "<<<"     shift, and go to state 261
    ">>>"     shift, and go to state 262
    "<<<="    shift, and go to state 263
    ">>>="    shift, and go to state 264
    "&&"      shift, and go to state 265
    "||"      shift, and go to state 266
    "^^"      shift, and go to state 267
    "&&="     shift, and go to state 268
    "||="     shift, and go to state 269
    "^^="     shift, and go to state 270
    ".."      shift, and go to state 271
    '?'       shift, and go to state 272
    '|'       shift, and go to state 273
    '^'       shift, and go to state 274
    '&'       shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '-'       shift, and go to state 278
    '+'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '~'       shift, and go to state 283
    '!'       shift, and go to state 284
    '.'       shift, and go to state 285
    '['       shift, and go to state 286


State 187

  189 function_name: "bool" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "string" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "int" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "int2" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "int3" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "int4" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "uint" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "uint2" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "uint3" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "uint4" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "float" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "float2" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "float3" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "float4" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "range" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "urange" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "range64" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "urange64" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int64" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint64" .

    $default  reduce using rule 208 (function_name)


State 207

  209 function_name: "double" .

    $default  reduce using rule 209 (function_name)


State 208

  210 function_name: "int8" .

    $default  reduce using rule 210 (function_name)


State 209

  211 function_name: "uint8" .

    $default  reduce using rule 211 (function_name)


State 210

  212 function_name: "int16" .

    $default  reduce using rule 212 (function_name)


State 211

  213 function_name: "uint16" .

    $default  reduce using rule 213 (function_name)


State 212

  161 function_name: "++" . "operator"

    "operator"  shift, and go to state 287


State 213

  162 function_name: "--" . "operator"

    "operator"  shift, and go to state 288


State 214

  129 function_name: "name" .

    $default  reduce using rule 129 (function_name)


State 215

  218 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 290


State 216

  220 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 292


State 217

  629 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 627 ($@41)

    $@41  go to state 293


State 218

  632 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 294
    "uint"    shift, and go to state 295
    "int64"   shift, and go to state 296
    "uint64"  shift, and go to state 297
    "int8"    shift, and go to state 298
    "uint8"   shift, and go to state 299
    "int16"   shift, and go to state 300
    "uint16"  shift, and go to state 301

    enum_basic_type_declaration  go to state 302


State 219

  636 optional_sealed: "sealed" .

    $default  reduce using rule 636 (optional_sealed)


State 220

  637 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 303


State 221

  649 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 648 ($@46)

    $@46  go to state 304


State 222

  600 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  606 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 305

    $default  reduce using rule 599 ($@37)

    $@37  go to state 306


State 223

  537 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 307


State 224

  104 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 308


State 225

  105 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  106                       | metadata_argument_list . "end of expression"
  538 optional_field_annotation: metadata_argument_list .

    "end of expression"  shift, and go to state 309
    '@'                  shift, and go to state 310

    $default  reduce using rule 538 (optional_field_annotation)


State 226

  608 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 311
    "name"  shift, and go to state 312

    let_variable_name_with_pos_list  go to state 313
    let_variable_declaration         go to state 314


State 227

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 228

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 229

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 230

   90 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 170
    "false"                    shift, and go to state 171
    "integer constant"         shift, and go to state 172
    "floating point constant"  shift, and go to state 173
    "name"                     shift, and go to state 174
    "start of the string"      shift, and go to state 131

    string_constant            go to state 175
    annotation_argument_value  go to state 315


State 231

  101 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 101 (annotation_argument)


State 232

  617 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 363


State 233

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 788 ($@86)

    $@86  go to state 364


State 234

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 778 ($@78)

    $@78  go to state 365


State 235

  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 783 ($@82)

    $@82  go to state 366


State 236

  183 function_name: "operator" "is" .
  185              | "operator" "is" . "name"

    "name"  shift, and go to state 367

    $default  reduce using rule 183 (function_name)


State 237

  184 function_name: "operator" "as" .
  186              | "operator" "as" . "name"

    "name"  shift, and go to state 368

    $default  reduce using rule 184 (function_name)


State 238

  181 function_name: "operator" "delete" .

    $default  reduce using rule 181 (function_name)


State 239

  132 function_name: "operator" "+=" .

    $default  reduce using rule 132 (function_name)


State 240

  133 function_name: "operator" "-=" .

    $default  reduce using rule 133 (function_name)


State 241

  135 function_name: "operator" "/=" .

    $default  reduce using rule 135 (function_name)


State 242

  134 function_name: "operator" "*=" .

    $default  reduce using rule 134 (function_name)


State 243

  136 function_name: "operator" "%=" .

    $default  reduce using rule 136 (function_name)


State 244

  137 function_name: "operator" "&=" .

    $default  reduce using rule 137 (function_name)


State 245

  138 function_name: "operator" "|=" .

    $default  reduce using rule 138 (function_name)


State 246

  139 function_name: "operator" "^=" .

    $default  reduce using rule 139 (function_name)


State 247

  165 function_name: "operator" "<<" .

    $default  reduce using rule 165 (function_name)


State 248

  166 function_name: "operator" ">>" .

    $default  reduce using rule 166 (function_name)


State 249

  163 function_name: "operator" "++" .

    $default  reduce using rule 163 (function_name)


State 250

  164 function_name: "operator" "--" .

    $default  reduce using rule 164 (function_name)


State 251

  156 function_name: "operator" "<=" .

    $default  reduce using rule 156 (function_name)


State 252

  167 function_name: "operator" "<<=" .

    $default  reduce using rule 167 (function_name)


State 253

  168 function_name: "operator" ">>=" .

    $default  reduce using rule 168 (function_name)


State 254

  157 function_name: "operator" ">=" .

    $default  reduce using rule 157 (function_name)


State 255

  154 function_name: "operator" "==" .

    $default  reduce using rule 154 (function_name)


State 256

  155 function_name: "operator" "!=" .

    $default  reduce using rule 155 (function_name)


State 257

  182 function_name: "operator" "??" .

    $default  reduce using rule 182 (function_name)


State 258

  176 function_name: "operator" "?." .
  179              | "operator" "?." . "name"

    "name"  shift, and go to state 369

    $default  reduce using rule 176 (function_name)


State 259

  174 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 370


State 260

  180 function_name: "operator" ":=" .

    $default  reduce using rule 180 (function_name)


State 261

  169 function_name: "operator" "<<<" .

    $default  reduce using rule 169 (function_name)


State 262

  170 function_name: "operator" ">>>" .

    $default  reduce using rule 170 (function_name)


State 263

  171 function_name: "operator" "<<<=" .

    $default  reduce using rule 171 (function_name)


State 264

  172 function_name: "operator" ">>>=" .

    $default  reduce using rule 172 (function_name)


State 265

  143 function_name: "operator" "&&" .

    $default  reduce using rule 143 (function_name)


State 266

  144 function_name: "operator" "||" .

    $default  reduce using rule 144 (function_name)


State 267

  145 function_name: "operator" "^^" .

    $default  reduce using rule 145 (function_name)


State 268

  140 function_name: "operator" "&&=" .

    $default  reduce using rule 140 (function_name)


State 269

  141 function_name: "operator" "||=" .

    $default  reduce using rule 141 (function_name)


State 270

  142 function_name: "operator" "^^=" .

    $default  reduce using rule 142 (function_name)


State 271

  153 function_name: "operator" ".." .

    $default  reduce using rule 153 (function_name)


State 272

  187 function_name: "operator" '?' . "as"
  188              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 371


State 273

  159 function_name: "operator" '|' .

    $default  reduce using rule 159 (function_name)


State 274

  160 function_name: "operator" '^' .

    $default  reduce using rule 160 (function_name)


State 275

  158 function_name: "operator" '&' .

    $default  reduce using rule 158 (function_name)


State 276

  151 function_name: "operator" '<' .

    $default  reduce using rule 151 (function_name)


State 277

  152 function_name: "operator" '>' .

    $default  reduce using rule 152 (function_name)


State 278

  147 function_name: "operator" '-' .

    $default  reduce using rule 147 (function_name)


State 279

  146 function_name: "operator" '+' .

    $default  reduce using rule 146 (function_name)


State 280

  148 function_name: "operator" '*' .

    $default  reduce using rule 148 (function_name)


State 281

  149 function_name: "operator" '/' .

    $default  reduce using rule 149 (function_name)


State 282

  150 function_name: "operator" '%' .

    $default  reduce using rule 150 (function_name)


State 283

  131 function_name: "operator" '~' .

    $default  reduce using rule 131 (function_name)


State 284

  130 function_name: "operator" '!' .

    $default  reduce using rule 130 (function_name)


State 285

  175 function_name: "operator" '.' .
  177              | "operator" '.' . "name"
  178              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 372

    $default  reduce using rule 175 (function_name)


State 286

  173 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 373


State 287

  161 function_name: "++" "operator" .

    $default  reduce using rule 161 (function_name)


State 288

  162 function_name: "--" "operator" .

    $default  reduce using rule 162 (function_name)


State 289

  125 optional_function_argument_list: '(' . ')'
  126                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 374
    "[["  shift, and go to state 223
    ')'   shift, and go to state 375
    '@'   shift, and go to state 224

    $default  reduce using rule 536 (optional_field_annotation)

    metadata_argument_list         go to state 225
    optional_field_annotation      go to state 376
    function_argument_declaration  go to state 377
    function_argument_list         go to state 378


State 290

  218 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 380


State 291

  221 expression_block: "begin of code block" . expressions "end of code block"
  222                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 247 (expressions)

    expressions  go to state 381


State 292

  220 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 220 (function_declaration)


State 293

  629 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 609 (enum_list)

    enum_list  go to state 382


State 294

  682 enum_basic_type_declaration: "int" .

    $default  reduce using rule 682 (enum_basic_type_declaration)


State 295

  685 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 685 (enum_basic_type_declaration)


State 296

  688 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 688 (enum_basic_type_declaration)


State 297

  689 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 689 (enum_basic_type_declaration)


State 298

  683 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 683 (enum_basic_type_declaration)


State 299

  686 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 686 (enum_basic_type_declaration)


State 300

  684 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 684 (enum_basic_type_declaration)


State 301

  687 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 687 (enum_basic_type_declaration)


State 302

  632 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 383


State 303

  637 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 384

    $default  reduce using rule 633 (optional_structure_parent)

    optional_structure_parent  go to state 385


State 304

  649 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 386

    $default  reduce using rule 645 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 387


State 305

  606 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 606 (global_let)


State 306

  600 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 536 (optional_field_annotation)

    metadata_argument_list     go to state 225
    optional_field_annotation  go to state 388


State 307

  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  537 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 389


State 308

  104 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 309

  106 metadata_argument_list: metadata_argument_list "end of expression" .

    $default  reduce using rule 106 (metadata_argument_list)


State 310

  105 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 390


State 311

  589 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 391


State 312

  588 let_variable_name_with_pos_list: "name" .
  590                                | "name" . "aka" "name"

    "aka"  shift, and go to state 392

    $default  reduce using rule 588 (let_variable_name_with_pos_list)


State 313

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  592                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  593 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  594                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  595                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  596                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  597                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 393
    ':'  shift, and go to state 394
    '&'  shift, and go to state 395

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 396


State 314

  608 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 608 (global_let)


State 315

   90 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 90 (annotation_argument_value_list)


State 316

  716 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 397


State 317

  739 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 398


State 318

  742 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 399


State 319

  717 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 400


State 320

  745 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 401


State 321

  735 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 402


State 322

  655 basic_type_declaration: "bool" .

    $default  reduce using rule 655 (basic_type_declaration)


State 323

  675 basic_type_declaration: "void" .

    $default  reduce using rule 675 (basic_type_declaration)


State 324

  656 basic_type_declaration: "string" .

    $default  reduce using rule 656 (basic_type_declaration)


State 325

  691 auto_type_declaration: "auto" .
  692                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 403

    '('       [reduce using rule 691 (auto_type_declaration)]
    $default  reduce using rule 691 (auto_type_declaration)


State 326

  657 basic_type_declaration: "int" .

    $default  reduce using rule 657 (basic_type_declaration)


State 327

  661 basic_type_declaration: "int2" .

    $default  reduce using rule 661 (basic_type_declaration)


State 328

  662 basic_type_declaration: "int3" .

    $default  reduce using rule 662 (basic_type_declaration)


State 329

  663 basic_type_declaration: "int4" .

    $default  reduce using rule 663 (basic_type_declaration)


State 330

  664 basic_type_declaration: "uint" .

    $default  reduce using rule 664 (basic_type_declaration)


State 331

  681 basic_type_declaration: "bitfield" .
  701 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 404

    $default  reduce using rule 681 (basic_type_declaration)


State 332

  668 basic_type_declaration: "uint2" .

    $default  reduce using rule 668 (basic_type_declaration)


State 333

  669 basic_type_declaration: "uint3" .

    $default  reduce using rule 669 (basic_type_declaration)


State 334

  670 basic_type_declaration: "uint4" .

    $default  reduce using rule 670 (basic_type_declaration)


State 335

  671 basic_type_declaration: "float" .

    $default  reduce using rule 671 (basic_type_declaration)


State 336

  672 basic_type_declaration: "float2" .

    $default  reduce using rule 672 (basic_type_declaration)


State 337

  673 basic_type_declaration: "float3" .

    $default  reduce using rule 673 (basic_type_declaration)


State 338

  674 basic_type_declaration: "float4" .

    $default  reduce using rule 674 (basic_type_declaration)


State 339

  676 basic_type_declaration: "range" .

    $default  reduce using rule 676 (basic_type_declaration)


State 340

  677 basic_type_declaration: "urange" .

    $default  reduce using rule 677 (basic_type_declaration)


State 341

  678 basic_type_declaration: "range64" .

    $default  reduce using rule 678 (basic_type_declaration)


State 342

  679 basic_type_declaration: "urange64" .

    $default  reduce using rule 679 (basic_type_declaration)


State 343

  746 type_declaration_no_options: "block" .
  749                            | "block" . '<' $@60 type_declaration '>' $@61
  752                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 405

    $default  reduce using rule 746 (type_declaration_no_options)


State 344

  660 basic_type_declaration: "int64" .

    $default  reduce using rule 660 (basic_type_declaration)


State 345

  667 basic_type_declaration: "uint64" .

    $default  reduce using rule 667 (basic_type_declaration)


State 346

  680 basic_type_declaration: "double" .

    $default  reduce using rule 680 (basic_type_declaration)


State 347

  753 type_declaration_no_options: "function" .
  756                            | "function" . '<' $@64 type_declaration '>' $@65
  759                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 406

    $default  reduce using rule 753 (type_declaration_no_options)


State 348

  760 type_declaration_no_options: "lambda" .
  763                            | "lambda" . '<' $@68 type_declaration '>' $@69
  766                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 407

    $default  reduce using rule 760 (type_declaration_no_options)


State 349

  658 basic_type_declaration: "int8" .

    $default  reduce using rule 658 (basic_type_declaration)


State 350

  665 basic_type_declaration: "uint8" .

    $default  reduce using rule 665 (basic_type_declaration)


State 351

  659 basic_type_declaration: "int16" .

    $default  reduce using rule 659 (basic_type_declaration)


State 352

  666 basic_type_declaration: "uint16" .

    $default  reduce using rule 666 (basic_type_declaration)


State 353

  769 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 408


State 354

  772 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 409


State 355

  693 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 410


State 356

  718 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  720                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 411


State 357

  690 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 690 (structure_type_declaration)


State 358

  708 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 708 (type_declaration_no_options)


State 359

  711 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 711 (type_declaration_no_options)


State 360

  709 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 709 (type_declaration_no_options)


State 361

  710 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 710 (type_declaration_no_options)


State 362

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  773 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    $default  reduce using rule 773 (type_declaration)

    dim_list  go to state 422


State 363

  617 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 617 (single_alias)


State 364

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 696 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 424


State 365

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 566 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 425


State 366

  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 572 (variant_alias_type_list)

    variant_alias_type_list  go to state 426


State 367

  185 function_name: "operator" "is" "name" .

    $default  reduce using rule 185 (function_name)


State 368

  186 function_name: "operator" "as" "name" .

    $default  reduce using rule 186 (function_name)


State 369

  179 function_name: "operator" "?." "name" .

    $default  reduce using rule 179 (function_name)


State 370

  174 function_name: "operator" "?[" ']' .

    $default  reduce using rule 174 (function_name)


State 371

  187 function_name: "operator" '?' "as" .
  188              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 427

    $default  reduce using rule 187 (function_name)


State 372

  177 function_name: "operator" '.' "name" .
  178              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 428

    $default  reduce using rule 177 (function_name)


State 373

  173 function_name: "operator" '[' ']' .

    $default  reduce using rule 173 (function_name)


State 374

  559 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 429


State 375

  125 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 125 (optional_function_argument_list)


State 376

  558 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 430
    "var"  shift, and go to state 431

    $default  reduce using rule 301 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 432


State 377

  560 function_argument_list: function_argument_declaration .

    $default  reduce using rule 560 (function_argument_list)


State 378

  126 optional_function_argument_list: '(' function_argument_list . ')'
  561 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 433
    ')'                  shift, and go to state 434


State 379

  128 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 435


State 380

  218 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 218 (function_declaration_header)


State 381

  221 expression_block: "begin of code block" expressions . "end of code block"
  222                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 436
    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 439
    "if"                              shift, and go to state 440
    "static_if"                       shift, and go to state 441
    "for"                             shift, and go to state 442
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 449
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "try"                             shift, and go to state 452
    "table"                           shift, and go to state 453
    "delete"                          shift, and go to state 454
    "deref"                           shift, and go to state 455
    "with"                            shift, and go to state 456
    "assume"                          shift, and go to state 457
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "pass"                            shift, and go to state 462
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 464
    "goto"                            shift, and go to state 465
    "unsafe"                          shift, and go to state 466
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "yield"                           shift, and go to state 473
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 496
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    "end of code block"               shift, and go to state 500
    "end of expression"               shift, and go to state 501
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_label           go to state 513
    expression_goto            go to state 514
    if_or_static_if            go to state 515
    expression_if_one_liner    go to state 516
    expression_if_then_else    go to state 517
    expression_for_loop        go to state 518
    expression_unsafe          go to state 519
    expression_while_loop      go to state 520
    expression_with            go to state 521
    expression_with_alias      go to state 522
    expr_call_pipe             go to state 523
    expression_any             go to state 524
    expr_keyword               go to state 525
    expression_keyword         go to state 526
    expr_pipe                  go to state 527
    name_in_namespace          go to state 528
    expression_delete          go to state 529
    expr_new                   go to state 530
    expression_break           go to state 531
    expression_continue        go to state 532
    expression_return_no_pipe  go to state 533
    expression_return          go to state 534
    expression_yield_no_pipe   go to state 535
    expression_yield           go to state 536
    expression_try_catch       go to state 537
    kwd_let                    go to state 538
    expression_let             go to state 539
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_assign                go to state 546
    expr_assign_pipe           go to state 547
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 553
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 382

  610 enum_list: enum_list . "end of expression"
  611          | enum_list . "name" "end of expression"
  612          | enum_list . "name" '=' expr "end of expression"
  629 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 562
    "end of expression"  shift, and go to state 563

    $default  reduce using rule 628 ($@42)

    $@42  go to state 564


State 383

  632 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 630 ($@43)

    $@43  go to state 565


State 384

  634 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 566


State 385

  637 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 637 (structure_name)


State 386

  646 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 550 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 567


State 387

  649 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 649 (structure_declaration)


State 388

  600 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 311
    "name"  shift, and go to state 312

    let_variable_name_with_pos_list  go to state 313
    let_variable_declaration         go to state 568


State 389

  537 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 569


State 390

  105 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 105 (metadata_argument_list)


State 391

  589 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 574
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 392

  590 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 575


State 393

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  592                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 576


State 394

  593 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  594                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  595                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 577


State 395

  587 optional_ref: '&' .

    $default  reduce using rule 587 (optional_ref)


State 396

  596 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  597                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 581


State 397

  716 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 714 ($@49)

    $@49  go to state 582


State 398

  739 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 737 ($@54)

    $@54  go to state 583


State 399

  742 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 740 ($@56)

    $@56  go to state 584


State 400

  717 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 585
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 401

  745 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 743 ($@58)

    $@58  go to state 586


State 402

  735 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 733 ($@52)

    $@52  go to state 587


State 403

  692 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 588


State 404

  701 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 699 ($@47)

    $@47  go to state 589


State 405

  749 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  752                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 750 ($@62)
    '>'       reduce using rule 750 ($@62)
    '('       reduce using rule 750 ($@62)
    $default  reduce using rule 747 ($@60)

    $@60  go to state 590
    $@62  go to state 591


State 406

  756 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  759                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 757 ($@66)
    '>'       reduce using rule 757 ($@66)
    '('       reduce using rule 757 ($@66)
    $default  reduce using rule 754 ($@64)

    $@64  go to state 592
    $@66  go to state 593


State 407

  763 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  766                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 764 ($@70)
    '>'       reduce using rule 764 ($@70)
    '('       reduce using rule 764 ($@70)
    $default  reduce using rule 761 ($@68)

    $@68  go to state 594
    $@70  go to state 595


State 408

  769 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 767 ($@72)

    $@72  go to state 596


State 409

  772 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 770 ($@74)

    $@74  go to state 597


State 410

  693 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 598
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 411

  718 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  720                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 599
    '('  shift, and go to state 600


State 412

  723 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 723 (type_declaration_no_options)


State 413

  728 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 728 (type_declaration_no_options)


State 414

  722 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 722 (type_declaration_no_options)


State 415

  730 type_declaration_no_options: type_declaration_no_options "==" . "const"
  731                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 601
    '&'      shift, and go to state 602


State 416

  736 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 736 (type_declaration_no_options)


State 417

  732 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 732 (type_declaration_no_options)


State 418

  725 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 725 (type_declaration_no_options)


State 419

  721 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  724                            | type_declaration_no_options '-' . "const"
  726                            | type_declaration_no_options '-' . '&'
  729                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 603
    '&'      shift, and go to state 604
    '['      shift, and go to state 605
    '#'      shift, and go to state 606


State 420

  706 dim_list: '[' . expr ']'
  713 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 607
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 608
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 421

  727 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 727 (type_declaration_no_options)


State 422

  707 dim_list: dim_list . '[' expr ']'
  712 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 609

    '['       [reduce using rule 712 (type_declaration_no_options)]
    $default  reduce using rule 712 (type_declaration_no_options)


State 423

  774 type_declaration: type_declaration '|' . type_declaration_no_options
  775                 | type_declaration '|' . '#'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356
    '#'          shift, and go to state 610

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 611


State 424

  697 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  698                    | bitfield_alias_bits . "name" "end of expression"
  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 612
    "end of expression"  shift, and go to state 613

    $default  reduce using rule 789 ($@87)

    $@87  go to state 614


State 425

  567 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  568                      | tuple_alias_type_list . tuple_type c_or_s
  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 316
    "array"              shift, and go to state 317
    "table"              shift, and go to state 318
    "typedecl"           shift, and go to state 319
    "iterator"           shift, and go to state 320
    "smart_ptr"          shift, and go to state 321
    "bool"               shift, and go to state 322
    "void"               shift, and go to state 323
    "string"             shift, and go to state 324
    "auto"               shift, and go to state 325
    "int"                shift, and go to state 326
    "int2"               shift, and go to state 327
    "int3"               shift, and go to state 328
    "int4"               shift, and go to state 329
    "uint"               shift, and go to state 330
    "bitfield"           shift, and go to state 331
    "uint2"              shift, and go to state 332
    "uint3"              shift, and go to state 333
    "uint4"              shift, and go to state 334
    "float"              shift, and go to state 335
    "float2"             shift, and go to state 336
    "float3"             shift, and go to state 337
    "float4"             shift, and go to state 338
    "range"              shift, and go to state 339
    "urange"             shift, and go to state 340
    "range64"            shift, and go to state 341
    "urange64"           shift, and go to state 342
    "block"              shift, and go to state 343
    "int64"              shift, and go to state 344
    "uint64"             shift, and go to state 345
    "double"             shift, and go to state 346
    "function"           shift, and go to state 347
    "lambda"             shift, and go to state 348
    "int8"               shift, and go to state 349
    "uint8"              shift, and go to state 350
    "int16"              shift, and go to state 351
    "uint16"             shift, and go to state 352
    "tuple"              shift, and go to state 353
    "variant"            shift, and go to state 354
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 355
    "name"               shift, and go to state 615
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '$'                  shift, and go to state 356

    $default  reduce using rule 779 ($@79)

    name_in_namespace            go to state 357
    tuple_type                   go to state 618
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    c_or_s                       go to state 619
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620
    $@79                         go to state 621


State 426

  573 variant_alias_type_list: variant_alias_type_list . c_or_s
  574                        | variant_alias_type_list . variant_type c_or_s
  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 622
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    $default  reduce using rule 784 ($@83)

    variant_type  go to state 623
    c_or_s        go to state 624
    $@83          go to state 625


State 427

  188 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 188 (function_name)


State 428

  178 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 178 (function_name)


State 429

  559 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 626
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 430

  299 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 299 (kwd_let_var_or_nothing)


State 431

  300 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 300 (kwd_let_var_or_nothing)


State 432

  558 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_declaration         go to state 629
    variable_name_with_pos_list  go to state 630


State 433

  561 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 374
    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 536 (optional_field_annotation)

    metadata_argument_list         go to state 225
    optional_field_annotation      go to state 376
    function_argument_declaration  go to state 631


State 434

  126 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 126 (optional_function_argument_list)


State 435

  128 optional_function_type: ':' type_declaration .
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 128 (optional_function_type)


State 436

  249 expressions: expressions error .

    $default  reduce using rule 249 (expressions)


State 437

  838 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 632


State 438

  841 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 633


State 439

   79 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 634
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 440

   63 if_or_static_if: "if" .

    $default  reduce using rule 63 (if_or_static_if)


State 441

   64 if_or_static_if: "static_if" .

    $default  reduce using rule 64 (if_or_static_if)


State 442

   77 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 76 ($@4)

    $@4  go to state 635


State 443

  442 expr: "true" .

    $default  reduce using rule 442 (expr)


State 444

  443 expr: "false" .

    $default  reduce using rule 443 (expr)


State 445

  279 expr_new: "new" . new_type_declaration
  280         | "new" . new_type_declaration '(' use_initializer ')'
  281         | "new" . new_type_declaration '(' expr_list ')'
  282         | "new" . new_type_declaration '(' make_struct_single ')'
  283         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  284         | "new" . make_decl

    "struct"               shift, and go to state 437
    "class"                shift, and go to state 438
    "array"                shift, and go to state 448
    "table"                shift, and go to state 453
    "fixed_array"          shift, and go to state 467
    "default"              shift, and go to state 468
    "tuple"                shift, and go to state 470
    "variant"              shift, and go to state 471
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 486
    "[{"                   shift, and go to state 487
    "{{"                   shift, and go to state 488
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 499
    '<'                    shift, and go to state 636
    '['                    shift, and go to state 507

    name_in_namespace           go to state 357
    new_type_declaration        go to state 637
    structure_type_declaration  go to state 638
    make_decl                   go to state 639
    make_struct_decl            go to state 557
    make_tuple_call             go to state 558
    make_dim_decl               go to state 559
    make_table_decl             go to state 560
    array_comprehension         go to state 561


State 446

  330 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  331               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  332               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  333               | "typeinfo" . name_in_namespace '(' expr ')'
  334               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  335               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 640

    name_in_namespace  go to state 641


State 447

  329 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 642


State 448

  864 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'
  867              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  870              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  871              | "array" . '(' expr_list optional_comma ')'
  874              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "struct"   shift, and go to state 643
    "tuple"    shift, and go to state 644
    "variant"  shift, and go to state 645
    '<'        shift, and go to state 646
    '('        shift, and go to state 647


State 449

  287 expression_return_no_pipe: "return" .
  288                          | "return" . expr_list
  289                          | "return" . "<-" expr_list
  291 expression_return: "return" . expr_pipe
  292                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 648
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 287 (expression_return_no_pipe)

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 649
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 650
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 652
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 450

  436 expr: "null" .

    $default  reduce using rule 436 (expr)


State 451

  285 expression_break: "break" .

    $default  reduce using rule 285 (expression_break)


State 452

  298 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 653


State 453

  885 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  886                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  887                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 654
    '('  shift, and go to state 655


State 454

  273 expression_delete: "delete" . expr
  274                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "explicit"                        shift, and go to state 656
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 657
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 455

  486 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 658


State 456

   80 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 659
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 457

   82 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 660


State 458

  320 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 661


State 459

  323 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 662


State 460

  487 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 663


State 461

  286 expression_continue: "continue" .

    $default  reduce using rule 286 (expression_continue)


State 462

  246 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 664


State 463

  326 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 665


State 464

   55 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 666


State 465

   56 expression_goto: "goto" . "label" "integer constant"
   57                | "goto" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 667
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 668
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 466

   78 expression_unsafe: "unsafe" . expression_block
  518 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 291
    '('                    shift, and go to state 669

    expression_block  go to state 670


State 467

  875 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  878              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 671
    '('  shift, and go to state 672


State 468

  847 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 673


State 469

  681 basic_type_declaration: "bitfield" .

    $default  reduce using rule 681 (basic_type_declaration)


State 470

  853 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  856                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 674
    '('  shift, and go to state 675


State 471

  844 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    '<'  shift, and go to state 676


State 472

  225 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  488 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  489     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 677


State 473

  293 expression_yield_no_pipe: "yield" . expr
  294                         | "yield" . "<-" expr
  296 expression_yield: "yield" . expr_pipe
  297                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 678
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 679
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 680
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 474

  472 expr: "++" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 681
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 475

  473 expr: "--" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 682
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 476

  268 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 686


State 477

  266 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 687


State 478

  267 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 688


State 479

  520 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 689


State 480

  521 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 690


State 481

  522 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 691


State 482

  523 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 692


State 483

  524 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 693


State 484

  526 expr_mtag: "$c" . '(' expr ')' '(' ')'
  527          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 694


State 485

  525 expr_mtag: "..." .

    $default  reduce using rule 525 (expr_mtag)


State 486

  830 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  831                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  832                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  833                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  860 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  894 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 695
    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 696


State 487

  834 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  835                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  861 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  895 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 697
    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 698


State 488

  884 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  897 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 701
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table              go to state 702
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 489

  359 expr_numeric_const: "integer constant" .

    $default  reduce using rule 359 (expr_numeric_const)


State 490

  361 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 361 (expr_numeric_const)


State 491

  360 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 360 (expr_numeric_const)


State 492

  362 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 362 (expr_numeric_const)


State 493

  363 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 363 (expr_numeric_const)


State 494

  364 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 364 (expr_numeric_const)


State 495

  365 expr_numeric_const: "double constant" .

    $default  reduce using rule 365 (expr_numeric_const)


State 496

  250 expr_keyword: "keyword" . expr expression_block
  261 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '<'                               shift, and go to state 703
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 704
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 497

  264 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 705


State 498

   32 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 29 (string_builder_body)

    string_builder_body  go to state 706


State 499

  883 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  896 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 707
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 708
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    expr_map_tuple_list     go to state 709
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 500

  221 expression_block: "begin of code block" expressions "end of code block" .
  222                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 710

    $default  reduce using rule 221 (expression_block)


State 501

  226 expression_any: "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 502

  449 expr: '-' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 711
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 503

  448 expr: '+' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 712
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 504

  485 expr: '*' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 713
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 505

  447 expr: '~' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 714
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 506

  446 expr: '!' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 715
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 507

  859 make_dim_decl: '[' . expr_list optional_comma ']'
  892 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  893                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 718
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 508

  476 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 509

  341 block_or_lambda: '$' .

    $default  reduce using rule 341 (block_or_lambda)


State 510

  342 block_or_lambda: '@' .
  343                | '@' . '@'
  412 func_addr_expr: '@' . '@' func_addr_name
  415               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  418               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  535 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 721

    $default  reduce using rule 342 (block_or_lambda)


State 511

  440 expr: string_builder .

    $default  reduce using rule 440 (expr)


State 512

  439 expr: expr_reader .

    $default  reduce using rule 439 (expr)


State 513

  244 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 722


State 514

  245 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 723


State 515

   73 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 724
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 516

   75 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 725


State 517

  242 expression_any: expression_if_then_else .

    $default  reduce using rule 242 (expression_any)


State 518

  237 expression_any: expression_for_loop .

    $default  reduce using rule 237 (expression_any)


State 519

  234 expression_any: expression_unsafe .

    $default  reduce using rule 234 (expression_any)


State 520

  233 expression_any: expression_while_loop .

    $default  reduce using rule 233 (expression_any)


State 521

  235 expression_any: expression_with .

    $default  reduce using rule 235 (expression_any)


State 522

  236 expression_any: expression_with_alias .

    $default  reduce using rule 236 (expression_any)


State 523

  269 expr_pipe: expr_call_pipe .

    $default  reduce using rule 269 (expr_pipe)


State 524

  248 expressions: expressions expression_any .

    $default  reduce using rule 248 (expressions)


State 525

  228 expression_any: expr_keyword .

    $default  reduce using rule 228 (expression_any)


State 526

  224 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  519 expr: expression_keyword .

    '$'  shift, and go to state 509
    '@'  shift, and go to state 683

    '$'       [reduce using rule 519 (expr)]
    '@'       [reduce using rule 519 (expr)]
    $default  reduce using rule 519 (expr)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 727


State 527

  227 expression_any: expr_pipe .

    $default  reduce using rule 227 (expression_any)


State 528

  406 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  407                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  429 expr_call: name_in_namespace . '(' ')'
  430          | name_in_namespace . '(' "uninitialized" ')'
  431          | name_in_namespace . '(' make_struct_single ')'
  432          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  433          | name_in_namespace . '(' expr_list ')'
  437 expr: name_in_namespace .
  517     | name_in_namespace . "name"

    "name"  shift, and go to state 728
    '('     shift, and go to state 729

    "name"    [reduce using rule 437 (expr)]
    '('       [reduce using rule 437 (expr)]
    $default  reduce using rule 437 (expr)


State 529

  231 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 730


State 530

  510 expr: expr_new .

    $default  reduce using rule 510 (expr)


State 531

   71 expression_if_one_liner: expression_break .
  238 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 731

    $default  reduce using rule 71 (expression_if_one_liner)


State 532

   72 expression_if_one_liner: expression_continue .
  239 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 732

    $default  reduce using rule 72 (expression_if_one_liner)


State 533

   69 expression_if_one_liner: expression_return_no_pipe .
  290 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 733

    $default  reduce using rule 69 (expression_if_one_liner)


State 534

  240 expression_any: expression_return .

    $default  reduce using rule 240 (expression_any)


State 535

   70 expression_if_one_liner: expression_yield_no_pipe .
  295 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 734

    $default  reduce using rule 70 (expression_if_one_liner)


State 536

  241 expression_any: expression_yield .

    $default  reduce using rule 241 (expression_any)


State 537

  243 expression_any: expression_try_catch .

    $default  reduce using rule 243 (expression_any)


State 538

  316 expression_let: kwd_let . optional_in_scope let_variable_declaration
  317               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 735

    $default  reduce using rule 305 (optional_in_scope)

    optional_in_scope  go to state 736


State 539

  232 expression_any: expression_let .

    $default  reduce using rule 232 (expression_any)


State 540

  509 expr: expr_cast .

    $default  reduce using rule 509 (expr)


State 541

  508 expr: expr_type_decl .

    $default  reduce using rule 508 (expr)


State 542

  507 expr: expr_type_info .

    $default  reduce using rule 507 (expr)


State 543

  356 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 122 (optional_annotation_list)

    optional_annotation_list  go to state 737


State 544

  513 expr: expr_full_block .

    $default  reduce using rule 513 (expr)


State 545

  438 expr: expr_numeric_const .

    $default  reduce using rule 438 (expr)


State 546

  230 expression_any: expr_assign . "end of expression"
  265 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 738
    "end of expression"  shift, and go to state 739


State 547

  229 expression_any: expr_assign_pipe .

    $default  reduce using rule 229 (expression_any)


State 548

  512 expr: expr_named_call .

    $default  reduce using rule 512 (expr)


State 549

  511 expr: expr_method_call .

    $default  reduce using rule 511 (expr)


State 550

  483 expr: func_addr_expr .

    $default  reduce using rule 483 (expr)


State 551

  444 expr: expr_field .

    $default  reduce using rule 444 (expr)


State 552

  484 expr: expr_call .

    $default  reduce using rule 484 (expr)


State 553

   68 expression_if_one_liner: expr .
  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  389 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  390                 | expr . "<-" expr_assign_pipe_right
  391                 | expr . "&=" expr_assign_pipe_right
  392                 | expr . "|=" expr_assign_pipe_right
  393                 | expr . "^=" expr_assign_pipe_right
  394                 | expr . "&&=" expr_assign_pipe_right
  395                 | expr . "||=" expr_assign_pipe_right
  396                 | expr . "^^=" expr_assign_pipe_right
  397                 | expr . "+=" expr_assign_pipe_right
  398                 | expr . "-=" expr_assign_pipe_right
  399                 | expr . "*=" expr_assign_pipe_right
  400                 | expr . "/=" expr_assign_pipe_right
  401                 | expr . "%=" expr_assign_pipe_right
  402                 | expr . "<<=" expr_assign_pipe_right
  403                 | expr . ">>=" expr_assign_pipe_right
  404                 | expr . "<<<=" expr_assign_pipe_right
  405                 | expr . ">>>=" expr_assign_pipe_right
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 740
    "as"    shift, and go to state 741
    "+="    shift, and go to state 742
    "-="    shift, and go to state 743
    "/="    shift, and go to state 744
    "*="    shift, and go to state 745
    "%="    shift, and go to state 746
    "&="    shift, and go to state 747
    "|="    shift, and go to state 748
    "^="    shift, and go to state 749
    "<<"    shift, and go to state 750
    ">>"    shift, and go to state 751
    "++"    shift, and go to state 752
    "--"    shift, and go to state 753
    "<="    shift, and go to state 754
    "<<="   shift, and go to state 755
    ">>="   shift, and go to state 756
    ">="    shift, and go to state 757
    "=="    shift, and go to state 758
    "!="    shift, and go to state 759
    "->"    shift, and go to state 760
    "<-"    shift, and go to state 761
    "??"    shift, and go to state 762
    "?."    shift, and go to state 763
    "?["    shift, and go to state 764
    "<|"    shift, and go to state 765
    "|>"    shift, and go to state 766
    ":="    shift, and go to state 767
    "<<<"   shift, and go to state 768
    ">>>"   shift, and go to state 769
    "<<<="  shift, and go to state 770
    ">>>="  shift, and go to state 771
    "&&"    shift, and go to state 772
    "||"    shift, and go to state 773
    "^^"    shift, and go to state 774
    "&&="   shift, and go to state 775
    "||="   shift, and go to state 776
    "^^="   shift, and go to state 777
    ".."    shift, and go to state 778
    '='     shift, and go to state 779
    '?'     shift, and go to state 780
    '|'     shift, and go to state 781
    '^'     shift, and go to state 782
    '&'     shift, and go to state 783
    '<'     shift, and go to state 784
    '>'     shift, and go to state 785
    '-'     shift, and go to state 786
    '+'     shift, and go to state 787
    '*'     shift, and go to state 788
    '/'     shift, and go to state 789
    '%'     shift, and go to state 790
    '.'     shift, and go to state 791
    '['     shift, and go to state 792
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    "if"      reduce using rule 68 (expression_if_one_liner)
    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 554

  445 expr: expr_mtag .

    $default  reduce using rule 445 (expr)


State 555

  434 expr_call: basic_type_declaration . '(' ')'
  435          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 794


State 556

  441 expr: make_decl .

    $default  reduce using rule 441 (expr)


State 557

  791 make_decl: make_struct_decl .

    $default  reduce using rule 791 (make_decl)


State 558

  795 make_decl: make_tuple_call .

    $default  reduce using rule 795 (make_decl)


State 559

  792 make_decl: make_dim_decl .

    $default  reduce using rule 792 (make_decl)


State 560

  793 make_decl: make_table_decl .

    $default  reduce using rule 793 (make_decl)


State 561

  794 make_decl: array_comprehension .

    $default  reduce using rule 794 (make_decl)


State 562

  611 enum_list: enum_list "name" . "end of expression"
  612          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 795
    '='                  shift, and go to state 796


State 563

  610 enum_list: enum_list "end of expression" .

    $default  reduce using rule 610 (enum_list)


State 564

  629 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 797


State 565

  632 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 609 (enum_list)

    enum_list  go to state 798


State 566

  634 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 634 (optional_structure_parent)


State 567

  552 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  554                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  556                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  557                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  646 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 799
    '['                  shift, and go to state 800

    "def"     reduce using rule 122 (optional_annotation_list)
    $default  reduce using rule 551 ($@34)

    optional_annotation_list  go to state 801
    $@34                      go to state 802


State 568

  600 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 600 (global_variable_declaration_list)


State 569

  537 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 537 (optional_field_annotation)


State 570

  518 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 669


State 571

  488 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  489     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 803


State 572

  261 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 703


State 573

  519 expr: expression_keyword .

    $default  reduce using rule 519 (expr)


State 574

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  589 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 804


State 575

  590 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 590 (let_variable_name_with_pos_list)


State 576

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  592                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 805

    $default  reduce using rule 591 (let_variable_name_with_pos_list)


State 577

  593 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  594                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  595                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 412
    "implicit"           shift, and go to state 413
    "explicit"           shift, and go to state 414
    "=="                 shift, and go to state 415
    "<-"                 shift, and go to state 578
    "??"                 shift, and go to state 416
    ":="                 shift, and go to state 579
    "end of expression"  shift, and go to state 806
    '='                  shift, and go to state 580
    '?'                  shift, and go to state 417
    '&'                  shift, and go to state 418
    '-'                  shift, and go to state 419
    '['                  shift, and go to state 420
    '#'                  shift, and go to state 421

    copy_or_move_or_clone  go to state 807
    dim_list               go to state 422


State 578

  584 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 584 (copy_or_move_or_clone)


State 579

  585 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 585 (copy_or_move_or_clone)


State 580

  583 copy_or_move_or_clone: '=' .

    $default  reduce using rule 583 (copy_or_move_or_clone)


State 581

  596 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  597                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 808
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 809
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 582

  716 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 810


State 583

  739 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 811


State 584

  742 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    table_type_pair              go to state 812
    type_declaration_no_options  go to state 362
    type_declaration             go to state 813


State 585

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  717 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 814


State 586

  745 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 815


State 587

  735 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 816


State 588

  692 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 817


State 589

  701 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 818

    bitfield_bits  go to state 819


State 590

  749 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 820


State 591

  752 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 821


State 592

  756 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 822


State 593

  759 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 823


State 594

  763 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 824


State 595

  766 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 825


State 596

  769 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 615
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    tuple_type                   go to state 826
    tuple_type_list              go to state 827
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620


State 597

  772 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 622

    variant_type       go to state 828
    variant_type_list  go to state 829


State 598

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  693 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 830


State 599

  720 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 719 ($@51)

    $@51  go to state 831


State 600

  718 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 832
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 833
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 601

  730 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 730 (type_declaration_no_options)


State 602

  731 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 731 (type_declaration_no_options)


State 603

  724 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 724 (type_declaration_no_options)


State 604

  726 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 726 (type_declaration_no_options)


State 605

  721 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 834


State 606

  729 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 729 (type_declaration_no_options)


State 607

  713 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 713 (type_declaration_no_options)


State 608

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  706 dim_list: '[' expr . ']'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ']'    shift, and go to state 835


State 609

  707 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 836
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 610

  775 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 775 (type_declaration)


State 611

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  774 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    $default  reduce using rule 774 (type_declaration)

    dim_list  go to state 422


State 612

  698 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 837


State 613

  697 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 697 (bitfield_alias_bits)


State 614

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 838


State 615

  270 name_in_namespace: "name" .
  271                  | "name" . "::" "name"
  563 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 100
    ':'   shift, and go to state 839

    $default  reduce using rule 270 (name_in_namespace)


State 616

  703 c_or_s: "end of expression" .

    $default  reduce using rule 703 (c_or_s)


State 617

  702 c_or_s: ',' .

    $default  reduce using rule 702 (c_or_s)


State 618

  568 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    c_or_s  go to state 840


State 619

  567 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 567 (tuple_alias_type_list)


State 620

  562 tuple_type: type_declaration .
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 562 (tuple_type)


State 621

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 841


State 622

  569 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 842


State 623

  574 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617

    c_or_s  go to state 843


State 624

  573 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 573 (variant_alias_type_list)


State 625

  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 844


State 626

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  559 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 845


State 627

  651 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 846


State 628

  650 variable_name_with_pos_list: "name" .
  652                            | "name" . "aka" "name"

    "aka"  shift, and go to state 847

    $default  reduce using rule 650 (variable_name_with_pos_list)


State 629

  558 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 558 (function_argument_declaration)


State 630

  577 variable_declaration: variable_name_with_pos_list .
  578                     | variable_name_with_pos_list . '&'
  579                     | variable_name_with_pos_list . ':' type_declaration
  580                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  581                     | variable_name_with_pos_list . copy_or_move expr
  582                     | variable_name_with_pos_list . copy_or_move expr_pipe
  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 848
    ','   shift, and go to state 849
    '='   shift, and go to state 850
    ':'   shift, and go to state 851
    '&'   shift, and go to state 852

    $default  reduce using rule 577 (variable_declaration)

    copy_or_move  go to state 853


State 631

  561 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 561 (function_argument_list)


State 632

  838 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 836 ($@88)

    $@88  go to state 854


State 633

  841 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 839 ($@90)

    $@90  go to state 855


State 634

   79 expression_while_loop: "while" expr . expression_block
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 740
    "as"                   shift, and go to state 741
    "<<"                   shift, and go to state 750
    ">>"                   shift, and go to state 751
    "++"                   shift, and go to state 752
    "--"                   shift, and go to state 753
    "<="                   shift, and go to state 754
    ">="                   shift, and go to state 757
    "=="                   shift, and go to state 758
    "!="                   shift, and go to state 759
    "->"                   shift, and go to state 760
    "??"                   shift, and go to state 762
    "?."                   shift, and go to state 763
    "?["                   shift, and go to state 764
    "<|"                   shift, and go to state 765
    "|>"                   shift, and go to state 766
    "<<<"                  shift, and go to state 768
    ">>>"                  shift, and go to state 769
    "&&"                   shift, and go to state 772
    "||"                   shift, and go to state 773
    "^^"                   shift, and go to state 774
    ".."                   shift, and go to state 778
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 780
    '|'                    shift, and go to state 781
    '^'                    shift, and go to state 782
    '&'                    shift, and go to state 783
    '<'                    shift, and go to state 784
    '>'                    shift, and go to state 785
    '-'                    shift, and go to state 786
    '+'                    shift, and go to state 787
    '*'                    shift, and go to state 788
    '/'                    shift, and go to state 789
    '%'                    shift, and go to state 790
    '.'                    shift, and go to state 791
    '['                    shift, and go to state 792

    expression_block  go to state 856


State 635

   77 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 857


State 636

  277 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 275 ($@11)

    $@11  go to state 858


State 637

  279 expr_new: "new" new_type_declaration .
  280         | "new" new_type_declaration . '(' use_initializer ')'
  281         | "new" new_type_declaration . '(' expr_list ')'
  282         | "new" new_type_declaration . '(' make_struct_single ')'
  283         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 859

    '('       [reduce using rule 279 (expr_new)]
    $default  reduce using rule 279 (expr_new)


State 638

  278 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 278 (new_type_declaration)


State 639

  284 expr_new: "new" make_decl .

    $default  reduce using rule 284 (expr_new)


State 640

  330 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  331               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  332               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 860


State 641

  333 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  334               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 861
    '('  shift, and go to state 862


State 642

  329 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 327 ($@19)

    $@19  go to state 863


State 643

  864 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 864


State 644

  867 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 865


State 645

  870 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    '<'  shift, and go to state 866


State 646

  874 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    $default  reduce using rule 872 ($@104)

    $@104  go to state 867


State 647

  871 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 868
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 648

  289 expression_return_no_pipe: "return" "<-" . expr_list
  292 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 869
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 870
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 652
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 649

  291 expression_return: "return" expr_pipe .

    $default  reduce using rule 291 (expression_return)


State 650

  288 expression_return_no_pipe: "return" expr_list .
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 871

    $default  reduce using rule 288 (expression_return_no_pipe)


State 651

  265 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 738


State 652

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  336 expr_list: expr .
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 740
    "as"    shift, and go to state 741
    "+="    shift, and go to state 872
    "-="    shift, and go to state 873
    "/="    shift, and go to state 874
    "*="    shift, and go to state 875
    "%="    shift, and go to state 876
    "&="    shift, and go to state 877
    "|="    shift, and go to state 878
    "^="    shift, and go to state 879
    "<<"    shift, and go to state 750
    ">>"    shift, and go to state 751
    "++"    shift, and go to state 752
    "--"    shift, and go to state 753
    "<="    shift, and go to state 754
    "<<="   shift, and go to state 880
    ">>="   shift, and go to state 881
    ">="    shift, and go to state 757
    "=="    shift, and go to state 758
    "!="    shift, and go to state 759
    "->"    shift, and go to state 760
    "<-"    shift, and go to state 882
    "??"    shift, and go to state 762
    "?."    shift, and go to state 763
    "?["    shift, and go to state 764
    "<|"    shift, and go to state 765
    "|>"    shift, and go to state 766
    ":="    shift, and go to state 767
    "<<<"   shift, and go to state 768
    ">>>"   shift, and go to state 769
    "<<<="  shift, and go to state 883
    ">>>="  shift, and go to state 884
    "&&"    shift, and go to state 772
    "||"    shift, and go to state 773
    "^^"    shift, and go to state 774
    "&&="   shift, and go to state 885
    "||="   shift, and go to state 886
    "^^="   shift, and go to state 887
    ".."    shift, and go to state 778
    '='     shift, and go to state 888
    '?'     shift, and go to state 780
    '|'     shift, and go to state 781
    '^'     shift, and go to state 782
    '&'     shift, and go to state 783
    '<'     shift, and go to state 784
    '>'     shift, and go to state 785
    '-'     shift, and go to state 786
    '+'     shift, and go to state 787
    '*'     shift, and go to state 788
    '/'     shift, and go to state 789
    '%'     shift, and go to state 790
    '.'     shift, and go to state 791
    '['     shift, and go to state 792
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 366 (expr_assign)
    $default  reduce using rule 336 (expr_list)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 653

  298 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 889


State 654

  886 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  887                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 890


State 655

  885 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 255 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 891
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 708
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 892
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 656

  274 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 893
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 657

  273 expression_delete: "delete" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 273 (expression_delete)


State 658

  486 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 894
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 659

   80 expression_with: "with" expr . expression_block
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 740
    "as"                   shift, and go to state 741
    "<<"                   shift, and go to state 750
    ">>"                   shift, and go to state 751
    "++"                   shift, and go to state 752
    "--"                   shift, and go to state 753
    "<="                   shift, and go to state 754
    ">="                   shift, and go to state 757
    "=="                   shift, and go to state 758
    "!="                   shift, and go to state 759
    "->"                   shift, and go to state 760
    "??"                   shift, and go to state 762
    "?."                   shift, and go to state 763
    "?["                   shift, and go to state 764
    "<|"                   shift, and go to state 765
    "|>"                   shift, and go to state 766
    "<<<"                  shift, and go to state 768
    ">>>"                  shift, and go to state 769
    "&&"                   shift, and go to state 772
    "||"                   shift, and go to state 773
    "^^"                   shift, and go to state 774
    ".."                   shift, and go to state 778
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 780
    '|'                    shift, and go to state 781
    '^'                    shift, and go to state 782
    '&'                    shift, and go to state 783
    '<'                    shift, and go to state 784
    '>'                    shift, and go to state 785
    '-'                    shift, and go to state 786
    '+'                    shift, and go to state 787
    '*'                    shift, and go to state 788
    '/'                    shift, and go to state 789
    '%'                    shift, and go to state 790
    '.'                    shift, and go to state 791
    '['                    shift, and go to state 792

    expression_block  go to state 895


State 660

   82 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 896


State 661

  320 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 318 ($@13)

    $@13  go to state 897


State 662

  323 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 321 ($@15)

    $@15  go to state 898


State 663

  487 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 899
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 664

  246 expression_any: "pass" "end of expression" .

    $default  reduce using rule 246 (expression_any)


State 665

  326 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 324 ($@17)

    $@17  go to state 900


State 666

   55 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 901


State 667

   56 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 902


State 668

   57 expression_goto: "goto" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 57 (expression_goto)


State 669

  518 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 903
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 670

   78 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 78 (expression_unsafe)


State 671

  878 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 876 ($@106)

    $@106  go to state 904


State 672

  875 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 905
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 673

  847 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 845 ($@94)

    $@94  go to state 906


State 674

  856 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 854 ($@96)

    $@96  go to state 907


State 675

  853 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 908
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 676

  844 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    $default  reduce using rule 842 ($@92)

    $@92  go to state 909


State 677

  225 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  488 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  489     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 910


State 678

  294 expression_yield_no_pipe: "yield" "<-" . expr
  297 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 911
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 912
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 679

  296 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 296 (expression_yield)


State 680

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  293 expression_yield_no_pipe: "yield" expr .
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 740
    "as"    shift, and go to state 741
    "+="    shift, and go to state 872
    "-="    shift, and go to state 873
    "/="    shift, and go to state 874
    "*="    shift, and go to state 875
    "%="    shift, and go to state 876
    "&="    shift, and go to state 877
    "|="    shift, and go to state 878
    "^="    shift, and go to state 879
    "<<"    shift, and go to state 750
    ">>"    shift, and go to state 751
    "++"    shift, and go to state 752
    "--"    shift, and go to state 753
    "<="    shift, and go to state 754
    "<<="   shift, and go to state 880
    ">>="   shift, and go to state 881
    ">="    shift, and go to state 757
    "=="    shift, and go to state 758
    "!="    shift, and go to state 759
    "->"    shift, and go to state 760
    "<-"    shift, and go to state 882
    "??"    shift, and go to state 762
    "?."    shift, and go to state 763
    "?["    shift, and go to state 764
    "<|"    shift, and go to state 765
    "|>"    shift, and go to state 766
    ":="    shift, and go to state 767
    "<<<"   shift, and go to state 768
    ">>>"   shift, and go to state 769
    "<<<="  shift, and go to state 883
    ">>>="  shift, and go to state 884
    "&&"    shift, and go to state 772
    "||"    shift, and go to state 773
    "^^"    shift, and go to state 774
    "&&="   shift, and go to state 885
    "||="   shift, and go to state 886
    "^^="   shift, and go to state 887
    ".."    shift, and go to state 778
    '='     shift, and go to state 888
    '?'     shift, and go to state 780
    '|'     shift, and go to state 781
    '^'     shift, and go to state 782
    '&'     shift, and go to state 783
    '<'     shift, and go to state 784
    '>'     shift, and go to state 785
    '-'     shift, and go to state 786
    '+'     shift, and go to state 787
    '*'     shift, and go to state 788
    '/'     shift, and go to state 789
    '%'     shift, and go to state 790
    '.'     shift, and go to state 791
    '['     shift, and go to state 792
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 366 (expr_assign)
    $default  reduce using rule 293 (expression_yield_no_pipe)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 681

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  472     | "++" expr .
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 472 (expr)


State 682

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  473     | "--" expr .
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 473 (expr)


State 683

  342 block_or_lambda: '@' .
  343                | '@' . '@'

    '@'  shift, and go to state 913

    $default  reduce using rule 342 (block_or_lambda)


State 684

  354 expr_block: expression_block .

    $default  reduce using rule 354 (expr_block)


State 685

  355 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 122 (optional_annotation_list)

    optional_annotation_list  go to state 914


State 686

  268 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 268 (expr_pipe)


State 687

  266 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 266 (expr_pipe)


State 688

  267 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 267 (expr_pipe)


State 689

  520 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 915
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 690

  521 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 916
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 691

  522 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 917
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 692

  523 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 918
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 693

  524 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 919
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 694

  526 expr_mtag: "$c" '(' . expr ')' '(' ')'
  527          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 920
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 695

  894 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 921


State 696

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  830 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  831                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  832                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  833                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  860 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 412
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "where"                           shift, and go to state 922
    "reinterpret"                     shift, and go to state 463
    "implicit"                        shift, and go to state 413
    "explicit"                        shift, and go to state 414
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "=="                              shift, and go to state 415
    "??"                              shift, and go to state 416
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 923
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 924
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '?'                               shift, and go to state 417
    '&'                               shift, and go to state 418
    '-'                               shift, and go to state 925
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 926
    '('                               shift, and go to state 927
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 421

    $default  reduce using rule 814 (optional_block)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 928
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    dim_list                go to state 422
    make_decl               go to state 556
    make_struct_fields      go to state 929
    make_struct_dim         go to state 930
    optional_block          go to state 931
    make_struct_decl        go to state 557
    make_tuple              go to state 932
    make_tuple_call         go to state 558
    make_dim                go to state 933
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 697

  895 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 934


State 698

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  834 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  835                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  861 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 412
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "implicit"                        shift, and go to state 413
    "explicit"                        shift, and go to state 414
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "=="                              shift, and go to state 415
    "??"                              shift, and go to state 416
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 923
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 924
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '?'                               shift, and go to state 417
    '&'                               shift, and go to state 418
    '-'                               shift, and go to state 925
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 926
    '('                               shift, and go to state 935
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 421

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 928
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    dim_list                go to state 422
    make_decl               go to state 556
    make_struct_fields      go to state 929
    make_struct_dim         go to state 936
    make_struct_decl        go to state 557
    make_tuple              go to state 932
    make_tuple_call         go to state 558
    make_dim                go to state 937
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 699

  897 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 938


State 700

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  851 make_map_tuple: expr . "=>" expr
  852               | expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "=>"   shift, and go to state 939
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 852 (make_map_tuple)


State 701

  879 make_table: make_map_tuple .

    $default  reduce using rule 879 (make_table)


State 702

  880 make_table: make_table . "end of expression" make_map_tuple
  884 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 940
    "end of expression"  shift, and go to state 941
    ";}}"                shift, and go to state 942

    optional_trailing_semicolon_cur_cur  go to state 943


State 703

  261 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 259 ($@7)

    $@7  go to state 944


State 704

  250 expr_keyword: "keyword" expr . expression_block
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 740
    "as"                   shift, and go to state 741
    "<<"                   shift, and go to state 750
    ">>"                   shift, and go to state 751
    "++"                   shift, and go to state 752
    "--"                   shift, and go to state 753
    "<="                   shift, and go to state 754
    ">="                   shift, and go to state 757
    "=="                   shift, and go to state 758
    "!="                   shift, and go to state 759
    "->"                   shift, and go to state 760
    "??"                   shift, and go to state 762
    "?."                   shift, and go to state 763
    "?["                   shift, and go to state 764
    "<|"                   shift, and go to state 765
    "|>"                   shift, and go to state 766
    "<<<"                  shift, and go to state 768
    ">>>"                  shift, and go to state 769
    "&&"                   shift, and go to state 772
    "||"                   shift, and go to state 773
    "^^"                   shift, and go to state 774
    ".."                   shift, and go to state 778
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 780
    '|'                    shift, and go to state 781
    '^'                    shift, and go to state 782
    '&'                    shift, and go to state 783
    '<'                    shift, and go to state 784
    '>'                    shift, and go to state 785
    '-'                    shift, and go to state 786
    '+'                    shift, and go to state 787
    '*'                    shift, and go to state 788
    '/'                    shift, and go to state 789
    '%'                    shift, and go to state 790
    '.'                    shift, and go to state 791
    '['                    shift, and go to state 792

    expression_block  go to state 945


State 705

  264 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 262 ($@9)

    $@9  go to state 946


State 706

   30 string_builder_body: string_builder_body . character_sequence
   31                    | string_builder_body . "{" expr "}"
   32 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 166
    STRING_CHARACTER_ESC  shift, and go to state 167
    "end of the string"   shift, and go to state 947
    "{"                   shift, and go to state 948

    character_sequence  go to state 949


State 707

  896 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 950


State 708

  881 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 881 (expr_map_tuple_list)


State 709

  882 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  883 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 951

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 952


State 710

  222 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 953


State 711

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  449 expr: '-' expr .
  450     | expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 449 (expr)


State 712

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  448 expr: '+' expr .
  450     | expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 448 (expr)


State 713

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  485     | '*' expr .
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 485 (expr)


State 714

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  447 expr: '~' expr .
  450     | expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 447 (expr)


State 715

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  446 expr: '!' expr .
  450     | expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 446 (expr)


State 716

  892 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 954


State 717

  893 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 955


State 718

  337 expr_list: expr_list . ',' expr
  859 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 956

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 957


State 719

  336 expr_list: expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 336 (expr_list)


State 720

  337 expr_list: expr_list . ',' expr
  476 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 956

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 958


State 721

  343 block_or_lambda: '@' '@' .
  412 func_addr_expr: '@' '@' . func_addr_name
  415               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  418               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  535 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 959
    "$c"    shift, and go to state 960
    "name"  shift, and go to state 59
    '<'     shift, and go to state 961

    $default  reduce using rule 343 (block_or_lambda)

    name_in_namespace  go to state 962
    func_addr_name     go to state 963


State 722

  244 expression_any: expression_label "end of expression" .

    $default  reduce using rule 244 (expression_any)


State 723

  245 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 245 (expression_any)


State 724

   73 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 740
    "as"                   shift, and go to state 741
    "<<"                   shift, and go to state 750
    ">>"                   shift, and go to state 751
    "++"                   shift, and go to state 752
    "--"                   shift, and go to state 753
    "<="                   shift, and go to state 754
    ">="                   shift, and go to state 757
    "=="                   shift, and go to state 758
    "!="                   shift, and go to state 759
    "->"                   shift, and go to state 760
    "??"                   shift, and go to state 762
    "?."                   shift, and go to state 763
    "?["                   shift, and go to state 764
    "<|"                   shift, and go to state 765
    "|>"                   shift, and go to state 766
    "<<<"                  shift, and go to state 768
    ">>>"                  shift, and go to state 769
    "&&"                   shift, and go to state 772
    "||"                   shift, and go to state 773
    "^^"                   shift, and go to state 774
    ".."                   shift, and go to state 778
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 780
    '|'                    shift, and go to state 781
    '^'                    shift, and go to state 782
    '&'                    shift, and go to state 783
    '<'                    shift, and go to state 784
    '>'                    shift, and go to state 785
    '-'                    shift, and go to state 786
    '+'                    shift, and go to state 787
    '*'                    shift, and go to state 788
    '/'                    shift, and go to state 789
    '%'                    shift, and go to state 790
    '.'                    shift, and go to state 791
    '['                    shift, and go to state 792

    expression_block  go to state 964


State 725

   75 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 74 ($@3)

    $@3  go to state 965


State 726

  358 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 357 ($@21)

    $@21  go to state 966


State 727

  224 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 224 (expr_call_pipe)


State 728

  517 expr: name_in_namespace "name" .

    $default  reduce using rule 517 (expr)


State 729

  406 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  407                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  429 expr_call: name_in_namespace '(' . ')'
  430          | name_in_namespace '(' . "uninitialized" ')'
  431          | name_in_namespace '(' . make_struct_single ')'
  432          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  433          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "uninitialized"                   shift, and go to state 967
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 923
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 924
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 968
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 969
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 970
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 971
    make_struct_single      go to state 972
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 730

  231 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 731

  238 expression_any: expression_break "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 732

  239 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 239 (expression_any)


State 733

  290 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 290 (expression_return)


State 734

  295 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 295 (expression_yield)


State 735

  304 optional_in_scope: "inscope" .

    $default  reduce using rule 304 (optional_in_scope)


State 736

  316 expression_let: kwd_let optional_in_scope . let_variable_declaration
  317               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 311
    "[["    shift, and go to state 973
    "name"  shift, and go to state 312
    '('     shift, and go to state 974

    tuple_expansion_variable_declaration  go to state 975
    let_variable_name_with_pos_list       go to state 313
    let_variable_declaration              go to state 976


State 737

  356 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 977
    "[["       shift, and go to state 978

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 979


State 738

  265 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 980


State 739

  230 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 740

  494 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr "is" . basic_type_declaration
  496     | expr "is" . "name"
  534 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 981
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 982
    "name"      shift, and go to state 983

    basic_type_declaration  go to state 984


State 741

  497 expr: expr "as" . "name"
  500     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  501     | expr "as" . basic_type_declaration
  532 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 985
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 986
    "name"      shift, and go to state 987

    basic_type_declaration  go to state 988


State 742

  376 expr_assign: expr "+=" . expr
  397 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 993
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 994
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 743

  377 expr_assign: expr "-=" . expr
  398 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 995
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 996
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 744

  379 expr_assign: expr "/=" . expr
  400 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 997
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 998
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 745

  378 expr_assign: expr "*=" . expr
  399 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 999
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1000
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 746

  380 expr_assign: expr "%=" . expr
  401 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1001
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1002
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 747

  370 expr_assign: expr "&=" . expr
  391 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1003
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1004
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 748

  371 expr_assign: expr "|=" . expr
  392 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1005
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1006
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 749

  372 expr_assign: expr "^=" . expr
  393 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1007
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1008
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 750

  450 expr: expr "<<" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1009
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 751

  451 expr: expr ">>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1010
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 752

  474 expr: expr "++" .

    $default  reduce using rule 474 (expr)


State 753

  475 expr: expr "--" .

    $default  reduce using rule 475 (expr)


State 754

  463 expr: expr "<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1011
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 755

  381 expr_assign: expr "<<=" . expr
  402 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1013
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 756

  382 expr_assign: expr ">>=" . expr
  403 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1015
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 757

  464 expr: expr ">=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1016
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 758

  461 expr: expr "==" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1017
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 759

  462 expr: expr "!=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1018
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 760

  408 expr_method_call: expr "->" . "name" '(' ')'
  409                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1019


State 761

  368 expr_assign: expr "<-" . expr
  390 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1020
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1021
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 762

  490 expr: expr "??" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1022
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 763

  481 expr: expr "?." . "name"
  529 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1023
    "name"  shift, and go to state 1024


State 764

  479 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1025
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 765

  514 expr: expr "<|" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1026
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 766

  515 expr: expr "|>" . expr
  516     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1027
    expr_mtag               go to state 554
    basic_type_declaration  go to state 1028
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 767

  369 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1029
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 768

  452 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1030
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 769

  453 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1031
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 770

  383 expr_assign: expr "<<<=" . expr
  404 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1032
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1033
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 771

  384 expr_assign: expr ">>>=" . expr
  405 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1034
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1035
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 772

  468 expr: expr "&&" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1036
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 773

  469 expr: expr "||" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1037
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 774

  470 expr: expr "^^" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1038
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 775

  373 expr_assign: expr "&&=" . expr
  394 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1040
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 776

  374 expr_assign: expr "||=" . expr
  395 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1042
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 777

  375 expr_assign: expr "^^=" . expr
  396 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1043
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1044
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 778

  471 expr: expr ".." . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1045
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 779

  367 expr_assign: expr '=' . expr
  389 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 989
    "@ <|"                            shift, and go to state 990
    "@@ <|"                           shift, and go to state 991
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 992
    expression_keyword      go to state 526
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign_pipe_right  go to state 1046
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1047
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 780

  491 expr: expr '?' . expr ':' expr
  502     | expr '?' . "as" "name"
  505     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr '?' . "as" basic_type_declaration
  533 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "as"                              shift, and go to state 1048
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1049
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 781

  466 expr: expr '|' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1050
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 782

  467 expr: expr '^' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1051
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 783

  465 expr: expr '&' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1052
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 784

  459 expr: expr '<' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1053
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 785

  460 expr: expr '>' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1054
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 786

  455 expr: expr '-' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1055
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 787

  454 expr: expr '+' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1056
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 788

  456 expr: expr '*' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1057
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 789

  457 expr: expr '/' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1058
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 790

  458 expr: expr '%' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1059
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 791

  419 expr_field: expr '.' . "name"
  420           | expr '.' . '.' "name"
  421           | expr '.' . "name" '(' ')'
  422           | expr '.' . "name" '(' expr_list ')'
  423           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  424           | expr '.' . basic_type_declaration '(' ')'
  425           | expr '.' . basic_type_declaration '(' expr_list ')'
  428           | expr '.' . $@26 error $@27
  478 expr: expr '.' . '[' expr ']'
  480     | expr '.' . "?[" expr ']'
  482     | expr '.' . "?." "name"
  528 expr_mtag: expr '.' . "$f" '(' expr ')'
  530          | expr '.' . '.' "$f" '(' expr ')'
  531          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "?."        shift, and go to state 1060
    "?["        shift, and go to state 1061
    "$f"        shift, and go to state 1062
    "name"      shift, and go to state 1063
    '.'         shift, and go to state 1064
    '['         shift, and go to state 1065

    $default  reduce using rule 426 ($@26)

    $@26                    go to state 1066
    basic_type_declaration  go to state 1067


State 792

  477 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1068
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 793

  223 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 223 (expr_call_pipe)


State 794

  434 expr_call: basic_type_declaration '(' . ')'
  435          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1069
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1070
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 795

  611 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 611 (enum_list)


State 796

  612 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1071
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 797

  629 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 629 (enum_declaration)


State 798

  610 enum_list: enum_list . "end of expression"
  611          | enum_list . "name" "end of expression"
  612          | enum_list . "name" '=' expr "end of expression"
  632 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 562
    "end of expression"  shift, and go to state 563

    $default  reduce using rule 631 ($@44)

    $@44  go to state 1072


State 799

  646 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 646 (optional_struct_variable_declaration_list)


State 800

  123 optional_annotation_list: '[' . annotation_list ']'
  557 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 1073
    name_in_namespace             go to state 71


State 801

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  556                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1074


State 802

  552 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 223
    '@'   shift, and go to state 224

    $default  reduce using rule 536 (optional_field_annotation)

    metadata_argument_list          go to state 225
    optional_field_annotation       go to state 1075
    structure_variable_declaration  go to state 1076


State 803

  488 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  489     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1077


State 804

  589 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 589 (let_variable_name_with_pos_list)


State 805

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1078


State 806

  593 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 593 (let_variable_declaration)


State 807

  594 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  595                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1079
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1080
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 808

  597 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 597 (let_variable_declaration)


State 809

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  596 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "+="                 shift, and go to state 872
    "-="                 shift, and go to state 873
    "/="                 shift, and go to state 874
    "*="                 shift, and go to state 875
    "%="                 shift, and go to state 876
    "&="                 shift, and go to state 877
    "|="                 shift, and go to state 878
    "^="                 shift, and go to state 879
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    "<<="                shift, and go to state 880
    ">>="                shift, and go to state 881
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "<-"                 shift, and go to state 882
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    ":="                 shift, and go to state 767
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "<<<="               shift, and go to state 883
    ">>>="               shift, and go to state 884
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    "&&="                shift, and go to state 885
    "||="                shift, and go to state 886
    "^^="                shift, and go to state 887
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1081
    '='                  shift, and go to state 888
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 810

  716 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1082


State 811

  739 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1083


State 812

  742 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1084


State 813

  704 table_type_pair: type_declaration .
  705                | type_declaration . c_or_s type_declaration
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '|'                  shift, and go to state 423

    $default  reduce using rule 704 (table_type_pair)

    c_or_s  go to state 1085


State 814

  717 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 717 (type_declaration_no_options)


State 815

  745 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1086


State 816

  735 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1087


State 817

  692 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 692 (auto_type_declaration)


State 818

  694 bitfield_bits: "name" .

    $default  reduce using rule 694 (bitfield_bits)


State 819

  695 bitfield_bits: bitfield_bits . "end of expression" "name"
  701 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1088
    '>'                  shift, and go to state 1089


State 820

  749 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1090


State 821

  752 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1091


State 822

  756 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1092


State 823

  759 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1093


State 824

  763 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1094


State 825

  766 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1095


State 826

  564 tuple_type_list: tuple_type .

    $default  reduce using rule 564 (tuple_type_list)


State 827

  565 tuple_type_list: tuple_type_list . c_or_s tuple_type
  769 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1096

    c_or_s  go to state 1097


State 828

  570 variant_type_list: variant_type .

    $default  reduce using rule 570 (variant_type_list)


State 829

  571 variant_type_list: variant_type_list . c_or_s variant_type
  772 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1098

    c_or_s  go to state 1099


State 830

  693 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 693 (auto_type_declaration)


State 831

  720 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1100
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1101


State 832

  718 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1102


State 833

  252 optional_expr_list: expr_list . optional_comma
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 956

    ','       [reduce using rule 890 (optional_comma)]
    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 1103


State 834

  721 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 721 (type_declaration_no_options)


State 835

  706 dim_list: '[' expr ']' .

    $default  reduce using rule 706 (dim_list)


State 836

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  707 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ']'    shift, and go to state 1104


State 837

  698 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 698 (bitfield_alias_bits)


State 838

  790 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 790 (bitfield_alias_declaration)


State 839

  563 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1105


State 840

  568 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 568 (tuple_alias_type_list)


State 841

  780 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 780 (tuple_alias_declaration)


State 842

  569 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1106


State 843

  574 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 574 (variant_alias_type_list)


State 844

  785 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 785 (variant_alias_declaration)


State 845

  559 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 559 (function_argument_declaration)


State 846

  651 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1107
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 847

  652 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1108


State 848

  576 copy_or_move: "<-" .

    $default  reduce using rule 576 (copy_or_move)


State 849

  653 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  654                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1109


State 850

  575 copy_or_move: '=' .

    $default  reduce using rule 575 (copy_or_move)


State 851

  579 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  580                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1110


State 852

  578 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 578 (variable_declaration)


State 853

  581 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  582                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1111
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1112
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 854

  838 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1113


State 855

  841 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1114


State 856

   79 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 79 (expression_while_loop)


State 857

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1115
    ','   shift, and go to state 849


State 858

  277 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1116


State 859

  280 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  281         | "new" new_type_declaration '(' . expr_list ')'
  282         | "new" new_type_declaration '(' . make_struct_single ')'
  283         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "uninitialized"                   shift, and go to state 1117
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 923
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 924
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 828 (use_initializer)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1118
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 971
    make_struct_single      go to state 1119
    use_initializer         go to state 1120
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 860

  330 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  331               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  332               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '<'                               shift, and go to state 1121
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1122
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 861

  334 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1123


State 862

  333 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1124
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 863

  329 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1125


State 864

  864 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 862 ($@98)

    $@98  go to state 1126


State 865

  867 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 865 ($@100)

    $@100  go to state 1127


State 866

  870 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    $default  reduce using rule 868 ($@102)

    $@102  go to state 1128


State 867

  874 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1129


State 868

  337 expr_list: expr_list . ',' expr
  871 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 956

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 1130


State 869

  292 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 292 (expression_return)


State 870

  289 expression_return_no_pipe: "return" "<-" expr_list .
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 871

    $default  reduce using rule 289 (expression_return_no_pipe)


State 871

  337 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1131
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 872

  376 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1132
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 873

  377 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1133
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 874

  379 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1134
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 875

  378 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1135
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 876

  380 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1136
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 877

  370 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1137
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 878

  371 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1138
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 879

  372 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1139
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 880

  381 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1140
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 881

  382 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1141
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 882

  368 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1142
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 883

  383 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1143
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 884

  384 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1144
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 885

  373 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1145
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 886

  374 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1146
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 887

  375 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1147
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 888

  367 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1148
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 889

  298 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1149


State 890

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  886 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  887                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 412
    "implicit"           shift, and go to state 413
    "explicit"           shift, and go to state 414
    "=="                 shift, and go to state 415
    "??"                 shift, and go to state 416
    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '?'                  shift, and go to state 417
    '&'                  shift, and go to state 418
    '>'                  shift, and go to state 1150
    '-'                  shift, and go to state 419
    '['                  shift, and go to state 420
    '#'                  shift, and go to state 421

    c_or_s    go to state 1151
    dim_list  go to state 422


State 891

  885 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1152


State 892

  256 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  882 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 951

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 1153


State 893

  274 expression_delete: "delete" "explicit" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 274 (expression_delete)


State 894

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  486     | "deref" '(' expr . ')'
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1154


State 895

   80 expression_with: "with" expr expression_block .

    $default  reduce using rule 80 (expression_with)


State 896

   82 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 81 ($@5)

    $@5  go to state 1155


State 897

  320 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1156


State 898

  323 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1157


State 899

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  487     | "addr" '(' expr . ')'
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1158


State 900

  326 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1159


State 901

   55 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 55 (expression_label)


State 902

   56 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 56 (expression_goto)


State 903

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  518     | "unsafe" '(' expr . ')'
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1160


State 904

  878 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1161


State 905

  337 expr_list: expr_list . ',' expr
  875 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 956

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 1162


State 906

  847 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1163


State 907

  856 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1164


State 908

  337 expr_list: expr_list . ',' expr
  853 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 956

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 1165


State 909

  844 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1166


State 910

  225 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  488 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  489     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1167
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 911

  297 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 297 (expression_yield)


State 912

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  294 expression_yield_no_pipe: "yield" "<-" expr .
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 740
    "as"    shift, and go to state 741
    "+="    shift, and go to state 872
    "-="    shift, and go to state 873
    "/="    shift, and go to state 874
    "*="    shift, and go to state 875
    "%="    shift, and go to state 876
    "&="    shift, and go to state 877
    "|="    shift, and go to state 878
    "^="    shift, and go to state 879
    "<<"    shift, and go to state 750
    ">>"    shift, and go to state 751
    "++"    shift, and go to state 752
    "--"    shift, and go to state 753
    "<="    shift, and go to state 754
    "<<="   shift, and go to state 880
    ">>="   shift, and go to state 881
    ">="    shift, and go to state 757
    "=="    shift, and go to state 758
    "!="    shift, and go to state 759
    "->"    shift, and go to state 760
    "<-"    shift, and go to state 882
    "??"    shift, and go to state 762
    "?."    shift, and go to state 763
    "?["    shift, and go to state 764
    "<|"    shift, and go to state 765
    "|>"    shift, and go to state 766
    ":="    shift, and go to state 767
    "<<<"   shift, and go to state 768
    ">>>"   shift, and go to state 769
    "<<<="  shift, and go to state 883
    ">>>="  shift, and go to state 884
    "&&"    shift, and go to state 772
    "||"    shift, and go to state 773
    "^^"    shift, and go to state 774
    "&&="   shift, and go to state 885
    "||="   shift, and go to state 886
    "^^="   shift, and go to state 887
    ".."    shift, and go to state 778
    '='     shift, and go to state 888
    '?'     shift, and go to state 780
    '|'     shift, and go to state 781
    '^'     shift, and go to state 782
    '&'     shift, and go to state 783
    '<'     shift, and go to state 784
    '>'     shift, and go to state 785
    '-'     shift, and go to state 786
    '+'     shift, and go to state 787
    '*'     shift, and go to state 788
    '/'     shift, and go to state 789
    '%'     shift, and go to state 790
    '.'     shift, and go to state 791
    '['     shift, and go to state 792
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 366 (expr_assign)
    $default  reduce using rule 294 (expression_yield_no_pipe)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 913

  343 block_or_lambda: '@' '@' .

    $default  reduce using rule 343 (block_or_lambda)


State 914

  355 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 977
    "[["       shift, and go to state 978

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1168


State 915

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  520 expr_mtag: "$$" '(' expr . ')'
  528          | expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1169


State 916

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  521 expr_mtag: "$i" '(' expr . ')'
  528          | expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1170


State 917

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  522 expr_mtag: "$v" '(' expr . ')'
  528          | expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1171


State 918

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  523 expr_mtag: "$b" '(' expr . ')'
  528          | expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1172


State 919

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  524 expr_mtag: "$a" '(' expr . ')'
  528          | expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1173


State 920

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  526 expr_mtag: "$c" '(' expr . ')' '(' ')'
  527          | "$c" '(' expr . ')' '(' expr_list ')'
  528          | expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1174


State 921

  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  894 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1175
    ','   shift, and go to state 849


State 922

  815 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1176


State 923

  800 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  801                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1177


State 924

  270 name_in_namespace: "name" .
  271                  | "name" . "::" "name"
  796 make_struct_fields: "name" . copy_or_move expr
  797                   | "name" . ":=" expr

    "<-"  shift, and go to state 848
    ":="  shift, and go to state 1178
    "::"  shift, and go to state 100
    '='   shift, and go to state 850

    $default  reduce using rule 270 (name_in_namespace)

    copy_or_move  go to state 1179


State 925

  449 expr: '-' . expr
  721 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  724                            | type_declaration_no_options '-' . "const"
  726                            | type_declaration_no_options '-' . '&'
  729                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "const"                           shift, and go to state 603
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '&'                               shift, and go to state 604
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1180
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510
    '#'                               shift, and go to state 606

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 711
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 926

  706 dim_list: '[' . expr ']'
  713 type_declaration_no_options: type_declaration_no_options '[' . ']'
  859 make_dim_decl: '[' . expr_list optional_comma ']'
  892 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  893                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 607
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 718
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1181
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 927

  476 expr: '(' . expr_list optional_comma ')'
  832 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  833                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1182
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 928

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  848 make_tuple: expr .
  849           | expr . "=>" expr

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "=>"   shift, and go to state 1183
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 848 (make_tuple)


State 929

  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  806 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1184

    $default  reduce using rule 806 (make_struct_dim)


State 930

  807 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  830 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 922
    "end of expression"  shift, and go to state 1185

    $default  reduce using rule 814 (optional_block)

    optional_block  go to state 1186


State 931

  831 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1187
    ",]]"  shift, and go to state 1188
    ']'    shift, and go to state 1189

    optional_trailing_delim_sqr_sqr  go to state 1190


State 932

  850 make_tuple: make_tuple . ',' expr
  857 make_dim: make_tuple .

    ','  shift, and go to state 1191

    $default  reduce using rule 857 (make_dim)


State 933

  858 make_dim: make_dim . "end of expression" make_tuple
  860 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1192
    ";]]"                shift, and go to state 1193
    ']'                  shift, and go to state 1194

    optional_trailing_semicolon_sqr_sqr  go to state 1195


State 934

  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  895 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1196
    ','   shift, and go to state 849


State 935

  476 expr: '(' . expr_list optional_comma ')'
  835 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1197
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 720
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 936

  807 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  834 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 922
    "end of expression"  shift, and go to state 1185

    $default  reduce using rule 814 (optional_block)

    optional_block  go to state 1198


State 937

  858 make_dim: make_dim . "end of expression" make_tuple
  861 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1199
    "end of expression"  shift, and go to state 1192
    ";}]"                shift, and go to state 1200

    optional_trailing_semicolon_cur_sqr  go to state 1201


State 938

  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  897 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1202
    ','   shift, and go to state 849


State 939

  851 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1203
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 940

  816 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1204


State 941

  880 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1205
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 942

  817 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 817 (optional_trailing_semicolon_cur_cur)


State 943

  884 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 884 (make_table_decl)


State 944

  261 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1206
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1101


State 945

  250 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 250 (expr_keyword)


State 946

  264 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    type_declaration_no_options_list  go to state 1207
    name_in_namespace                 go to state 357
    basic_type_declaration            go to state 358
    structure_type_declaration        go to state 359
    auto_type_declaration             go to state 360
    bitfield_type_declaration         go to state 361
    type_declaration_no_options       go to state 362
    type_declaration                  go to state 1101


State 947

   32 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 32 (string_builder)


State 948

   31 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1208
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 949

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   30 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 227
    STRING_CHARACTER_ESC  shift, and go to state 228

    $default  reduce using rule 30 (string_builder_body)


State 950

  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  896 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1209
    ','   shift, and go to state 849


State 951

  882 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  891 optional_comma: ',' .

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 891 (optional_comma)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1210
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 952

  883 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1211


State 953

  222 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 247 (expressions)

    expressions  go to state 1212


State 954

  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  892 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1213
    ','   shift, and go to state 849


State 955

  893 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_name_with_pos_list  go to state 1214


State 956

  337 expr_list: expr_list ',' . expr
  891 optional_comma: ',' .

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 891 (optional_comma)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1131
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 957

  859 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1215


State 958

  476 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1216


State 959

  411 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1217


State 960

  535 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1218


State 961

  415 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  418               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 416 ($@24)
    '>'       reduce using rule 416 ($@24)
    '('       reduce using rule 416 ($@24)
    $default  reduce using rule 413 ($@22)

    $@22  go to state 1219
    $@24  go to state 1220


State 962

  410 func_addr_name: name_in_namespace .

    $default  reduce using rule 410 (func_addr_name)


State 963

  412 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 412 (func_addr_expr)


State 964

   73 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1221
    "elif"         shift, and go to state 1222
    "static_elif"  shift, and go to state 1223

    $default  reduce using rule 60 (expression_else)

    elif_or_static_elif  go to state 1224
    expression_else      go to state 1225


State 965

   75 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1226
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 966

  358 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 122 (optional_annotation_list)

    optional_annotation_list  go to state 1227


State 967

  430 expr_call: name_in_namespace '(' "uninitialized" . ')'
  432          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228
    ')'     shift, and go to state 1229

    make_struct_fields  go to state 971
    make_struct_single  go to state 1230


State 968

  406 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  859 make_dim_decl: '[' . expr_list optional_comma ']'
  892 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  893                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 923
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 924
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 718
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1231
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 969

  429 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 429 (expr_call)


State 970

  337 expr_list: expr_list . ',' expr
  407 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  433 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1232
    ')'  shift, and go to state 1233


State 971

  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  805 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1184

    $default  reduce using rule 805 (make_struct_single)


State 972

  431 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1234


State 973

  308 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1235

    tuple_expansion  go to state 1236


State 974

  310 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  314                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"
  315                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1235

    tuple_expansion  go to state 1237


State 975

  317 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 317 (expression_let)


State 976

  316 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 316 (expression_let)


State 977

  353 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1238


State 978

  352 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1239
    ":="    shift, and go to state 1240
    "name"  shift, and go to state 1241
    '='     shift, and go to state 1242
    '&'     shift, and go to state 1243

    capture_entry  go to state 1244
    capture_list   go to state 1245


State 979

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 1246


State 980

  265 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 265 (expr_pipe)


State 981

  494 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1247


State 982

  534 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1248


State 983

  496 expr: expr "is" "name" .

    $default  reduce using rule 496 (expr)


State 984

  495 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 495 (expr)


State 985

  500 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1249


State 986

  532 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1250


State 987

  497 expr: expr "as" "name" .

    $default  reduce using rule 497 (expr)


State 988

  501 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 501 (expr)


State 989

  387 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1251


State 990

  385 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1252


State 991

  386 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 291
    '$'                    shift, and go to state 509
    '@'                    shift, and go to state 683

    expression_block  go to state 684
    block_or_lambda   go to state 685
    expr_block        go to state 1253


State 992

  388 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 388 (expr_assign_pipe_right)


State 993

  397 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 397 (expr_assign_pipe)


State 994

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  376 expr_assign: expr "+=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 376 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 995

  398 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 398 (expr_assign_pipe)


State 996

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  377 expr_assign: expr "-=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 377 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 997

  400 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 400 (expr_assign_pipe)


State 998

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr "/=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 379 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 999

  399 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 399 (expr_assign_pipe)


State 1000

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr "*=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 378 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1001

  401 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 401 (expr_assign_pipe)


State 1002

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  380 expr_assign: expr "%=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 380 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1003

  391 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 391 (expr_assign_pipe)


State 1004

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  370 expr_assign: expr "&=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 370 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1005

  392 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 392 (expr_assign_pipe)


State 1006

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr "|=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1007

  393 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 393 (expr_assign_pipe)


State 1008

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  372 expr_assign: expr "^=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 372 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1009

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  450     | expr "<<" expr .
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '-'   shift, and go to state 786
    '+'   shift, and go to state 787
    '*'   shift, and go to state 788
    '/'   shift, and go to state 789
    '%'   shift, and go to state 790
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 450 (expr)


State 1010

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  451     | expr ">>" expr .
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '-'   shift, and go to state 786
    '+'   shift, and go to state 787
    '*'   shift, and go to state 788
    '/'   shift, and go to state 789
    '%'   shift, and go to state 790
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 451 (expr)


State 1011

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  463     | expr "<=" expr .
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 463 (expr)


State 1012

  402 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 402 (expr_assign_pipe)


State 1013

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  381 expr_assign: expr "<<=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 381 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1014

  403 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 403 (expr_assign_pipe)


State 1015

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  382 expr_assign: expr ">>=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 382 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1016

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  464     | expr ">=" expr .
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 464 (expr)


State 1017

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  461     | expr "==" expr .
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 461 (expr)


State 1018

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  462     | expr "!=" expr .
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 462 (expr)


State 1019

  408 expr_method_call: expr "->" "name" . '(' ')'
  409                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1254


State 1020

  390 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 1021

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "<-" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1022

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  490     | expr "??" expr .
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 490 (expr)


State 1023

  529 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1255


State 1024

  481 expr: expr "?." "name" .

    $default  reduce using rule 481 (expr)


State 1025

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  479     | expr "?[" expr . ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ']'    shift, and go to state 1256


State 1026

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  514     | expr "<|" expr .
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 760
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 514 (expr)


State 1027

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  515     | expr "|>" expr .
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 760
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 515 (expr)


State 1028

  434 expr_call: basic_type_declaration . '(' ')'
  435          | basic_type_declaration . '(' expr_list ')'
  516 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 794

    $default  reduce using rule 516 (expr)


State 1029

  369 expr_assign: expr ":=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 369 (expr_assign)


State 1030

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  452     | expr "<<<" expr .
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '-'   shift, and go to state 786
    '+'   shift, and go to state 787
    '*'   shift, and go to state 788
    '/'   shift, and go to state 789
    '%'   shift, and go to state 790
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 452 (expr)


State 1031

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  453     | expr ">>>" expr .
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '-'   shift, and go to state 786
    '+'   shift, and go to state 787
    '*'   shift, and go to state 788
    '/'   shift, and go to state 789
    '%'   shift, and go to state 790
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 453 (expr)


State 1032

  404 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 404 (expr_assign_pipe)


State 1033

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  383 expr_assign: expr "<<<=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 383 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1034

  405 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 405 (expr_assign_pipe)


State 1035

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  384 expr_assign: expr ">>>=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 384 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1036

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  468     | expr "&&" expr .
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 468 (expr)


State 1037

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  469     | expr "||" expr .
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "^^"   shift, and go to state 774
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 469 (expr)


State 1038

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  470     | expr "^^" expr .
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 470 (expr)


State 1039

  394 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 394 (expr_assign_pipe)


State 1040

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  373 expr_assign: expr "&&=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 373 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1041

  395 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 395 (expr_assign_pipe)


State 1042

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  374 expr_assign: expr "||=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 374 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1043

  396 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 396 (expr_assign_pipe)


State 1044

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  375 expr_assign: expr "^^=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 375 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1045

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  471     | expr ".." expr .
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    ".."  error (nonassociative)

    $default  reduce using rule 471 (expr)


State 1046

  389 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 1047

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr '=' expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    '$'    shift, and go to state 509
    '@'    shift, and go to state 683

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1048

  502 expr: expr '?' "as" . "name"
  505     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  506     | expr '?' "as" . basic_type_declaration
  533 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1257
    "bool"      shift, and go to state 322
    "void"      shift, and go to state 323
    "string"    shift, and go to state 324
    "int"       shift, and go to state 326
    "int2"      shift, and go to state 327
    "int3"      shift, and go to state 328
    "int4"      shift, and go to state 329
    "uint"      shift, and go to state 330
    "bitfield"  shift, and go to state 469
    "uint2"     shift, and go to state 332
    "uint3"     shift, and go to state 333
    "uint4"     shift, and go to state 334
    "float"     shift, and go to state 335
    "float2"    shift, and go to state 336
    "float3"    shift, and go to state 337
    "float4"    shift, and go to state 338
    "range"     shift, and go to state 339
    "urange"    shift, and go to state 340
    "range64"   shift, and go to state 341
    "urange64"  shift, and go to state 342
    "int64"     shift, and go to state 344
    "uint64"    shift, and go to state 345
    "double"    shift, and go to state 346
    "int8"      shift, and go to state 349
    "uint8"     shift, and go to state 350
    "int16"     shift, and go to state 351
    "uint16"    shift, and go to state 352
    "$f"        shift, and go to state 1258
    "name"      shift, and go to state 1259

    basic_type_declaration  go to state 1260


State 1049

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  491     | expr '?' expr . ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    ':'    shift, and go to state 1261
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792


State 1050

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  466     | expr '|' expr .
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 466 (expr)


State 1051

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  467     | expr '^' expr .
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 467 (expr)


State 1052

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  465     | expr '&' expr .
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 465 (expr)


State 1053

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  459     | expr '<' expr .
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 459 (expr)


State 1054

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  460     | expr '>' expr .
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 460 (expr)


State 1055

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  455     | expr '-' expr .
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '*'   shift, and go to state 788
    '/'   shift, and go to state 789
    '%'   shift, and go to state 790
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 455 (expr)


State 1056

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  454     | expr '+' expr .
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '*'   shift, and go to state 788
    '/'   shift, and go to state 789
    '%'   shift, and go to state 790
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 454 (expr)


State 1057

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  456     | expr '*' expr .
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 456 (expr)


State 1058

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  457     | expr '/' expr .
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 457 (expr)


State 1059

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  458     | expr '%' expr .
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 740
    "as"  shift, and go to state 741
    "++"  shift, and go to state 752
    "--"  shift, and go to state 753
    "->"  shift, and go to state 760
    "??"  shift, and go to state 762
    "?."  shift, and go to state 763
    "?["  shift, and go to state 764
    "<|"  shift, and go to state 765
    "|>"  shift, and go to state 766
    '.'   shift, and go to state 791
    '['   shift, and go to state 792

    $default  reduce using rule 458 (expr)


State 1060

  482 expr: expr '.' "?." . "name"
  531 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1262
    "name"  shift, and go to state 1263


State 1061

  480 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1264
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1062

  528 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1265


State 1063

  419 expr_field: expr '.' "name" .
  421           | expr '.' "name" . '(' ')'
  422           | expr '.' "name" . '(' expr_list ')'
  423           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1266

    '('       [reduce using rule 419 (expr_field)]
    $default  reduce using rule 419 (expr_field)


State 1064

  420 expr_field: expr '.' '.' . "name"
  530 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1267
    "name"  shift, and go to state 1268


State 1065

  478 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1269
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1066

  428 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1270


State 1067

  424 expr_field: expr '.' basic_type_declaration . '(' ')'
  425           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1271


State 1068

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  477     | expr '[' expr . ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ']'    shift, and go to state 1272


State 1069

  434 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 434 (expr_call)


State 1070

  337 expr_list: expr_list . ',' expr
  435 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 1273


State 1071

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  612 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1274
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792


State 1072

  632 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1275


State 1073

  121 annotation_list: annotation_list . ',' annotation_declaration
  123 optional_annotation_list: '[' annotation_list . ']'
  557 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 109
    ']'  shift, and go to state 1276


State 1074

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  556                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1277
    "private"  shift, and go to state 1278

    $default  reduce using rule 544 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1279


State 1075

  549 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1280

    $default  reduce using rule 547 (optional_static_member_variable)

    optional_static_member_variable  go to state 1281


State 1076

  552 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1282


State 1077

  488 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  489     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1283
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1078

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 592 (let_variable_name_with_pos_list)


State 1079

  595 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 595 (let_variable_declaration)


State 1080

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  594 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "+="                 shift, and go to state 872
    "-="                 shift, and go to state 873
    "/="                 shift, and go to state 874
    "*="                 shift, and go to state 875
    "%="                 shift, and go to state 876
    "&="                 shift, and go to state 877
    "|="                 shift, and go to state 878
    "^="                 shift, and go to state 879
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    "<<="                shift, and go to state 880
    ">>="                shift, and go to state 881
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "<-"                 shift, and go to state 882
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    ":="                 shift, and go to state 767
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "<<<="               shift, and go to state 883
    ">>>="               shift, and go to state 884
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    "&&="                shift, and go to state 885
    "||="                shift, and go to state 886
    "^^="                shift, and go to state 887
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1284
    '='                  shift, and go to state 888
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1081

  596 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 596 (let_variable_declaration)


State 1082

  716 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 715 ($@50)

    $@50  go to state 1285


State 1083

  739 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 738 ($@55)

    $@55  go to state 1286


State 1084

  742 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 741 ($@57)

    $@57  go to state 1287


State 1085

  705 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1288


State 1086

  745 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 744 ($@59)

    $@59  go to state 1289


State 1087

  735 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 734 ($@53)

    $@53  go to state 1290


State 1088

  695 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1291


State 1089

  701 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 700 ($@48)

    $@48  go to state 1292


State 1090

  749 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 748 ($@61)

    $@61  go to state 1293


State 1091

  752 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1294


State 1092

  756 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 755 ($@65)

    $@65  go to state 1295


State 1093

  759 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1296


State 1094

  763 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 762 ($@69)

    $@69  go to state 1297


State 1095

  766 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1298


State 1096

  769 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 768 ($@73)

    $@73  go to state 1299


State 1097

  565 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 615
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    tuple_type                   go to state 1300
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 620


State 1098

  772 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 771 ($@75)

    $@75  go to state 1301


State 1099

  571 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 622

    variant_type  go to state 1302


State 1100

  258 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  720 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1303

    c_or_s  go to state 1304


State 1101

  257 type_declaration_no_options_list: type_declaration .
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 257 (type_declaration_no_options_list)


State 1102

  718 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 718 (type_declaration_no_options)


State 1103

  252 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 252 (optional_expr_list)


State 1104

  707 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 707 (dim_list)


State 1105

  563 tuple_type: "name" ':' type_declaration .
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 563 (tuple_type)


State 1106

  569 variant_type: "name" ':' type_declaration .
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 569 (variant_type)


State 1107

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  651 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1305


State 1108

  652 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 652 (variable_name_with_pos_list)


State 1109

  653 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  654                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1306

    $default  reduce using rule 653 (variable_name_with_pos_list)


State 1110

  579 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  580                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 848
    '='   shift, and go to state 850
    '|'   shift, and go to state 423

    $default  reduce using rule 579 (variable_declaration)

    copy_or_move  go to state 1307


State 1111

  582 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 582 (variable_declaration)


State 1112

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  581 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 740
    "as"    shift, and go to state 741
    "+="    shift, and go to state 872
    "-="    shift, and go to state 873
    "/="    shift, and go to state 874
    "*="    shift, and go to state 875
    "%="    shift, and go to state 876
    "&="    shift, and go to state 877
    "|="    shift, and go to state 878
    "^="    shift, and go to state 879
    "<<"    shift, and go to state 750
    ">>"    shift, and go to state 751
    "++"    shift, and go to state 752
    "--"    shift, and go to state 753
    "<="    shift, and go to state 754
    "<<="   shift, and go to state 880
    ">>="   shift, and go to state 881
    ">="    shift, and go to state 757
    "=="    shift, and go to state 758
    "!="    shift, and go to state 759
    "->"    shift, and go to state 760
    "<-"    shift, and go to state 882
    "??"    shift, and go to state 762
    "?."    shift, and go to state 763
    "?["    shift, and go to state 764
    "<|"    shift, and go to state 765
    "|>"    shift, and go to state 766
    ":="    shift, and go to state 767
    "<<<"   shift, and go to state 768
    ">>>"   shift, and go to state 769
    "<<<="  shift, and go to state 883
    ">>>="  shift, and go to state 884
    "&&"    shift, and go to state 772
    "||"    shift, and go to state 773
    "^^"    shift, and go to state 774
    "&&="   shift, and go to state 885
    "||="   shift, and go to state 886
    "^^="   shift, and go to state 887
    ".."    shift, and go to state 778
    '='     shift, and go to state 888
    '?'     shift, and go to state 780
    '|'     shift, and go to state 781
    '^'     shift, and go to state 782
    '&'     shift, and go to state 783
    '<'     shift, and go to state 784
    '>'     shift, and go to state 785
    '-'     shift, and go to state 786
    '+'     shift, and go to state 787
    '*'     shift, and go to state 788
    '/'     shift, and go to state 789
    '%'     shift, and go to state 790
    '.'     shift, and go to state 791
    '['     shift, and go to state 792
    '$'     shift, and go to state 509
    '@'     shift, and go to state 683

    " <|"     reduce using rule 366 (expr_assign)
    $default  reduce using rule 581 (variable_declaration)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1113

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  838 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1308
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1114

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  841 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1309
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1115

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1310
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1116

  277 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1311


State 1117

  283 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  829 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228

    $default  reduce using rule 829 (use_initializer)

    make_struct_fields  go to state 971
    make_struct_single  go to state 1312


State 1118

  281 expr_new: "new" new_type_declaration '(' expr_list . ')'
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 871
    ')'  shift, and go to state 1313


State 1119

  282 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1314


State 1120

  280 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1315


State 1121

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  332               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1316


State 1122

  330 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1317


State 1123

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1318
    '>'                  shift, and go to state 1319


State 1124

  333 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1320


State 1125

  329 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1321


State 1126

  864 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1322


State 1127

  867 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1323


State 1128

  870 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1324


State 1129

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  874 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' optional_expr_list ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1325
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1130

  871 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1326


State 1131

  337 expr_list: expr_list ',' expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 337 (expr_list)


State 1132

  376 expr_assign: expr "+=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 376 (expr_assign)


State 1133

  377 expr_assign: expr "-=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 377 (expr_assign)


State 1134

  379 expr_assign: expr "/=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 379 (expr_assign)


State 1135

  378 expr_assign: expr "*=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 378 (expr_assign)


State 1136

  380 expr_assign: expr "%=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 380 (expr_assign)


State 1137

  370 expr_assign: expr "&=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 370 (expr_assign)


State 1138

  371 expr_assign: expr "|=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 371 (expr_assign)


State 1139

  372 expr_assign: expr "^=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 372 (expr_assign)


State 1140

  381 expr_assign: expr "<<=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 381 (expr_assign)


State 1141

  382 expr_assign: expr ">>=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 382 (expr_assign)


State 1142

  368 expr_assign: expr "<-" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 368 (expr_assign)


State 1143

  383 expr_assign: expr "<<<=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 383 (expr_assign)


State 1144

  384 expr_assign: expr ">>>=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 384 (expr_assign)


State 1145

  373 expr_assign: expr "&&=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 373 (expr_assign)


State 1146

  374 expr_assign: expr "||=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 374 (expr_assign)


State 1147

  375 expr_assign: expr "^^=" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 375 (expr_assign)


State 1148

  367 expr_assign: expr '=' expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 367 (expr_assign)


State 1149

  298 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 298 (expression_try_catch)


State 1150

  886 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1327


State 1151

  887 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1328


State 1152

  885 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 885 (make_table_decl)


State 1153

  256 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 256 (optional_expr_map_tuple_list)


State 1154

  486 expr: "deref" '(' expr ')' .

    $default  reduce using rule 486 (expr)


State 1155

   82 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1329
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1156

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1330
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1157

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1331
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1158

  487 expr: "addr" '(' expr ')' .

    $default  reduce using rule 487 (expr)


State 1159

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1332
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1160

  518 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 518 (expr)


State 1161

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  878 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1333
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1162

  875 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1334


State 1163

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  847 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1335
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1164

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  856 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1336
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1165

  853 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1337


State 1166

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  844 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_variant_dim ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1338
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1167

  225 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  488 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  489     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 977
    "[["       shift, and go to state 978

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1339


State 1168

  355 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 1340


State 1169

  520 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 520 (expr_mtag)


State 1170

  521 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 521 (expr_mtag)


State 1171

  522 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 522 (expr_mtag)


State 1172

  523 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 523 (expr_mtag)


State 1173

  524 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 524 (expr_mtag)


State 1174

  526 expr_mtag: "$c" '(' expr ')' . '(' ')'
  527          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1341


State 1175

  894 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1342
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1176

  815 optional_block: "where" expr_block .

    $default  reduce using rule 815 (optional_block)


State 1177

  800 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  801                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1343
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1178

  797 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1344
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1179

  796 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1345
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1180

  721 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  859 make_dim_decl: '[' . expr_list optional_comma ']'
  892 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  893                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    ']'                               shift, and go to state 834
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 718
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1181

  336 expr_list: expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  706 dim_list: '[' expr . ']'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ']'    shift, and go to state 835

    ']'       [reduce using rule 336 (expr_list)]
    $default  reduce using rule 336 (expr_list)


State 1182

  832 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  833                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 922
    "$f"     shift, and go to state 923
    "name"   shift, and go to state 1228

    $default  reduce using rule 814 (optional_block)

    make_struct_fields  go to state 929
    make_struct_dim     go to state 1346
    optional_block      go to state 1347


State 1183

  849 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1348
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1184

  798 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  799                   | make_struct_fields ',' . "name" ":=" expr
  802                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1349
    "name"  shift, and go to state 1350


State 1185

  807 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228

    make_struct_fields  go to state 1351


State 1186

  830 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1187
    ",]]"  shift, and go to state 1188
    ']'    shift, and go to state 1189

    optional_trailing_delim_sqr_sqr  go to state 1352


State 1187

  823 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 823 (optional_trailing_delim_sqr_sqr)


State 1188

  824 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 824 (optional_trailing_delim_sqr_sqr)


State 1189

  822 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1353


State 1190

  831 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 831 (make_struct_decl)


State 1191

  850 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1354
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1192

  858 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 928
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple              go to state 1355
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1193

  821 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 821 (optional_trailing_semicolon_sqr_sqr)


State 1194

  820 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1356


State 1195

  860 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 860 (make_dim_decl)


State 1196

  895 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1357
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1197

  835 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228

    make_struct_fields  go to state 929
    make_struct_dim     go to state 1358


State 1198

  834 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1359
    ";}]"                shift, and go to state 1360
    ",}]"                shift, and go to state 1361

    optional_trailing_delim_cur_sqr  go to state 1362


State 1199

  818 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1363


State 1200

  819 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 819 (optional_trailing_semicolon_cur_sqr)


State 1201

  861 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 861 (make_dim_decl)


State 1202

  897 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1364
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1203

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  851 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 851 (make_map_tuple)


State 1204

  816 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 816 (optional_trailing_semicolon_cur_cur)


State 1205

  880 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 880 (make_table)


State 1206

  258 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1365

    c_or_s  go to state 1304


State 1207

  258 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1366

    c_or_s  go to state 1304


State 1208

   31 string_builder_body: string_builder_body "{" expr . "}"
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    "}"    shift, and go to state 1367
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792


State 1209

  896 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1368
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1210

  882 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 882 (expr_map_tuple_list)


State 1211

  883 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 883 (make_table_decl)


State 1212

  222 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 436
    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 439
    "if"                              shift, and go to state 440
    "static_if"                       shift, and go to state 441
    "for"                             shift, and go to state 442
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 449
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "try"                             shift, and go to state 452
    "table"                           shift, and go to state 453
    "delete"                          shift, and go to state 454
    "deref"                           shift, and go to state 455
    "with"                            shift, and go to state 456
    "assume"                          shift, and go to state 457
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "pass"                            shift, and go to state 462
    "reinterpret"                     shift, and go to state 463
    "label"                           shift, and go to state 464
    "goto"                            shift, and go to state 465
    "unsafe"                          shift, and go to state 466
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "yield"                           shift, and go to state 473
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 496
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    "end of code block"               shift, and go to state 1369
    "end of expression"               shift, and go to state 501
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_label           go to state 513
    expression_goto            go to state 514
    if_or_static_if            go to state 515
    expression_if_one_liner    go to state 516
    expression_if_then_else    go to state 517
    expression_for_loop        go to state 518
    expression_unsafe          go to state 519
    expression_while_loop      go to state 520
    expression_with            go to state 521
    expression_with_alias      go to state 522
    expr_call_pipe             go to state 523
    expression_any             go to state 524
    expr_keyword               go to state 525
    expression_keyword         go to state 526
    expr_pipe                  go to state 527
    name_in_namespace          go to state 528
    expression_delete          go to state 529
    expr_new                   go to state 530
    expression_break           go to state 531
    expression_continue        go to state 532
    expression_return_no_pipe  go to state 533
    expression_return          go to state 534
    expression_yield_no_pipe   go to state 535
    expression_yield           go to state 536
    expression_try_catch       go to state 537
    kwd_let                    go to state 538
    expression_let             go to state 539
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_assign                go to state 546
    expr_assign_pipe           go to state 547
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 553
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 1213

  892 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1370
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1214

  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  893 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1371
    ','   shift, and go to state 849


State 1215

  859 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 859 (make_dim_decl)


State 1216

  476 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 476 (expr)


State 1217

  411 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1372
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1218

  535 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1373
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1219

  415 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1374


State 1220

  418 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 1375


State 1221

   61 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1376


State 1222

   58 elif_or_static_elif: "elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1223

   59 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 59 (elif_or_static_elif)


State 1224

   62 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1377
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1225

   73 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 73 (expression_if_then_else)


State 1226

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1378
    "is"    shift, and go to state 740
    "as"    shift, and go to state 741
    "<<"    shift, and go to state 750
    ">>"    shift, and go to state 751
    "++"    shift, and go to state 752
    "--"    shift, and go to state 753
    "<="    shift, and go to state 754
    ">="    shift, and go to state 757
    "=="    shift, and go to state 758
    "!="    shift, and go to state 759
    "->"    shift, and go to state 760
    "??"    shift, and go to state 762
    "?."    shift, and go to state 763
    "?["    shift, and go to state 764
    "<|"    shift, and go to state 765
    "|>"    shift, and go to state 766
    "<<<"   shift, and go to state 768
    ">>>"   shift, and go to state 769
    "&&"    shift, and go to state 772
    "||"    shift, and go to state 773
    "^^"    shift, and go to state 774
    ".."    shift, and go to state 778
    '?'     shift, and go to state 780
    '|'     shift, and go to state 781
    '^'     shift, and go to state 782
    '&'     shift, and go to state 783
    '<'     shift, and go to state 784
    '>'     shift, and go to state 785
    '-'     shift, and go to state 786
    '+'     shift, and go to state 787
    '*'     shift, and go to state 788
    '/'     shift, and go to state 789
    '%'     shift, and go to state 790
    '.'     shift, and go to state 791
    '['     shift, and go to state 792

    $default  reduce using rule 65 (expression_else_one_liner)

    expression_else_one_liner  go to state 1379


State 1227

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 977
    "[["       shift, and go to state 978

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1380


State 1228

  796 make_struct_fields: "name" . copy_or_move expr
  797                   | "name" . ":=" expr

    "<-"  shift, and go to state 848
    ":="  shift, and go to state 1178
    '='   shift, and go to state 850

    copy_or_move  go to state 1179


State 1229

  430 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 430 (expr_call)


State 1230

  432 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1381


State 1231

  406 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1184
    ']'  shift, and go to state 1382


State 1232

  337 expr_list: expr_list ',' . expr
  407 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1383
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1131
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1233

  433 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 433 (expr_call)


State 1234

  431 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 431 (expr_call)


State 1235

  306 tuple_expansion: "name" .

    $default  reduce using rule 306 (tuple_expansion)


State 1236

  307 tuple_expansion: tuple_expansion . ',' "name"
  308 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1384
    ']'  shift, and go to state 1385


State 1237

  307 tuple_expansion: tuple_expansion . ',' "name"
  310 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  314                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"
  315                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1384
    ')'  shift, and go to state 1386


State 1238

  353 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1239
    ":="    shift, and go to state 1240
    "name"  shift, and go to state 1241
    '='     shift, and go to state 1242
    '&'     shift, and go to state 1243

    capture_entry  go to state 1244
    capture_list   go to state 1387


State 1239

  346 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1388


State 1240

  347 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1389


State 1241

  348 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1390


State 1242

  345 capture_entry: '=' . "name"

    "name"  shift, and go to state 1391


State 1243

  344 capture_entry: '&' . "name"

    "name"  shift, and go to state 1392


State 1244

  349 capture_list: capture_entry .

    $default  reduce using rule 349 (capture_list)


State 1245

  350 capture_list: capture_list . ',' capture_entry
  352 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1393
    ']'  shift, and go to state 1394


State 1246

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1395


State 1247

  494 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 492 ($@28)

    $@28  go to state 1396


State 1248

  534 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1397
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1249

  500 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 498 ($@30)

    $@30  go to state 1398


State 1250

  532 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1399
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1251

  387 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 387 (expr_assign_pipe_right)


State 1252

  385 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 385 (expr_assign_pipe_right)


State 1253

  386 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 386 (expr_assign_pipe_right)


State 1254

  408 expr_method_call: expr "->" "name" '(' . ')'
  409                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1400
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1401
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1255

  529 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1402
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1256

  479 expr: expr "?[" expr ']' .

    $default  reduce using rule 479 (expr)


State 1257

  505 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1403


State 1258

  533 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1404


State 1259

  502 expr: expr '?' "as" "name" .

    $default  reduce using rule 502 (expr)


State 1260

  506 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 506 (expr)


State 1261

  491 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1405
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1262

  531 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1406


State 1263

  482 expr: expr '.' "?." "name" .

    $default  reduce using rule 482 (expr)


State 1264

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  480     | expr '.' "?[" expr . ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ']'    shift, and go to state 1407


State 1265

  528 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1408
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1266

  421 expr_field: expr '.' "name" '(' . ')'
  422           | expr '.' "name" '(' . expr_list ')'
  423           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 1409
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1410
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1411
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1267

  530 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1412


State 1268

  420 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 420 (expr_field)


State 1269

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  478     | expr '.' '[' expr . ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ']'    shift, and go to state 1413


State 1270

  428 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 427 ($@27)

    $@27  go to state 1414


State 1271

  424 expr_field: expr '.' basic_type_declaration '(' . ')'
  425           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1415
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1416
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1272

  477 expr: expr '[' expr ']' .

    $default  reduce using rule 477 (expr)


State 1273

  435 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 435 (expr_call)


State 1274

  612 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 612 (enum_list)


State 1275

  632 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 632 (enum_declaration)


State 1276

  123 optional_annotation_list: '[' annotation_list ']' .
  557 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1417

    $default  reduce using rule 123 (optional_annotation_list)


State 1277

  545 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 545 (optional_public_or_private_member_variable)


State 1278

  546 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 546 (optional_public_or_private_member_variable)


State 1279

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  556                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1418
    "static"    shift, and go to state 1280

    $default  reduce using rule 547 (optional_static_member_variable)

    optional_static_member_variable  go to state 1419


State 1280

  548 optional_static_member_variable: "static" .

    $default  reduce using rule 548 (optional_static_member_variable)


State 1281

  549 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1420
    "sealed"    shift, and go to state 1421

    $default  reduce using rule 539 (optional_override)

    optional_override  go to state 1422


State 1282

  552 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 552 (struct_variable_declaration_list)


State 1283

  488 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  489     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 977
    "[["       shift, and go to state 978

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1423


State 1284

  594 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 594 (let_variable_declaration)


State 1285

  716 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 716 (type_declaration_no_options)


State 1286

  739 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 739 (type_declaration_no_options)


State 1287

  742 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 742 (type_declaration_no_options)


State 1288

  705 table_type_pair: type_declaration c_or_s type_declaration .
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 705 (table_type_pair)


State 1289

  745 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 745 (type_declaration_no_options)


State 1290

  735 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 735 (type_declaration_no_options)


State 1291

  695 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 695 (bitfield_bits)


State 1292

  701 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 701 (bitfield_type_declaration)


State 1293

  749 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 749 (type_declaration_no_options)


State 1294

  752 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 751 ($@63)

    $@63  go to state 1424


State 1295

  756 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 756 (type_declaration_no_options)


State 1296

  759 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 758 ($@67)

    $@67  go to state 1425


State 1297

  763 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 763 (type_declaration_no_options)


State 1298

  766 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 765 ($@71)

    $@71  go to state 1426


State 1299

  769 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 769 (type_declaration_no_options)


State 1300

  565 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 565 (tuple_type_list)


State 1301

  772 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 772 (type_declaration_no_options)


State 1302

  571 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 571 (variant_type_list)


State 1303

  720 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1427


State 1304

  258 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1428


State 1305

  651 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 651 (variable_name_with_pos_list)


State 1306

  654 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1429


State 1307

  580 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1430
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1308

  838 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 837 ($@89)

    $@89  go to state 1431


State 1309

  841 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 840 ($@91)

    $@91  go to state 1432


State 1310

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  337 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 291
    ','                    shift, and go to state 871

    expression_block  go to state 1433


State 1311

  277 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 276 ($@12)

    $@12  go to state 1434


State 1312

  283 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1435


State 1313

  281 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 281 (expr_new)


State 1314

  282 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 282 (expr_new)


State 1315

  280 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 280 (expr_new)


State 1316

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  332               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of expression"  shift, and go to state 616
    ','                  shift, and go to state 617
    '>'                  shift, and go to state 1436

    c_or_s  go to state 1437


State 1317

  330 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 330 (expr_type_info)


State 1318

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1438


State 1319

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1439


State 1320

  333 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 333 (expr_type_info)


State 1321

  329 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 328 ($@20)

    $@20  go to state 1440


State 1322

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  864 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1441
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1323

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  867 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1442
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1324

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  870 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_variant_dim ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1443
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1325

  874 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' optional_expr_list ')'

    $default  reduce using rule 873 ($@105)

    $@105  go to state 1444


State 1326

  871 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 871 (make_dim_decl)


State 1327

  886 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 255 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 1445
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 708
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 892
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 1328

  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"
  887 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1446
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1329

   82 expression_with_alias: "assume" "name" '=' $@5 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 82 (expression_with_alias)


State 1330

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 319 ($@14)

    $@14  go to state 1447


State 1331

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 322 ($@16)

    $@16  go to state 1448


State 1332

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 325 ($@18)

    $@18  go to state 1449


State 1333

  878 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 877 ($@107)

    $@107  go to state 1450


State 1334

  875 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 875 (make_dim_decl)


State 1335

  847 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 846 ($@95)

    $@95  go to state 1451


State 1336

  856 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 855 ($@97)

    $@97  go to state 1452


State 1337

  853 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 853 (make_tuple_call)


State 1338

  844 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_variant_dim ')'

    $default  reduce using rule 843 ($@93)

    $@93  go to state 1453


State 1339

  225 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  488 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  489     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1454
    '$'  shift, and go to state 509
    '@'  shift, and go to state 683

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 1455


State 1340

  355 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1456


State 1341

  526 expr_mtag: "$c" '(' expr ')' '(' . ')'
  527          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1457
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1458
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1342

  337 expr_list: expr_list . ',' expr
  894 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1459
    ','                  shift, and go to state 871


State 1343

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  800 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  801                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1460


State 1344

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  797 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 797 (make_struct_fields)


State 1345

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  796 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 796 (make_struct_fields)


State 1346

  807 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  833 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 922
    "end of expression"  shift, and go to state 1185

    $default  reduce using rule 814 (optional_block)

    optional_block  go to state 1461


State 1347

  832 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1187
    ",]]"  shift, and go to state 1188
    ']'    shift, and go to state 1189

    optional_trailing_delim_sqr_sqr  go to state 1462


State 1348

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  849 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 849 (make_tuple)


State 1349

  802 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  803                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1463


State 1350

  798 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  799                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 848
    ":="  shift, and go to state 1464
    '='   shift, and go to state 850

    copy_or_move  go to state 1465


State 1351

  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  807 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1184

    $default  reduce using rule 807 (make_struct_dim)


State 1352

  830 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 830 (make_struct_decl)


State 1353

  822 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 822 (optional_trailing_delim_sqr_sqr)


State 1354

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  850 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 850 (make_tuple)


State 1355

  850 make_tuple: make_tuple . ',' expr
  858 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1191

    $default  reduce using rule 858 (make_dim)


State 1356

  820 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 820 (optional_trailing_semicolon_sqr_sqr)


State 1357

  337 expr_list: expr_list . ',' expr
  895 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1466
    ','                  shift, and go to state 871


State 1358

  807 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  835 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 922
    "end of expression"  shift, and go to state 1185

    $default  reduce using rule 814 (optional_block)

    optional_block  go to state 1467


State 1359

  825 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1468


State 1360

  826 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 826 (optional_trailing_delim_cur_sqr)


State 1361

  827 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 827 (optional_trailing_delim_cur_sqr)


State 1362

  834 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 834 (make_struct_decl)


State 1363

  818 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 818 (optional_trailing_semicolon_cur_sqr)


State 1364

  337 expr_list: expr_list . ',' expr
  897 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1469
    ','                  shift, and go to state 871


State 1365

  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 260 ($@8)

    $@8  go to state 1470


State 1366

  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 263 ($@10)

    $@10  go to state 1471


State 1367

   31 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 31 (string_builder_body)


State 1368

  337 expr_list: expr_list . ',' expr
  896 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1472
    ','                  shift, and go to state 871


State 1369

  222 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 222 (expression_block)


State 1370

  337 expr_list: expr_list . ',' expr
  892 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1473
    ','                  shift, and go to state 871


State 1371

  893 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1474
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1372

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  411 func_addr_name: "$i" '(' expr . ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1475


State 1373

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  535          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1476


State 1374

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1477
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1375

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1478


State 1376

   61 expression_else: "else" expression_block .

    $default  reduce using rule 61 (expression_else)


State 1377

   62 expression_else: elif_or_static_elif expr . expression_block expression_else
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 740
    "as"                   shift, and go to state 741
    "<<"                   shift, and go to state 750
    ">>"                   shift, and go to state 751
    "++"                   shift, and go to state 752
    "--"                   shift, and go to state 753
    "<="                   shift, and go to state 754
    ">="                   shift, and go to state 757
    "=="                   shift, and go to state 758
    "!="                   shift, and go to state 759
    "->"                   shift, and go to state 760
    "??"                   shift, and go to state 762
    "?."                   shift, and go to state 763
    "?["                   shift, and go to state 764
    "<|"                   shift, and go to state 765
    "|>"                   shift, and go to state 766
    "<<<"                  shift, and go to state 768
    ">>>"                  shift, and go to state 769
    "&&"                   shift, and go to state 772
    "||"                   shift, and go to state 773
    "^^"                   shift, and go to state 774
    ".."                   shift, and go to state 778
    "begin of code block"  shift, and go to state 291
    '?'                    shift, and go to state 780
    '|'                    shift, and go to state 781
    '^'                    shift, and go to state 782
    '&'                    shift, and go to state 783
    '<'                    shift, and go to state 784
    '>'                    shift, and go to state 785
    '-'                    shift, and go to state 786
    '+'                    shift, and go to state 787
    '*'                    shift, and go to state 788
    '/'                    shift, and go to state 789
    '%'                    shift, and go to state 790
    '.'                    shift, and go to state 791
    '['                    shift, and go to state 792

    expression_block  go to state 1479


State 1378

   67 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 66 ($@2)

    $@2  go to state 1480


State 1379

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1481


State 1380

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 289

    $default  reduce using rule 124 (optional_function_argument_list)

    optional_function_argument_list  go to state 1482


State 1381

  432 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 432 (expr_call)


State 1382

  406 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1483


State 1383

  407 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  859 make_dim_decl: '[' . expr_list optional_comma ']'
  892 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  893                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 923
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 924
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 718
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1484
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1384

  307 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1485


State 1385

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1486


State 1386

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  314                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"
  315                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1487
    '&'  shift, and go to state 395

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 1488


State 1387

  350 capture_list: capture_list . ',' capture_entry
  353 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1393
    ')'  shift, and go to state 1489


State 1388

  346 capture_entry: "<-" "name" .

    $default  reduce using rule 346 (capture_entry)


State 1389

  347 capture_entry: ":=" "name" .

    $default  reduce using rule 347 (capture_entry)


State 1390

  348 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1490


State 1391

  345 capture_entry: '=' "name" .

    $default  reduce using rule 345 (capture_entry)


State 1392

  344 capture_entry: '&' "name" .

    $default  reduce using rule 344 (capture_entry)


State 1393

  350 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1239
    ":="    shift, and go to state 1240
    "name"  shift, and go to state 1241
    '='     shift, and go to state 1242
    '&'     shift, and go to state 1243

    capture_entry  go to state 1491


State 1394

  352 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1492


State 1395

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1493
    "begin of code block"  shift, and go to state 291

    expression_block       go to state 1494
    block_or_simple_block  go to state 1495


State 1396

  494 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1496


State 1397

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  534          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1497


State 1398

  500 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1498


State 1399

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  532          | expr "as" "$f" '(' expr . ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1499


State 1400

  408 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 408 (expr_method_call)


State 1401

  337 expr_list: expr_list . ',' expr
  409 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 1500


State 1402

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  529          | expr "?." "$f" '(' expr . ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1501


State 1403

  505 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 503 ($@32)

    $@32  go to state 1502


State 1404

  533 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1503
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1405

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  491     | expr '?' expr ':' expr .
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 491 (expr)


State 1406

  531 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1504
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1407

  480 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 480 (expr)


State 1408

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  528          | expr '.' "$f" '(' expr . ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1505


State 1409

  423 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  859 make_dim_decl: '[' . expr_list optional_comma ']'
  892 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  893                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "for"                             shift, and go to state 716
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "iterator"                        shift, and go to state 717
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "$f"                              shift, and go to state 923
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 924
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 718
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_fields      go to state 1506
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1410

  421 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 421 (expr_field)


State 1411

  337 expr_list: expr_list . ',' expr
  422 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 1507


State 1412

  530 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1508
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1413

  478 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 478 (expr)


State 1414

  428 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 428 (expr_field)


State 1415

  424 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 424 (expr_field)


State 1416

  337 expr_list: expr_list . ',' expr
  425 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 1509


State 1417

  557 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 557 (struct_variable_declaration_list)


State 1418

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1510

    $default  reduce using rule 542 (optional_constant)

    optional_constant  go to state 1511


State 1419

  556 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1420
    "sealed"    shift, and go to state 1421

    $default  reduce using rule 539 (optional_override)

    optional_override  go to state 1512


State 1420

  540 optional_override: "override" .

    $default  reduce using rule 540 (optional_override)


State 1421

  541 optional_override: "sealed" .

    $default  reduce using rule 541 (optional_override)


State 1422

  549 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1277
    "private"  shift, and go to state 1278

    $default  reduce using rule 544 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1513


State 1423

  488 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  489     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1454


State 1424

  752 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 752 (type_declaration_no_options)


State 1425

  759 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 759 (type_declaration_no_options)


State 1426

  766 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 766 (type_declaration_no_options)


State 1427

  720 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1514
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 833
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1428

  258 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423

    $default  reduce using rule 258 (type_declaration_no_options_list)


State 1429

  654 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 654 (variable_name_with_pos_list)


State 1430

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  580 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 580 (variable_declaration)


State 1431

  838 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1515


State 1432

  841 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1516


State 1433

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 77 (expression_for_loop)


State 1434

  277 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 277 (new_type_declaration)


State 1435

  283 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 283 (expr_new)


State 1436

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1517
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1437

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1518


State 1438

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1519


State 1439

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1520
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1440

  329 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 329 (expr_type_decl)


State 1441

  864 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 863 ($@99)

    $@99  go to state 1521


State 1442

  867 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 866 ($@101)

    $@101  go to state 1522


State 1443

  870 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_variant_dim ')'

    $default  reduce using rule 869 ($@103)

    $@103  go to state 1523


State 1444

  874 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' optional_expr_list ')'

    '('  shift, and go to state 1524


State 1445

  886 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1525


State 1446

  887 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1526


State 1447

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1527
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1448

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1528
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1449

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1529
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1450

  878 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1530


State 1451

  847 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1531

    $default  reduce using rule 828 (use_initializer)

    use_initializer  go to state 1532


State 1452

  856 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1533


State 1453

  844 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_variant_dim ')'

    '('  shift, and go to state 1534


State 1454

  488 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  489     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    ')'                               shift, and go to state 1535
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1536
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1455

  225 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 225 (expr_call_pipe)


State 1456

  355 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1493
    "begin of code block"  shift, and go to state 291

    expression_block       go to state 1494
    block_or_simple_block  go to state 1537


State 1457

  526 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 526 (expr_mtag)


State 1458

  337 expr_list: expr_list . ',' expr
  527 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 871
    ')'  shift, and go to state 1538


State 1459

  894 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1539
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1460

  800 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  801                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 848
    ":="  shift, and go to state 1540
    '='   shift, and go to state 850

    copy_or_move  go to state 1541


State 1461

  833 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1187
    ",]]"  shift, and go to state 1188
    ']'    shift, and go to state 1189

    optional_trailing_delim_sqr_sqr  go to state 1542


State 1462

  832 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 832 (make_struct_decl)


State 1463

  802 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  803                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1543
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1464

  799 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1544
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1465

  798 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1545
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1466

  895 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1546
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1467

  835 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1359
    ";}]"                shift, and go to state 1360
    ",}]"                shift, and go to state 1361

    optional_trailing_delim_cur_sqr  go to state 1547


State 1468

  825 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 825 (optional_trailing_delim_cur_sqr)


State 1469

  897 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1548
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1470

  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1549
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1471

  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1550

    '('       [reduce using rule 253 (optional_expr_list_in_braces)]
    $default  reduce using rule 253 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1551


State 1472

  896 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 700
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_map_tuple          go to state 1552
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1473

  892 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1553
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1474

  337 expr_list: expr_list . ',' expr
  893 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1554
    ','                  shift, and go to state 871


State 1475

  411 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 411 (func_addr_name)


State 1476

  535 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 535 (expr_mtag)


State 1477

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 414 ($@23)

    $@23  go to state 1555


State 1478

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1556


State 1479

   62 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1221
    "elif"         shift, and go to state 1222
    "static_elif"  shift, and go to state 1223

    $default  reduce using rule 60 (expression_else)

    elif_or_static_elif  go to state 1224
    expression_else      go to state 1557


State 1480

   67 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "return"                          shift, and go to state 1558
    "null"                            shift, and go to state 450
    "break"                           shift, and go to state 451
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "continue"                        shift, and go to state 461
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "yield"                           shift, and go to state 1559
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder             go to state 511
    expr_reader                go to state 512
    expression_if_one_liner    go to state 1560
    expression_keyword         go to state 573
    name_in_namespace          go to state 528
    expr_new                   go to state 530
    expression_break           go to state 1561
    expression_continue        go to state 1562
    expression_return_no_pipe  go to state 1563
    expression_yield_no_pipe   go to state 1564
    expr_cast                  go to state 540
    expr_type_decl             go to state 541
    expr_type_info             go to state 542
    block_or_lambda            go to state 543
    expr_full_block            go to state 544
    expr_numeric_const         go to state 545
    expr_named_call            go to state 548
    expr_method_call           go to state 549
    func_addr_expr             go to state 550
    expr_field                 go to state 551
    expr_call                  go to state 552
    expr                       go to state 1565
    expr_mtag                  go to state 554
    basic_type_declaration     go to state 555
    make_decl                  go to state 556
    make_struct_decl           go to state 557
    make_tuple_call            go to state 558
    make_dim_decl              go to state 559
    make_table_decl            go to state 560
    array_comprehension        go to state 561


State 1481

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 75 (expression_if_then_else)


State 1482

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 379

    $default  reduce using rule 127 (optional_function_type)

    optional_function_type  go to state 1566


State 1483

  406 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 406 (expr_named_call)


State 1484

  407 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1184
    ']'  shift, and go to state 1567


State 1485

  307 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 307 (tuple_expansion)


State 1486

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  312                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1568
    '&'  shift, and go to state 395

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 1569


State 1487

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1570


State 1488

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"
  315                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 1571


State 1489

  353 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 353 (optional_capture_list)


State 1490

  348 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1572


State 1491

  350 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 350 (capture_list)


State 1492

  352 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 352 (optional_capture_list)


State 1493

  339 block_or_simple_block: "=>" . expr
  340                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1573
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1574
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1494

  338 block_or_simple_block: expression_block .

    $default  reduce using rule 338 (block_or_simple_block)


State 1495

  356 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 356 (expr_full_block)


State 1496

  494 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "??"        shift, and go to state 416
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '>'         shift, and go to state 1575
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    dim_list  go to state 422


State 1497

  534 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 534 (expr_mtag)


State 1498

  500 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1576


State 1499

  532 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 532 (expr_mtag)


State 1500

  409 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 409 (expr_method_call)


State 1501

  529 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 529 (expr_mtag)


State 1502

  505 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 362
    type_declaration             go to state 1577


State 1503

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  533          | expr '?' "as" "$f" '(' expr . ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1578


State 1504

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  531          | expr '.' "?." "$f" '(' expr . ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1579


State 1505

  528 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 528 (expr_mtag)


State 1506

  423 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1184
    ']'  shift, and go to state 1580


State 1507

  422 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 422 (expr_field)


State 1508

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  530          | expr '.' '.' "$f" '(' expr . ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1581


State 1509

  425 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 425 (expr_field)


State 1510

  543 optional_constant: "const" .

    $default  reduce using rule 543 (optional_constant)


State 1511

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 553 ($@35)

    $@35  go to state 1582


State 1512

  556 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1510

    $default  reduce using rule 542 (optional_constant)

    optional_constant  go to state 1583


State 1513

  549 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 627
    "name"  shift, and go to state 628

    variable_declaration         go to state 1584
    variable_name_with_pos_list  go to state 630


State 1514

  720 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1585


State 1515

  838 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1531

    $default  reduce using rule 828 (use_initializer)

    use_initializer  go to state 1586


State 1516

  841 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1531

    $default  reduce using rule 828 (use_initializer)

    use_initializer  go to state 1587


State 1517

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1588


State 1518

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1589


State 1519

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1590


State 1520

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1591


State 1521

  864 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1592


State 1522

  867 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1593


State 1523

  870 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_variant_dim ')'

    '('  shift, and go to state 1594


State 1524

  874 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1595
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 833
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1525

  886 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 886 (make_table_decl)


State 1526

  887 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 255 (optional_expr_map_tuple_list)

    string_builder                go to state 511
    expr_reader                   go to state 512
    optional_expr_map_tuple_list  go to state 1596
    expression_keyword            go to state 573
    name_in_namespace             go to state 528
    expr_new                      go to state 530
    expr_cast                     go to state 540
    expr_type_decl                go to state 541
    expr_type_info                go to state 542
    block_or_lambda               go to state 543
    expr_full_block               go to state 544
    expr_numeric_const            go to state 545
    expr_named_call               go to state 548
    expr_method_call              go to state 549
    func_addr_expr                go to state 550
    expr_field                    go to state 551
    expr_call                     go to state 552
    expr                          go to state 700
    expr_mtag                     go to state 554
    basic_type_declaration        go to state 555
    make_decl                     go to state 556
    make_struct_decl              go to state 557
    make_map_tuple                go to state 708
    make_tuple_call               go to state 558
    make_dim_decl                 go to state 559
    expr_map_tuple_list           go to state 892
    make_table_decl               go to state 560
    array_comprehension           go to state 561


State 1527

  320 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 320 (expr_cast)


State 1528

  323 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 323 (expr_cast)


State 1529

  326 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 326 (expr_cast)


State 1530

  878 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 1597
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1531

  829 use_initializer: "uninitialized" .

    $default  reduce using rule 829 (use_initializer)


State 1532

  847 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 847 (make_struct_decl)


State 1533

  856 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1531

    $default  reduce using rule 828 (use_initializer)

    use_initializer  go to state 1598


State 1534

  844 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228

    make_struct_fields  go to state 1599
    make_variant_dim    go to state 1600


State 1535

  488 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 488 (expr)


State 1536

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  489     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1601


State 1537

  355 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 355 (expr_block)


State 1538

  527 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 527 (expr_mtag)


State 1539

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  894 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1602
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792

    $default  reduce using rule 888 (array_comprehension_where)

    array_comprehension_where  go to state 1603


State 1540

  801 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1604
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1541

  800 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1605
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1542

  833 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 833 (make_struct_decl)


State 1543

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  802 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  803                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1606


State 1544

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  799 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 799 (make_struct_fields)


State 1545

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  798 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 798 (make_struct_fields)


State 1546

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  895 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1602
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792

    $default  reduce using rule 888 (array_comprehension_where)

    array_comprehension_where  go to state 1607


State 1547

  835 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 835 (make_struct_decl)


State 1548

  897 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1602

    $default  reduce using rule 888 (array_comprehension_where)

    array_comprehension_where  go to state 1608


State 1549

  261 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 261 (expression_keyword)


State 1550

  254 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 251 (optional_expr_list)

    string_builder          go to state 511
    expr_reader             go to state 512
    optional_expr_list      go to state 1609
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 833
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1551

  264 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 264 (expression_keyword)


State 1552

  896 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1602

    $default  reduce using rule 888 (array_comprehension_where)

    array_comprehension_where  go to state 1610


State 1553

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  892 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1602
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792

    $default  reduce using rule 888 (array_comprehension_where)

    array_comprehension_where  go to state 1611


State 1554

  893 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1612
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1555

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 959
    "name"  shift, and go to state 59

    name_in_namespace  go to state 962
    func_addr_name     go to state 1613


State 1556

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 417 ($@25)

    $@25  go to state 1614


State 1557

   62 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 62 (expression_else)


State 1558

  287 expression_return_no_pipe: "return" .
  288                          | "return" . expr_list
  289                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1615
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    $default  reduce using rule 287 (expression_return_no_pipe)

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 650
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1559

  293 expression_yield_no_pipe: "yield" . expr
  294                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "<-"                              shift, and go to state 1616
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1617
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1560

   67 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 67 (expression_else_one_liner)


State 1561

   71 expression_if_one_liner: expression_break .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1562

   72 expression_if_one_liner: expression_continue .

    $default  reduce using rule 72 (expression_if_one_liner)


State 1563

   69 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1564

   70 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1565

   68 expression_if_one_liner: expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 68 (expression_if_one_liner)


State 1566

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1618


State 1567

  407 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1619


State 1568

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 316
    "array"      shift, and go to state 317
    "table"      shift, and go to state 318
    "typedecl"   shift, and go to state 319
    "iterator"   shift, and go to state 320
    "smart_ptr"  shift, and go to state 321
    "bool"       shift, and go to state 322
    "void"       shift, and go to state 323
    "string"     shift, and go to state 324
    "auto"       shift, and go to state 325
    "int"        shift, and go to state 326
    "int2"       shift, and go to state 327
    "int3"       shift, and go to state 328
    "int4"       shift, and go to state 329
    "uint"       shift, and go to state 330
    "bitfield"   shift, and go to state 331
    "uint2"      shift, and go to state 332
    "uint3"      shift, and go to state 333
    "uint4"      shift, and go to state 334
    "float"      shift, and go to state 335
    "float2"     shift, and go to state 336
    "float3"     shift, and go to state 337
    "float4"     shift, and go to state 338
    "range"      shift, and go to state 339
    "urange"     shift, and go to state 340
    "range64"    shift, and go to state 341
    "urange64"   shift, and go to state 342
    "block"      shift, and go to state 343
    "int64"      shift, and go to state 344
    "uint64"     shift, and go to state 345
    "double"     shift, and go to state 346
    "function"   shift, and go to state 347
    "lambda"     shift, and go to state 348
    "int8"       shift, and go to state 349
    "uint8"      shift, and go to state 350
    "int16"      shift, and go to state 351
    "uint16"     shift, and go to state 352
    "tuple"      shift, and go to state 353
    "variant"    shift, and go to state 354
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 355
    "name"       shift, and go to state 59
    '$'          shift, and go to state 356

    name_in_namespace            go to state 357
    basic_type_declaration       go to state 358
    structure_type_declaration   go to state 359
    auto_type_declaration        go to state 360
    bitfield_type_declaration    go to state 361
    type_declaration_no_options  go to state 1620


State 1569

  312 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"
  313                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 1621


State 1570

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  311                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "<-"        shift, and go to state 578
    "??"        shift, and go to state 416
    ":="        shift, and go to state 579
    '='         shift, and go to state 580
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    copy_or_move_or_clone  go to state 1622
    dim_list               go to state 422


State 1571

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"
  315                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1623
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1624
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1572

  348 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 348 (capture_entry)


State 1573

  340 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1625
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1574

  339 block_or_simple_block: "=>" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    ".."  error (nonassociative)

    $default  reduce using rule 339 (block_or_simple_block)


State 1575

  494 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 493 ($@29)

    $@29  go to state 1626


State 1576

  500 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 499 ($@31)

    $@31  go to state 1627


State 1577

  505 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  774 type_declaration: type_declaration . '|' type_declaration_no_options
  775                 | type_declaration . '|' '#'

    '|'  shift, and go to state 423
    '>'  shift, and go to state 1628


State 1578

  533 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 533 (expr_mtag)


State 1579

  531 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 531 (expr_mtag)


State 1580

  423 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1629


State 1581

  530 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 530 (expr_mtag)


State 1582

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1630


State 1583

  556 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 555 ($@36)

    $@36  go to state 1631


State 1584

  549 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 549 (structure_variable_declaration)


State 1585

  720 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 720 (type_declaration_no_options)


State 1586

  838 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228
    '('     shift, and go to state 1632

    $default  reduce using rule 813 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1633
    make_struct_dim_list           go to state 1634
    make_struct_dim_decl           go to state 1635
    optional_make_struct_dim_decl  go to state 1636


State 1587

  841 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228
    '('     shift, and go to state 1632

    $default  reduce using rule 813 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1633
    make_struct_dim_list           go to state 1634
    make_struct_dim_decl           go to state 1635
    optional_make_struct_dim_decl  go to state 1637


State 1588

  331 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 331 (expr_type_info)


State 1589

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1638
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1590

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1639
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1591

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 334 (expr_type_info)


State 1592

  864 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1531

    $default  reduce using rule 828 (use_initializer)

    use_initializer  go to state 1640


State 1593

  867 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1531

    $default  reduce using rule 828 (use_initializer)

    use_initializer  go to state 1641


State 1594

  870 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228

    make_struct_fields  go to state 1599
    make_variant_dim    go to state 1642


State 1595

  874 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1643


State 1596

  887 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1644


State 1597

  337 expr_list: expr_list . ',' expr
  878 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 956

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 1645


State 1598

  856 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228
    '('     shift, and go to state 1632

    $default  reduce using rule 813 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1633
    make_struct_dim_list           go to state 1634
    make_struct_dim_decl           go to state 1635
    optional_make_struct_dim_decl  go to state 1646


State 1599

  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  804 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1184

    $default  reduce using rule 804 (make_variant_dim)


State 1600

  844 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1647


State 1601

  489 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 489 (expr)


State 1602

  889 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1648


State 1603

  894 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1649


State 1604

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  801 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 801 (make_struct_fields)


State 1605

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  800 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 800 (make_struct_fields)


State 1606

  802 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  803                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 848
    ":="  shift, and go to state 1650
    '='   shift, and go to state 850

    copy_or_move  go to state 1651


State 1607

  895 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1652


State 1608

  897 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1653


State 1609

  254 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1654

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 1655


State 1610

  896 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1656


State 1611

  892 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1657


State 1612

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  893 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1602
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792

    $default  reduce using rule 888 (array_comprehension_where)

    array_comprehension_where  go to state 1658


State 1613

  415 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 415 (func_addr_expr)


State 1614

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 959
    "name"  shift, and go to state 59

    name_in_namespace  go to state 962
    func_addr_name     go to state 1659


State 1615

  289 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    expr_list               go to state 870
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 719
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1616

  294 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1660
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1617

  293 expression_yield_no_pipe: "yield" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 293 (expression_yield_no_pipe)


State 1618

  358 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 358 (expr_full_block_assumed_piped)


State 1619

  407 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 407 (expr_named_call)


State 1620

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  712 type_declaration_no_options: type_declaration_no_options . dim_list
  713                            | type_declaration_no_options . '[' ']'
  721                            | type_declaration_no_options . '-' '[' ']'
  722                            | type_declaration_no_options . "explicit"
  723                            | type_declaration_no_options . "const"
  724                            | type_declaration_no_options . '-' "const"
  725                            | type_declaration_no_options . '&'
  726                            | type_declaration_no_options . '-' '&'
  727                            | type_declaration_no_options . '#'
  728                            | type_declaration_no_options . "implicit"
  729                            | type_declaration_no_options . '-' '#'
  730                            | type_declaration_no_options . "==" "const"
  731                            | type_declaration_no_options . "==" '&'
  732                            | type_declaration_no_options . '?'
  736                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 412
    "implicit"  shift, and go to state 413
    "explicit"  shift, and go to state 414
    "=="        shift, and go to state 415
    "<-"        shift, and go to state 578
    "??"        shift, and go to state 416
    ":="        shift, and go to state 579
    '='         shift, and go to state 580
    '?'         shift, and go to state 417
    '&'         shift, and go to state 418
    '-'         shift, and go to state 419
    '['         shift, and go to state 420
    '#'         shift, and go to state 421

    copy_or_move_or_clone  go to state 1661
    dim_list               go to state 422


State 1621

  312 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"
  313                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1662
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1663
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1622

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  311                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1664
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1665
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1623

  315 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 315 (tuple_expansion_variable_declaration)


State 1624

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "+="                 shift, and go to state 872
    "-="                 shift, and go to state 873
    "/="                 shift, and go to state 874
    "*="                 shift, and go to state 875
    "%="                 shift, and go to state 876
    "&="                 shift, and go to state 877
    "|="                 shift, and go to state 878
    "^="                 shift, and go to state 879
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    "<<="                shift, and go to state 880
    ">>="                shift, and go to state 881
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "<-"                 shift, and go to state 882
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    ":="                 shift, and go to state 767
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "<<<="               shift, and go to state 883
    ">>>="               shift, and go to state 884
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    "&&="                shift, and go to state 885
    "||="                shift, and go to state 886
    "^^="                shift, and go to state 887
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1666
    '='                  shift, and go to state 888
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1625

  340 block_or_simple_block: "=>" "<-" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 340 (block_or_simple_block)


State 1626

  494 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 494 (expr)


State 1627

  500 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 500 (expr)


State 1628

  505 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 504 ($@33)

    $@33  go to state 1667


State 1629

  423 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 423 (expr_field)


State 1630

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1668


State 1631

  556 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 186
    "bool"      shift, and go to state 187
    "string"    shift, and go to state 188
    "int"       shift, and go to state 189
    "int2"      shift, and go to state 190
    "int3"      shift, and go to state 191
    "int4"      shift, and go to state 192
    "uint"      shift, and go to state 193
    "uint2"     shift, and go to state 194
    "uint3"     shift, and go to state 195
    "uint4"     shift, and go to state 196
    "float"     shift, and go to state 197
    "float2"    shift, and go to state 198
    "float3"    shift, and go to state 199
    "float4"    shift, and go to state 200
    "range"     shift, and go to state 201
    "urange"    shift, and go to state 202
    "range64"   shift, and go to state 203
    "urange64"  shift, and go to state 204
    "int64"     shift, and go to state 205
    "uint64"    shift, and go to state 206
    "double"    shift, and go to state 207
    "int8"      shift, and go to state 208
    "uint8"     shift, and go to state 209
    "int16"     shift, and go to state 210
    "uint16"    shift, and go to state 211
    "++"        shift, and go to state 212
    "--"        shift, and go to state 213
    "name"      shift, and go to state 214

    function_name                go to state 215
    function_declaration_header  go to state 1669


State 1632

  808 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228

    make_struct_fields  go to state 1670


State 1633

  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  810 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1184

    $default  reduce using rule 810 (make_struct_dim_decl)


State 1634

  809 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  811 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1671

    $default  reduce using rule 890 (optional_comma)

    optional_comma  go to state 1672


State 1635

  812 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 812 (optional_make_struct_dim_decl)


State 1636

  838 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1673


State 1637

  841 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1674


State 1638

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1675


State 1639

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792
    ')'    shift, and go to state 1676


State 1640

  864 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228
    '('     shift, and go to state 1632

    $default  reduce using rule 813 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1633
    make_struct_dim_list           go to state 1634
    make_struct_dim_decl           go to state 1635
    optional_make_struct_dim_decl  go to state 1677


State 1641

  867 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228
    '('     shift, and go to state 1632

    $default  reduce using rule 813 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1633
    make_struct_dim_list           go to state 1634
    make_struct_dim_decl           go to state 1635
    optional_make_struct_dim_decl  go to state 1678


State 1642

  870 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1679


State 1643

  874 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')' .

    $default  reduce using rule 874 (make_dim_decl)


State 1644

  887 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 887 (make_table_decl)


State 1645

  878 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1680


State 1646

  856 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1681


State 1647

  844 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')' .

    $default  reduce using rule 844 (make_struct_decl)


State 1648

  889 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1682
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1649

  894 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1683


State 1650

  803 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1684
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1651

  802 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 571
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expression_keyword      go to state 573
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1685
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1652

  895 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1686


State 1653

  897 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1687


State 1654

  891 optional_comma: ',' .

    $default  reduce using rule 891 (optional_comma)


State 1655

  254 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1688


State 1656

  896 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 896 (array_comprehension)


State 1657

  892 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 892 (array_comprehension)


State 1658

  893 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1689


State 1659

  418 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 418 (func_addr_expr)


State 1660

  294 expression_yield_no_pipe: "yield" "<-" expr .
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 294 (expression_yield_no_pipe)


State 1661

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 437
    "class"                           shift, and go to state 438
    "true"                            shift, and go to state 443
    "false"                           shift, and go to state 444
    "new"                             shift, and go to state 445
    "typeinfo"                        shift, and go to state 446
    "type"                            shift, and go to state 447
    "array"                           shift, and go to state 448
    "null"                            shift, and go to state 450
    "table"                           shift, and go to state 453
    "deref"                           shift, and go to state 455
    "cast"                            shift, and go to state 458
    "upcast"                          shift, and go to state 459
    "addr"                            shift, and go to state 460
    "reinterpret"                     shift, and go to state 463
    "unsafe"                          shift, and go to state 570
    "fixed_array"                     shift, and go to state 467
    "default"                         shift, and go to state 468
    "bool"                            shift, and go to state 322
    "void"                            shift, and go to state 323
    "string"                          shift, and go to state 324
    "int"                             shift, and go to state 326
    "int2"                            shift, and go to state 327
    "int3"                            shift, and go to state 328
    "int4"                            shift, and go to state 329
    "uint"                            shift, and go to state 330
    "bitfield"                        shift, and go to state 469
    "uint2"                           shift, and go to state 332
    "uint3"                           shift, and go to state 333
    "uint4"                           shift, and go to state 334
    "float"                           shift, and go to state 335
    "float2"                          shift, and go to state 336
    "float3"                          shift, and go to state 337
    "float4"                          shift, and go to state 338
    "range"                           shift, and go to state 339
    "urange"                          shift, and go to state 340
    "range64"                         shift, and go to state 341
    "urange64"                        shift, and go to state 342
    "int64"                           shift, and go to state 344
    "uint64"                          shift, and go to state 345
    "double"                          shift, and go to state 346
    "int8"                            shift, and go to state 349
    "uint8"                           shift, and go to state 350
    "int16"                           shift, and go to state 351
    "uint16"                          shift, and go to state 352
    "tuple"                           shift, and go to state 470
    "variant"                         shift, and go to state 471
    "generator"                       shift, and go to state 472
    "++"                              shift, and go to state 474
    "--"                              shift, and go to state 475
    "$ <|"                            shift, and go to state 476
    "@ <|"                            shift, and go to state 477
    "@@ <|"                           shift, and go to state 478
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 479
    "$i"                              shift, and go to state 480
    "$v"                              shift, and go to state 481
    "$b"                              shift, and go to state 482
    "$a"                              shift, and go to state 483
    "$c"                              shift, and go to state 484
    "..."                             shift, and go to state 485
    "[["                              shift, and go to state 486
    "[{"                              shift, and go to state 487
    "{{"                              shift, and go to state 488
    "integer constant"                shift, and go to state 489
    "long integer constant"           shift, and go to state 490
    "unsigned integer constant"       shift, and go to state 491
    "unsigned long integer constant"  shift, and go to state 492
    "unsigned int8 constant"          shift, and go to state 493
    "floating point constant"         shift, and go to state 494
    "double constant"                 shift, and go to state 495
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 572
    "type function"                   shift, and go to state 497
    "start of the string"             shift, and go to state 498
    "begin of code block"             shift, and go to state 499
    '-'                               shift, and go to state 502
    '+'                               shift, and go to state 503
    '*'                               shift, and go to state 504
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 505
    '!'                               shift, and go to state 506
    '['                               shift, and go to state 507
    '('                               shift, and go to state 508
    '$'                               shift, and go to state 509
    '@'                               shift, and go to state 510

    string_builder          go to state 511
    expr_reader             go to state 512
    expr_call_pipe          go to state 523
    expression_keyword      go to state 526
    expr_pipe               go to state 1690
    name_in_namespace       go to state 528
    expr_new                go to state 530
    expr_cast               go to state 540
    expr_type_decl          go to state 541
    expr_type_info          go to state 542
    block_or_lambda         go to state 543
    expr_full_block         go to state 544
    expr_numeric_const      go to state 545
    expr_assign             go to state 651
    expr_named_call         go to state 548
    expr_method_call        go to state 549
    func_addr_expr          go to state 550
    expr_field              go to state 551
    expr_call               go to state 552
    expr                    go to state 1691
    expr_mtag               go to state 554
    basic_type_declaration  go to state 555
    make_decl               go to state 556
    make_struct_decl        go to state 557
    make_tuple_call         go to state 558
    make_dim_decl           go to state 559
    make_table_decl         go to state 560
    array_comprehension     go to state 561


State 1662

  313 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 313 (tuple_expansion_variable_declaration)


State 1663

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  312 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "+="                 shift, and go to state 872
    "-="                 shift, and go to state 873
    "/="                 shift, and go to state 874
    "*="                 shift, and go to state 875
    "%="                 shift, and go to state 876
    "&="                 shift, and go to state 877
    "|="                 shift, and go to state 878
    "^="                 shift, and go to state 879
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    "<<="                shift, and go to state 880
    ">>="                shift, and go to state 881
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "<-"                 shift, and go to state 882
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    ":="                 shift, and go to state 767
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "<<<="               shift, and go to state 883
    ">>>="               shift, and go to state 884
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    "&&="                shift, and go to state 885
    "||="                shift, and go to state 886
    "^^="                shift, and go to state 887
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1692
    '='                  shift, and go to state 888
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1664

  311 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 311 (tuple_expansion_variable_declaration)


State 1665

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "+="                 shift, and go to state 872
    "-="                 shift, and go to state 873
    "/="                 shift, and go to state 874
    "*="                 shift, and go to state 875
    "%="                 shift, and go to state 876
    "&="                 shift, and go to state 877
    "|="                 shift, and go to state 878
    "^="                 shift, and go to state 879
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    "<<="                shift, and go to state 880
    ">>="                shift, and go to state 881
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "<-"                 shift, and go to state 882
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    ":="                 shift, and go to state 767
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "<<<="               shift, and go to state 883
    ">>>="               shift, and go to state 884
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    "&&="                shift, and go to state 885
    "||="                shift, and go to state 886
    "^^="                shift, and go to state 887
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1693
    '='                  shift, and go to state 888
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1666

  314 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 314 (tuple_expansion_variable_declaration)


State 1667

  505 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 505 (expr)


State 1668

  554 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 554 (struct_variable_declaration_list)


State 1669

  556 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 291

    expression_block  go to state 1694


State 1670

  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  808 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1184
    ')'  shift, and go to state 1695


State 1671

  809 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  891 optional_comma: ',' .

    '('  shift, and go to state 1696

    $default  reduce using rule 891 (optional_comma)


State 1672

  811 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 811 (make_struct_dim_decl)


State 1673

  838 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 838 (make_struct_decl)


State 1674

  841 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 841 (make_struct_decl)


State 1675

  332 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 332 (expr_type_info)


State 1676

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 335 (expr_type_info)


State 1677

  864 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1697


State 1678

  867 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1698


State 1679

  870 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')' .

    $default  reduce using rule 870 (make_dim_decl)


State 1680

  878 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 878 (make_dim_decl)


State 1681

  856 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 856 (make_tuple_call)


State 1682

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  889 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 889 (array_comprehension_where)


State 1683

  894 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 894 (array_comprehension)


State 1684

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  803 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 803 (make_struct_fields)


State 1685

  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'
  802 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 740
    "as"   shift, and go to state 741
    "<<"   shift, and go to state 750
    ">>"   shift, and go to state 751
    "++"   shift, and go to state 752
    "--"   shift, and go to state 753
    "<="   shift, and go to state 754
    ">="   shift, and go to state 757
    "=="   shift, and go to state 758
    "!="   shift, and go to state 759
    "->"   shift, and go to state 760
    "??"   shift, and go to state 762
    "?."   shift, and go to state 763
    "?["   shift, and go to state 764
    "<|"   shift, and go to state 765
    "|>"   shift, and go to state 766
    "<<<"  shift, and go to state 768
    ">>>"  shift, and go to state 769
    "&&"   shift, and go to state 772
    "||"   shift, and go to state 773
    "^^"   shift, and go to state 774
    ".."   shift, and go to state 778
    '?'    shift, and go to state 780
    '|'    shift, and go to state 781
    '^'    shift, and go to state 782
    '&'    shift, and go to state 783
    '<'    shift, and go to state 784
    '>'    shift, and go to state 785
    '-'    shift, and go to state 786
    '+'    shift, and go to state 787
    '*'    shift, and go to state 788
    '/'    shift, and go to state 789
    '%'    shift, and go to state 790
    '.'    shift, and go to state 791
    '['    shift, and go to state 792

    $default  reduce using rule 802 (make_struct_fields)


State 1686

  895 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 895 (array_comprehension)


State 1687

  897 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 897 (array_comprehension)


State 1688

  254 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 254 (optional_expr_list_in_braces)


State 1689

  893 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 893 (array_comprehension)


State 1690

  309 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 309 (tuple_expansion_variable_declaration)


State 1691

  223 expr_call_pipe: expr . expr_full_block_assumed_piped
  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  366 expr_assign: expr .
  367            | expr . '=' expr
  368            | expr . "<-" expr
  369            | expr . ":=" expr
  370            | expr . "&=" expr
  371            | expr . "|=" expr
  372            | expr . "^=" expr
  373            | expr . "&&=" expr
  374            | expr . "||=" expr
  375            | expr . "^^=" expr
  376            | expr . "+=" expr
  377            | expr . "-=" expr
  378            | expr . "*=" expr
  379            | expr . "/=" expr
  380            | expr . "%=" expr
  381            | expr . "<<=" expr
  382            | expr . ">>=" expr
  383            | expr . "<<<=" expr
  384            | expr . ">>>=" expr
  408 expr_method_call: expr . "->" "name" '(' ')'
  409                 | expr . "->" "name" '(' expr_list ')'
  419 expr_field: expr . '.' "name"
  420           | expr . '.' '.' "name"
  421           | expr . '.' "name" '(' ')'
  422           | expr . '.' "name" '(' expr_list ')'
  423           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  424           | expr . '.' basic_type_declaration '(' ')'
  425           | expr . '.' basic_type_declaration '(' expr_list ')'
  428           | expr . '.' $@26 error $@27
  450 expr: expr . "<<" expr
  451     | expr . ">>" expr
  452     | expr . "<<<" expr
  453     | expr . ">>>" expr
  454     | expr . '+' expr
  455     | expr . '-' expr
  456     | expr . '*' expr
  457     | expr . '/' expr
  458     | expr . '%' expr
  459     | expr . '<' expr
  460     | expr . '>' expr
  461     | expr . "==" expr
  462     | expr . "!=" expr
  463     | expr . "<=" expr
  464     | expr . ">=" expr
  465     | expr . '&' expr
  466     | expr . '|' expr
  467     | expr . '^' expr
  468     | expr . "&&" expr
  469     | expr . "||" expr
  470     | expr . "^^" expr
  471     | expr . ".." expr
  474     | expr . "++"
  475     | expr . "--"
  477     | expr . '[' expr ']'
  478     | expr . '.' '[' expr ']'
  479     | expr . "?[" expr ']'
  480     | expr . '.' "?[" expr ']'
  481     | expr . "?." "name"
  482     | expr . '.' "?." "name"
  490     | expr . "??" expr
  491     | expr . '?' expr ':' expr
  494     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  495     | expr . "is" basic_type_declaration
  496     | expr . "is" "name"
  497     | expr . "as" "name"
  500     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  501     | expr . "as" basic_type_declaration
  502     | expr . '?' "as" "name"
  505     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  506     | expr . '?' "as" basic_type_declaration
  514     | expr . "<|" expr
  515     | expr . "|>" expr
  516     | expr . "|>" basic_type_declaration
  528 expr_mtag: expr . '.' "$f" '(' expr ')'
  529          | expr . "?." "$f" '(' expr ')'
  530          | expr . '.' '.' "$f" '(' expr ')'
  531          | expr . '.' "?." "$f" '(' expr ')'
  532          | expr . "as" "$f" '(' expr ')'
  533          | expr . '?' "as" "$f" '(' expr ')'
  534          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 740
    "as"                 shift, and go to state 741
    "+="                 shift, and go to state 872
    "-="                 shift, and go to state 873
    "/="                 shift, and go to state 874
    "*="                 shift, and go to state 875
    "%="                 shift, and go to state 876
    "&="                 shift, and go to state 877
    "|="                 shift, and go to state 878
    "^="                 shift, and go to state 879
    "<<"                 shift, and go to state 750
    ">>"                 shift, and go to state 751
    "++"                 shift, and go to state 752
    "--"                 shift, and go to state 753
    "<="                 shift, and go to state 754
    "<<="                shift, and go to state 880
    ">>="                shift, and go to state 881
    ">="                 shift, and go to state 757
    "=="                 shift, and go to state 758
    "!="                 shift, and go to state 759
    "->"                 shift, and go to state 760
    "<-"                 shift, and go to state 882
    "??"                 shift, and go to state 762
    "?."                 shift, and go to state 763
    "?["                 shift, and go to state 764
    "<|"                 shift, and go to state 765
    "|>"                 shift, and go to state 766
    ":="                 shift, and go to state 767
    "<<<"                shift, and go to state 768
    ">>>"                shift, and go to state 769
    "<<<="               shift, and go to state 883
    ">>>="               shift, and go to state 884
    "&&"                 shift, and go to state 772
    "||"                 shift, and go to state 773
    "^^"                 shift, and go to state 774
    "&&="                shift, and go to state 885
    "||="                shift, and go to state 886
    "^^="                shift, and go to state 887
    ".."                 shift, and go to state 778
    "end of expression"  shift, and go to state 1699
    '='                  shift, and go to state 888
    '?'                  shift, and go to state 780
    '|'                  shift, and go to state 781
    '^'                  shift, and go to state 782
    '&'                  shift, and go to state 783
    '<'                  shift, and go to state 784
    '>'                  shift, and go to state 785
    '-'                  shift, and go to state 786
    '+'                  shift, and go to state 787
    '*'                  shift, and go to state 788
    '/'                  shift, and go to state 789
    '%'                  shift, and go to state 790
    '.'                  shift, and go to state 791
    '['                  shift, and go to state 792
    '$'                  shift, and go to state 509
    '@'                  shift, and go to state 683

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 726
    expr_full_block_assumed_piped  go to state 793


State 1692

  312 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 312 (tuple_expansion_variable_declaration)


State 1693

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 310 (tuple_expansion_variable_declaration)


State 1694

  556 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 556 (struct_variable_declaration_list)


State 1695

  808 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 808 (make_struct_dim_list)


State 1696

  809 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 923
    "name"  shift, and go to state 1228

    make_struct_fields  go to state 1700


State 1697

  864 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 864 (make_dim_decl)


State 1698

  867 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 867 (make_dim_decl)


State 1699

  308 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 308 (tuple_expansion_variable_declaration)


State 1700

  798 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  799                   | make_struct_fields . ',' "name" ":=" expr
  802                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  803                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  809 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1184
    ')'  shift, and go to state 1701


State 1701

  809 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 809 (make_struct_dim_list)
