Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 319 conflicts: 1 shift/reduce
State 416 conflicts: 1 shift/reduce
State 520 conflicts: 2 shift/reduce
State 522 conflicts: 2 shift/reduce
State 628 conflicts: 1 shift/reduce
State 929 conflicts: 2 shift/reduce
State 1041 conflicts: 1 shift/reduce
State 1149 conflicts: 1 shift/reduce
State 1412 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 metadata_argument_list: '@' annotation_argument
  104                       | metadata_argument_list '@' annotation_argument

  105 annotation_declaration_name: name_in_namespace
  106                            | "require"
  107                            | "private"

  108 annotation_declaration_basic: annotation_declaration_name
  109                             | annotation_declaration_name '(' annotation_argument_list ')'

  110 annotation_declaration: annotation_declaration_basic
  111                       | '!' annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration
  115                       | '(' annotation_declaration ')'
  116                       | "|>" annotation_declaration

  117 annotation_list: annotation_declaration
  118                | annotation_list ',' annotation_declaration

  119 optional_annotation_list: %empty
  120                         | '[' annotation_list ']'

  121 optional_function_argument_list: %empty
  122                                | '(' ')'
  123                                | '(' function_argument_list ')'

  124 optional_function_type: %empty
  125                       | ':' type_declaration

  126 function_name: "name"
  127              | "operator" '!'
  128              | "operator" '~'
  129              | "operator" "+="
  130              | "operator" "-="
  131              | "operator" "*="
  132              | "operator" "/="
  133              | "operator" "%="
  134              | "operator" "&="
  135              | "operator" "|="
  136              | "operator" "^="
  137              | "operator" "&&="
  138              | "operator" "||="
  139              | "operator" "^^="
  140              | "operator" "&&"
  141              | "operator" "||"
  142              | "operator" "^^"
  143              | "operator" '+'
  144              | "operator" '-'
  145              | "operator" '*'
  146              | "operator" '/'
  147              | "operator" '%'
  148              | "operator" '<'
  149              | "operator" '>'
  150              | "operator" ".."
  151              | "operator" "=="
  152              | "operator" "!="
  153              | "operator" "<="
  154              | "operator" ">="
  155              | "operator" '&'
  156              | "operator" '|'
  157              | "operator" '^'
  158              | "++" "operator"
  159              | "--" "operator"
  160              | "operator" "++"
  161              | "operator" "--"
  162              | "operator" "<<"
  163              | "operator" ">>"
  164              | "operator" "<<="
  165              | "operator" ">>="
  166              | "operator" "<<<"
  167              | "operator" ">>>"
  168              | "operator" "<<<="
  169              | "operator" ">>>="
  170              | "operator" '[' ']'
  171              | "operator" "?[" ']'
  172              | "operator" '.'
  173              | "operator" "?."
  174              | "operator" '.' "name"
  175              | "operator" '.' "name" ":="
  176              | "operator" "?." "name"
  177              | "operator" ":="
  178              | "operator" "delete"
  179              | "operator" "??"
  180              | "operator" "is"
  181              | "operator" "as"
  182              | "operator" "is" "name"
  183              | "operator" "as" "name"
  184              | "operator" '?' "as"
  185              | "operator" '?' "as" "name"
  186              | "bool"
  187              | "string"
  188              | "int"
  189              | "int2"
  190              | "int3"
  191              | "int4"
  192              | "uint"
  193              | "uint2"
  194              | "uint3"
  195              | "uint4"
  196              | "float"
  197              | "float2"
  198              | "float3"
  199              | "float4"
  200              | "range"
  201              | "urange"
  202              | "range64"
  203              | "urange64"
  204              | "int64"
  205              | "uint64"
  206              | "double"
  207              | "int8"
  208              | "uint8"
  209              | "int16"
  210              | "uint16"

  211 global_function_declaration: optional_annotation_list "def" function_declaration

  212 optional_public_or_private_function: %empty
  213                                    | "private"
  214                                    | "public"

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type

  216 $@6: %empty

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  218 expression_block: "begin of code block" expressions "end of code block"
  219                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  220 expr_call_pipe: expr expr_full_block_assumed_piped
  221               | expression_keyword expr_full_block_assumed_piped

  222 expression_any: "end of expression"
  223               | expr_pipe
  224               | expr_keyword
  225               | expr_assign_pipe
  226               | expr_assign "end of expression"
  227               | expression_delete "end of expression"
  228               | expression_let
  229               | expression_while_loop
  230               | expression_unsafe
  231               | expression_with
  232               | expression_with_alias
  233               | expression_for_loop
  234               | expression_break "end of expression"
  235               | expression_continue "end of expression"
  236               | expression_return
  237               | expression_yield
  238               | expression_if_then_else
  239               | expression_try_catch
  240               | expression_label "end of expression"
  241               | expression_goto "end of expression"
  242               | "pass" "end of expression"

  243 expressions: %empty
  244            | expressions expression_any
  245            | expressions error

  246 expr_keyword: "keyword" expr expression_block

  247 optional_expr_list: %empty
  248                   | expr_list

  249 optional_expr_list_in_braces: %empty
  250                             | '(' optional_expr_list ')'

  251 type_declaration_no_options_list: type_declaration
  252                                 | type_declaration_no_options_list "end of expression" type_declaration

  253 $@7: %empty

  254 $@8: %empty

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  256 $@9: %empty

  257 $@10: %empty

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  259 expr_pipe: expr_assign " <|" expr_block
  260          | "@ <|" expr_block
  261          | "@@ <|" expr_block
  262          | "$ <|" expr_block
  263          | expr_call_pipe

  264 name_in_namespace: "name"
  265                  | "name" "::" "name"
  266                  | "::" "name"

  267 expression_delete: "delete" expr
  268                  | "delete" "explicit" expr

  269 $@11: %empty

  270 $@12: %empty

  271 new_type_declaration: '<' $@11 type_declaration '>' $@12
  272                     | structure_type_declaration

  273 expr_new: "new" new_type_declaration
  274         | "new" new_type_declaration '(' ')'
  275         | "new" new_type_declaration '(' expr_list ')'
  276         | "new" new_type_declaration '(' make_struct_single ')'
  277         | "new" make_decl

  278 expression_break: "break"

  279 expression_continue: "continue"

  280 expression_return_no_pipe: "return"
  281                          | "return" expr_list
  282                          | "return" "<-" expr_list

  283 expression_return: expression_return_no_pipe "end of expression"
  284                  | "return" expr_pipe
  285                  | "return" "<-" expr_pipe

  286 expression_yield_no_pipe: "yield" expr
  287                         | "yield" "<-" expr

  288 expression_yield: expression_yield_no_pipe "end of expression"
  289                 | "yield" expr_pipe
  290                 | "yield" "<-" expr_pipe

  291 expression_try_catch: "try" expression_block "recover" expression_block

  292 kwd_let_var_or_nothing: "let"
  293                       | "var"
  294                       | %empty

  295 kwd_let: "let"
  296        | "var"

  297 optional_in_scope: "inscope"
  298                  | %empty

  299 tuple_expansion: "name"
  300                | tuple_expansion ',' "name"

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  302                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  304                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  305 expression_let: kwd_let optional_in_scope let_variable_declaration
  306               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  307 $@13: %empty

  308 $@14: %empty

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  310 $@15: %empty

  311 $@16: %empty

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  313 $@17: %empty

  314 $@18: %empty

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  316 $@19: %empty

  317 $@20: %empty

  318 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  319 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  320               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  321               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  322 expr_list: expr
  323          | expr_list ',' expr

  324 block_or_simple_block: expression_block
  325                      | "=>" expr
  326                      | "=>" "<-" expr

  327 block_or_lambda: '$'
  328                | '@'
  329                | '@' '@'

  330 capture_entry: '&' "name"
  331              | '=' "name"
  332              | "<-" "name"
  333              | ":=" "name"

  334 capture_list: capture_entry
  335             | capture_list ',' capture_entry

  336 optional_capture_list: %empty
  337                      | "[[" capture_list ']' ']'

  338 expr_block: expression_block
  339           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  341 $@21: %empty

  342 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  343 expr_numeric_const: "integer constant"
  344                   | "unsigned integer constant"
  345                   | "long integer constant"
  346                   | "unsigned long integer constant"
  347                   | "unsigned int8 constant"
  348                   | "floating point constant"
  349                   | "double constant"

  350 expr_assign: expr
  351            | expr '=' expr
  352            | expr "<-" expr
  353            | expr ":=" expr
  354            | expr "&=" expr
  355            | expr "|=" expr
  356            | expr "^=" expr
  357            | expr "&&=" expr
  358            | expr "||=" expr
  359            | expr "^^=" expr
  360            | expr "+=" expr
  361            | expr "-=" expr
  362            | expr "*=" expr
  363            | expr "/=" expr
  364            | expr "%=" expr
  365            | expr "<<=" expr
  366            | expr ">>=" expr
  367            | expr "<<<=" expr
  368            | expr ">>>=" expr

  369 expr_assign_pipe_right: "@ <|" expr_block
  370                       | "@@ <|" expr_block
  371                       | "$ <|" expr_block
  372                       | expr_call_pipe

  373 expr_assign_pipe: expr '=' expr_assign_pipe_right
  374                 | expr "<-" expr_assign_pipe_right
  375                 | expr "&=" expr_assign_pipe_right
  376                 | expr "|=" expr_assign_pipe_right
  377                 | expr "^=" expr_assign_pipe_right
  378                 | expr "&&=" expr_assign_pipe_right
  379                 | expr "||=" expr_assign_pipe_right
  380                 | expr "^^=" expr_assign_pipe_right
  381                 | expr "+=" expr_assign_pipe_right
  382                 | expr "-=" expr_assign_pipe_right
  383                 | expr "*=" expr_assign_pipe_right
  384                 | expr "/=" expr_assign_pipe_right
  385                 | expr "%=" expr_assign_pipe_right
  386                 | expr "<<=" expr_assign_pipe_right
  387                 | expr ">>=" expr_assign_pipe_right
  388                 | expr "<<<=" expr_assign_pipe_right
  389                 | expr ">>>=" expr_assign_pipe_right

  390 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  391                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  392 expr_method_call: expr "->" "name" '(' ')'
  393                 | expr "->" "name" '(' expr_list ')'

  394 func_addr_name: name_in_namespace
  395               | "$i" '(' expr ')'

  396 func_addr_expr: '@' '@' func_addr_name

  397 $@22: %empty

  398 $@23: %empty

  399 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  400 $@24: %empty

  401 $@25: %empty

  402 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  403 expr_field: expr '.' "name"
  404           | expr '.' '.' "name"
  405           | expr '.' "name" '(' ')'
  406           | expr '.' "name" '(' expr_list ')'

  407 $@26: %empty

  408 $@27: %empty

  409 expr_field: expr '.' $@26 error $@27

  410 expr_call: name_in_namespace '(' ')'
  411          | name_in_namespace '(' make_struct_single ')'
  412          | name_in_namespace '(' expr_list ')'
  413          | basic_type_declaration '(' ')'
  414          | basic_type_declaration '(' expr_list ')'

  415 expr: "null"
  416     | name_in_namespace
  417     | expr_numeric_const
  418     | expr_reader
  419     | string_builder
  420     | make_decl
  421     | "true"
  422     | "false"
  423     | expr_field
  424     | expr_mtag
  425     | '!' expr
  426     | '~' expr
  427     | '+' expr
  428     | '-' expr
  429     | expr "<<" expr
  430     | expr ">>" expr
  431     | expr "<<<" expr
  432     | expr ">>>" expr
  433     | expr '+' expr
  434     | expr '-' expr
  435     | expr '*' expr
  436     | expr '/' expr
  437     | expr '%' expr
  438     | expr '<' expr
  439     | expr '>' expr
  440     | expr "==" expr
  441     | expr "!=" expr
  442     | expr "<=" expr
  443     | expr ">=" expr
  444     | expr '&' expr
  445     | expr '|' expr
  446     | expr '^' expr
  447     | expr "&&" expr
  448     | expr "||" expr
  449     | expr "^^" expr
  450     | expr ".." expr
  451     | "++" expr
  452     | "--" expr
  453     | expr "++"
  454     | expr "--"
  455     | '(' expr_list optional_comma ')'
  456     | expr '[' expr ']'
  457     | expr '.' '[' expr ']'
  458     | expr "?[" expr ']'
  459     | expr '.' "?[" expr ']'
  460     | expr "?." "name"
  461     | expr '.' "?." "name"
  462     | func_addr_expr
  463     | expr_call
  464     | '*' expr
  465     | "deref" '(' expr ')'
  466     | "addr" '(' expr ')'
  467     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  468     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  469     | expr "??" expr
  470     | expr '?' expr ':' expr

  471 $@28: %empty

  472 $@29: %empty

  473 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr "is" basic_type_declaration
  475     | expr "is" "name"
  476     | expr "as" "name"

  477 $@30: %empty

  478 $@31: %empty

  479 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr "as" basic_type_declaration
  481     | expr '?' "as" "name"

  482 $@32: %empty

  483 $@33: %empty

  484 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr '?' "as" basic_type_declaration
  486     | expr_type_info
  487     | expr_type_decl
  488     | expr_cast
  489     | expr_new
  490     | expr_method_call
  491     | expr_named_call
  492     | expr_full_block
  493     | expr "<|" expr
  494     | expr "|>" expr
  495     | expr "|>" basic_type_declaration
  496     | name_in_namespace "name"
  497     | "unsafe" '(' expr ')'
  498     | expression_keyword

  499 expr_mtag: "$$" '(' expr ')'
  500          | "$i" '(' expr ')'
  501          | "$v" '(' expr ')'
  502          | "$b" '(' expr ')'
  503          | "$a" '(' expr ')'
  504          | "..."
  505          | "$c" '(' expr ')' '(' ')'
  506          | "$c" '(' expr ')' '(' expr_list ')'
  507          | expr '.' "$f" '(' expr ')'
  508          | expr "?." "$f" '(' expr ')'
  509          | expr '.' '.' "$f" '(' expr ')'
  510          | expr '.' "?." "$f" '(' expr ')'
  511          | expr "as" "$f" '(' expr ')'
  512          | expr '?' "as" "$f" '(' expr ')'
  513          | expr "is" "$f" '(' expr ')'
  514          | '@' '@' "$c" '(' expr ')'

  515 optional_field_annotation: %empty
  516                          | "[[" annotation_argument_list ']' ']'
  517                          | metadata_argument_list

  518 optional_override: %empty
  519                  | "override"
  520                  | "sealed"

  521 optional_constant: %empty
  522                  | "const"

  523 optional_public_or_private_member_variable: %empty
  524                                           | "public"
  525                                           | "private"

  526 optional_static_member_variable: %empty
  527                                | "static"

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  529 struct_variable_declaration_list: %empty

  530 $@34: %empty

  531 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  532 $@35: %empty

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  534 $@36: %empty

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  536                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  537 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  538                              | "$a" '(' expr ')'

  539 function_argument_list: function_argument_declaration
  540                       | function_argument_list "end of expression" function_argument_declaration

  541 tuple_type: type_declaration
  542           | "name" ':' type_declaration

  543 tuple_type_list: tuple_type
  544                | tuple_type_list "end of expression" tuple_type

  545 tuple_alias_type_list: %empty
  546                      | tuple_alias_type_list "end of expression"
  547                      | tuple_alias_type_list tuple_type "end of expression"

  548 variant_type: "name" ':' type_declaration

  549 variant_type_list: variant_type
  550                  | variant_type_list "end of expression" variant_type

  551 variant_alias_type_list: %empty
  552                        | variant_alias_type_list "end of expression"
  553                        | variant_alias_type_list variant_type "end of expression"

  554 copy_or_move: '='
  555             | "<-"

  556 variable_declaration: variable_name_with_pos_list
  557                     | variable_name_with_pos_list '&'
  558                     | variable_name_with_pos_list ':' type_declaration
  559                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  560                     | variable_name_with_pos_list copy_or_move expr
  561                     | variable_name_with_pos_list copy_or_move expr_pipe

  562 copy_or_move_or_clone: '='
  563                      | "<-"
  564                      | ":="

  565 optional_ref: %empty
  566             | '&'

  567 let_variable_name_with_pos_list: "name"
  568                                | "$i" '(' expr ')'
  569                                | "name" "aka" "name"
  570                                | let_variable_name_with_pos_list ',' "name"
  571                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  572 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  573                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  574                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  575                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  576                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  577 global_variable_declaration_list: %empty

  578 $@37: %empty

  579 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  580 optional_shared: %empty
  581                | "shared"

  582 optional_public_or_private_variable: %empty
  583                                    | "private"
  584                                    | "public"

  585 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  586 $@38: %empty

  587 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  588 enum_list: %empty
  589          | enum_list "end of expression"
  590          | enum_list "name" "end of expression"
  591          | enum_list "name" '=' expr "end of expression"

  592 optional_public_or_private_alias: %empty
  593                                 | "private"
  594                                 | "public"

  595 $@39: %empty

  596 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  597 alias_list: single_alias "end of expression"
  598           | alias_list single_alias "end of expression"

  599 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  600 $@40: %empty

  601 alias_declaration: "typedef" $@40 single_alias "end of expression"

  602 optional_public_or_private_enum: %empty
  603                                | "private"
  604                                | "public"

  605 enum_name: "name"

  606 $@41: %empty

  607 $@42: %empty

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  609 $@43: %empty

  610 $@44: %empty

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  612 optional_structure_parent: %empty
  613                          | ':' name_in_namespace

  614 optional_sealed: %empty
  615                | "sealed"

  616 structure_name: optional_sealed "name" optional_structure_parent

  617 class_or_struct: "class"
  618                | "struct"

  619 optional_public_or_private_structure: %empty
  620                                     | "private"
  621                                     | "public"

  622 optional_struct_variable_declaration_list: %empty
  623                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  624 $@45: %empty

  625 $@46: %empty

  626 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  627 variable_name_with_pos_list: "name"
  628                            | "$i" '(' expr ')'
  629                            | "name" "aka" "name"
  630                            | variable_name_with_pos_list ',' "name"
  631                            | variable_name_with_pos_list ',' "name" "aka" "name"

  632 basic_type_declaration: "bool"
  633                       | "string"
  634                       | "int"
  635                       | "int8"
  636                       | "int16"
  637                       | "int64"
  638                       | "int2"
  639                       | "int3"
  640                       | "int4"
  641                       | "uint"
  642                       | "uint8"
  643                       | "uint16"
  644                       | "uint64"
  645                       | "uint2"
  646                       | "uint3"
  647                       | "uint4"
  648                       | "float"
  649                       | "float2"
  650                       | "float3"
  651                       | "float4"
  652                       | "void"
  653                       | "range"
  654                       | "urange"
  655                       | "range64"
  656                       | "urange64"
  657                       | "double"
  658                       | "bitfield"

  659 enum_basic_type_declaration: "int"
  660                            | "int8"
  661                            | "int16"
  662                            | "uint"
  663                            | "uint8"
  664                            | "uint16"
  665                            | "int64"
  666                            | "uint64"

  667 structure_type_declaration: name_in_namespace

  668 auto_type_declaration: "auto"
  669                      | "auto" '(' "name" ')'
  670                      | "$t" '(' expr ')'

  671 bitfield_bits: "name"
  672              | bitfield_bits "end of expression" "name"

  673 bitfield_alias_bits: %empty
  674                    | bitfield_alias_bits "end of expression"
  675                    | bitfield_alias_bits "name" "end of expression"

  676 $@47: %empty

  677 $@48: %empty

  678 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  679 table_type_pair: type_declaration
  680                | type_declaration "end of expression" type_declaration

  681 dim_list: '[' expr ']'
  682         | dim_list '[' expr ']'

  683 type_declaration_no_options: basic_type_declaration
  684                            | auto_type_declaration
  685                            | bitfield_type_declaration
  686                            | structure_type_declaration
  687                            | type_declaration_no_options dim_list
  688                            | type_declaration_no_options '[' ']'

  689 $@49: %empty

  690 $@50: %empty

  691 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  692                            | "typedecl" '(' expr ')'
  693                            | '$' name_in_namespace '(' optional_expr_list ')'

  694 $@51: %empty

  695 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  696                            | type_declaration_no_options '-' '[' ']'
  697                            | type_declaration_no_options "explicit"
  698                            | type_declaration_no_options "const"
  699                            | type_declaration_no_options '-' "const"
  700                            | type_declaration_no_options '&'
  701                            | type_declaration_no_options '-' '&'
  702                            | type_declaration_no_options '#'
  703                            | type_declaration_no_options "implicit"
  704                            | type_declaration_no_options '-' '#'
  705                            | type_declaration_no_options "==" "const"
  706                            | type_declaration_no_options "==" '&'
  707                            | type_declaration_no_options '?'

  708 $@52: %empty

  709 $@53: %empty

  710 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  711                            | type_declaration_no_options "??"

  712 $@54: %empty

  713 $@55: %empty

  714 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  715 $@56: %empty

  716 $@57: %empty

  717 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  718 $@58: %empty

  719 $@59: %empty

  720 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  721                            | "block"

  722 $@60: %empty

  723 $@61: %empty

  724 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  725 $@62: %empty

  726 $@63: %empty

  727 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  728                            | "function"

  729 $@64: %empty

  730 $@65: %empty

  731 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  732 $@66: %empty

  733 $@67: %empty

  734 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  735                            | "lambda"

  736 $@68: %empty

  737 $@69: %empty

  738 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  739 $@70: %empty

  740 $@71: %empty

  741 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  742 $@72: %empty

  743 $@73: %empty

  744 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  745 $@74: %empty

  746 $@75: %empty

  747 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  748 type_declaration: type_declaration_no_options
  749                 | type_declaration '|' type_declaration_no_options
  750                 | type_declaration '|' '#'

  751 $@76: %empty

  752 $@77: %empty

  753 $@78: %empty

  754 $@79: %empty

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  756 $@80: %empty

  757 $@81: %empty

  758 $@82: %empty

  759 $@83: %empty

  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  761 $@84: %empty

  762 $@85: %empty

  763 $@86: %empty

  764 $@87: %empty

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  766 make_decl: make_struct_decl
  767          | make_dim_decl
  768          | make_table_decl
  769          | array_comprehension
  770          | make_tuple_call

  771 make_struct_fields: "name" copy_or_move expr
  772                   | "name" ":=" expr
  773                   | make_struct_fields ',' "name" copy_or_move expr
  774                   | make_struct_fields ',' "name" ":=" expr
  775                   | "$f" '(' expr ')' copy_or_move expr
  776                   | "$f" '(' expr ')' ":=" expr
  777                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  778                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  779 make_struct_single: make_struct_fields

  780 make_struct_dim: make_struct_fields
  781                | make_struct_dim "end of expression" make_struct_fields

  782 optional_block: %empty
  783               | "where" expr_block

  784 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  785                                    | ";}}"

  786 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  787                                    | ";}]"

  788 optional_trailing_semicolon_sqr_sqr: ']' ']'
  789                                    | ";]]"

  790 optional_trailing_delim_sqr_sqr: ']' ']'
  791                                | ";]]"
  792                                | ",]]"

  793 optional_trailing_delim_cur_sqr: "end of code block" ']'
  794                                | ";}]"
  795                                | ",}]"

  796 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  797                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  798                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  799                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  800                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  801                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  802 $@88: %empty

  803 $@89: %empty

  804 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

  805 $@90: %empty

  806 $@91: %empty

  807 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

  808 $@92: %empty

  809 $@93: %empty

  810 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

  811 $@94: %empty

  812 $@95: %empty

  813 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95

  814 make_tuple: expr
  815           | expr "=>" expr
  816           | make_tuple ',' expr

  817 make_map_tuple: expr "=>" expr
  818               | expr

  819 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  820 $@96: %empty

  821 $@97: %empty

  822 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

  823 make_dim: make_tuple
  824         | make_dim "end of expression" make_tuple

  825 make_dim_decl: '[' expr_list optional_comma ']'
  826              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  827              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  828              | "array" '(' expr_list optional_comma ')'

  829 $@98: %empty

  830 $@99: %empty

  831 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'
  832              | "fixed_array" '(' expr_list optional_comma ')'

  833 $@100: %empty

  834 $@101: %empty

  835 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

  836 make_table: make_map_tuple
  837           | make_table "end of expression" make_map_tuple

  838 expr_map_tuple_list: make_map_tuple
  839                    | expr_map_tuple_list ',' make_map_tuple

  840 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  841                | "{{" make_table optional_trailing_semicolon_cur_cur
  842                | "table" '(' expr_map_tuple_list optional_comma ')'
  843                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  844                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  845 array_comprehension_where: %empty
  846                          | "end of expression" "where" expr

  847 optional_comma: %empty
  848               | ','

  849 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  850                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  851                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  852                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  853                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  854                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 111 127 425
    '#' (35) 702 704 750
    '$' (36) 20 327 693 695
    '%' (37) 35 42 147 437
    '&' (38) 155 330 444 557 566 700 701 706
    '(' (40) 100 109 115 122 123 250 274 275 276 302 304 319 320 321 390 391 392 393 395 405 406 410 411 412 413 414 455 465 466 467 468 497 499 500 501 502 503 505 506 507 508 509 510 511 512 513 514 538 568 628 669 670 692 693 695 775 776 777 778 798 799 801 804 807 810 819 822 828 831 832 835 842 843 844
    ')' (41) 100 109 115 122 123 250 274 275 276 302 304 319 320 321 390 391 392 393 395 405 406 410 411 412 413 414 455 465 466 467 468 497 499 500 501 502 503 505 506 507 508 509 510 511 512 513 514 538 568 628 669 670 692 693 695 775 776 777 778 798 799 801 804 807 810 819 822 828 831 832 835 842 843 844
    '*' (42) 145 435 464
    '+' (43) 143 427 433
    ',' (44) 51 89 102 118 300 323 335 391 570 571 630 631 773 774 777 778 816 839 848
    '-' (45) 144 428 434 696 699 701 704
    '.' (46) 43 172 174 175 403 404 405 406 409 457 459 461 507 509 510
    '/' (47) 44 146 436
    ':' (58) 53 54 125 301 302 470 542 548 558 559 572 573 574 611 613
    "end of expression" (59) 15 16 74 222 226 227 234 235 240 241 242 252 283 288 301 302 303 304 321 531 533 536 540 544 546 547 550 552 553 572 573 575 589 590 591 597 598 601 672 674 675 680 781 824 837 844 846 849 850 851 852 853 854
    '<' (60) 148 255 258 271 309 312 315 318 320 321 399 402 438 467 468 473 479 484 678 691 695 710 714 717 720 724 727 731 734 738 741 744 747 804 807 810 813 822 831 835 843 844
    '=' (61) 81 93 94 95 96 97 98 100 331 351 373 554 562 591 596
    '>' (62) 149 255 258 271 309 312 315 318 320 321 399 402 439 467 468 473 479 484 678 691 695 710 714 717 720 724 727 731 734 738 741 744 747 804 807 810 813 822 831 835 843 844
    '?' (63) 184 185 470 481 484 485 512 707
    '@' (64) 103 104 328 329 396 399 402 514
    '[' (91) 120 170 390 391 456 457 536 681 682 688 696 825 849 850
    ']' (93) 120 170 171 301 303 337 390 391 456 457 458 459 516 536 681 682 688 696 786 788 790 793 825 849 850 851 852
    '^' (94) 157 446
    "begin of code block" (123) 218 219 585 599 608 611 623 755 760 765 840 853
    '|' (124) 156 445 749 750
    "end of code block" (125) 218 219 585 599 608 611 623 755 760 765 784 786 793 840 852 853 854
    '~' (126) 128 426
    error (256) 245 409
    "lexer error" (258)
    "struct" (259) 618 804
    "class" (260) 617 807
    "let" (261) 292 295
    "def" (262) 211 533 535
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 849 850 851 852 853 854
    "recover" (268) 291
    "true" (269) 86 97 421
    "false" (270) 87 98 422
    "new" (271) 273 274 275 276 277
    "typeinfo" (272) 319 320 321
    "type" (273) 91 318 473 479 484 691
    "in" (274) 76 92 849 850 851 852 853 854
    "is" (275) 180 182 473 474 475 513
    "as" (276) 46 181 183 184 185 476 479 480 481 484 485 511 512
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 714 828 831
    "return" (280) 280 281 282 284 285
    "null" (281) 415
    "break" (282) 278
    "try" (283) 291
    "options" (284) 36
    "table" (285) 717 842 843 844
    "expect" (286) 49
    "const" (287) 522 698 699 705
    "require" (288) 37 106
    "operator" (289) 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
    "enum" (290) 608 611
    "finally" (291) 219
    "delete" (292) 178 267 268
    "deref" (293) 465
    "typedef" (294) 599 601
    "typedecl" (295) 692
    "with" (296) 79
    "aka" (297) 569 571 629 631
    "assume" (298) 81
    "cast" (299) 309
    "override" (300) 519
    "abstract" (301) 533
    "upcast" (302) 312
    "iterator" (303) 720 850
    "var" (304) 293 296
    "addr" (305) 466
    "continue" (306) 279
    "where" (307) 783 846
    "pass" (308) 242
    "reinterpret" (309) 315
    "module" (310) 22
    "public" (311) 18 48 214 524 584 594 604 621
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 703
    "explicit" (315) 268 697
    "shared" (316) 581
    "private" (317) 19 107 213 525 583 593 603 620
    "smart_ptr" (318) 710
    "unsafe" (319) 77 497
    "inscope" (320) 297
    "static" (321) 527
    "fixed_array" (322) 832 835
    "default" (323) 813
    "bool" (324) 186 632
    "void" (325) 652
    "string" (326) 187 633
    "auto" (327) 668 669
    "int" (328) 188 634 659
    "int2" (329) 189 638
    "int3" (330) 190 639
    "int4" (331) 191 640
    "uint" (332) 192 641 662
    "bitfield" (333) 658 678 765
    "uint2" (334) 193 645
    "uint3" (335) 194 646
    "uint4" (336) 195 647
    "float" (337) 196 648
    "float2" (338) 197 649
    "float3" (339) 198 650
    "float4" (340) 199 651
    "range" (341) 200 653
    "urange" (342) 201 654
    "range64" (343) 202 655
    "urange64" (344) 203 656
    "block" (345) 721 724 727
    "int64" (346) 204 637 665
    "uint64" (347) 205 644 666
    "double" (348) 206 657
    "function" (349) 728 731 734
    "lambda" (350) 735 738 741
    "int8" (351) 207 635 660
    "uint8" (352) 208 642 663
    "int16" (353) 209 636 661
    "uint16" (354) 210 643 664
    "tuple" (355) 744 755 819 822
    "variant" (356) 747 760 810
    "generator" (357) 467 468
    "yield" (358) 286 287 289 290
    "sealed" (359) 520 615
    "+=" (360) 129 360 381
    "-=" (361) 130 361 382
    "/=" (362) 132 363 384
    "*=" (363) 131 362 383
    "%=" (364) 133 364 385
    "&=" (365) 134 354 375
    "|=" (366) 135 355 376
    "^=" (367) 136 356 377
    "<<" (368) 162 429
    ">>" (369) 163 430
    "++" (370) 158 160 451 453
    "--" (371) 159 161 452 454
    "<=" (372) 153 442
    "<<=" (373) 164 365 386
    ">>=" (374) 165 366 387
    ">=" (375) 154 443
    "==" (376) 151 440 705 706
    "!=" (377) 152 441
    "->" (378) 392 393
    "<-" (379) 282 285 287 290 326 332 352 374 555 563
    "??" (380) 179 469 711
    "?." (381) 173 176 460 461 508 510
    "?[" (382) 171 458 459
    "<|" (383) 493
    " <|" (384) 259
    "$ <|" (385) 262 371
    "@ <|" (386) 260 369
    "@@ <|" (387) 261 370
    "|>" (388) 116 494 495
    ":=" (389) 175 177 333 353 564 772 774 776 778
    "<<<" (390) 166 431
    ">>>" (391) 167 432
    "<<<=" (392) 168 367 388
    ">>>=" (393) 169 368 389
    "=>" (394) 325 326 815 817
    "::" (395) 265 266
    "&&" (396) 112 140 447
    "||" (397) 113 141 448
    "^^" (398) 114 142 449
    "&&=" (399) 137 357 378
    "||=" (400) 138 358 379
    "^^=" (401) 139 359 380
    ".." (402) 150 450
    "$$" (403) 499
    "$i" (404) 395 500 568 628
    "$v" (405) 501
    "$b" (406) 502
    "$a" (407) 503 538
    "$t" (408) 670
    "$c" (409) 505 506 514
    "$f" (410) 507 508 509 510 511 512 513 775 776 777 778
    "..." (411) 504
    "[[" (412) 301 303 337 516 796 797 798 799 826 851
    "[{" (413) 800 801 827 852
    "{{" (414) 841 854
    "integer constant" <i> (415) 52 53 54 55 84 95 343
    "long integer constant" <i64> (416) 345
    "unsigned integer constant" <ui> (417) 344
    "unsigned long integer constant" <ui64> (418) 346
    "unsigned int8 constant" <ui> (419) 347
    "floating point constant" <fd> (420) 85 96 348
    "double constant" <d> (421) 349
    "name" <s> (422) 21 38 46 81 83 90 94 126 174 175 176 182 183 185 264 265 266 299 300 320 321 330 331 332 333 392 393 403 404 405 406 460 461 475 476 481 496 542 548 567 569 570 571 590 591 596 605 616 627 629 630 631 669 671 672 675 755 760 765 771 772 773 774
    "keyword" <s> (423) 39 246 255
    "type function" <s> (424) 40 258
    "start of the string" (425) 27 31
    STRING_CHARACTER <ch> (426) 23 25 32 33
    STRING_CHARACTER_ESC (427) 24 26
    "end of the string" (428) 27 31
    "{" (429) 30
    "}" (430) 30
    "end of failed eader macro" (431)
    ";}}" (432) 785
    ";}]" (433) 787 794
    ";]]" (434) 789 791
    ",]]" (435) 792
    ",}]" (436) 795
    UNARY_MINUS (437)
    UNARY_PLUS (438)
    PRE_INC (439)
    PRE_DEC (440)
    POST_INC (441)
    POST_DEC (442)
    DEREF (443)


Nonterminals, with rules where they appear

    $accept (216)
        on left: 0
    program (217)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (218)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (219)
        on left: 17 18 19
        on right: 22
    module_name <s> (220)
        on left: 20 21
        on right: 22
    module_declaration (221)
        on left: 22
        on right: 2
    character_sequence <s> (222)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (223)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (224)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (225)
        on left: 31
        on right: 419
    reader_character_sequence (226)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (227)
        on left: 35
        on right: 16 418
    $@1 (228)
        on left: 34
        on right: 35
    options_declaration (229)
        on left: 36
        on right: 9
    require_declaration (230)
        on left: 37
        on right: 8
    keyword_or_name <s> (231)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (232)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (233)
        on left: 45 46
        on right: 37
    is_public_module <b> (234)
        on left: 47 48
        on right: 45 46
    expect_declaration (235)
        on left: 49
        on right: 7
    expect_list (236)
        on left: 50 51
        on right: 49 51
    expect_error (237)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (238)
        on left: 54
        on right: 240
    expression_goto <pExpression> (239)
        on left: 55 56
        on right: 241
    elif_or_static_elif <b> (240)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (241)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (242)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (243)
        on left: 64 66
        on right: 74
    $@2 (244)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (245)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (246)
        on left: 72 74
        on right: 238
    $@3 (247)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (248)
        on left: 76
        on right: 233
    $@4 (249)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (250)
        on left: 77
        on right: 230
    expression_while_loop <pExpression> (251)
        on left: 78
        on right: 229
    expression_with <pExpression> (252)
        on left: 79
        on right: 231
    expression_with_alias <pExpression> (253)
        on left: 81
        on right: 232
    $@5 (254)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (255)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (256)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (257)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (258)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102 103 104
    annotation_argument_list <aaList> (259)
        on left: 101 102
        on right: 36 102 109 516
    metadata_argument_list <aaList> (260)
        on left: 103 104
        on right: 104 517
    annotation_declaration_name <s> (261)
        on left: 105 106 107
        on right: 108 109
    annotation_declaration_basic <fa> (262)
        on left: 108 109
        on right: 110
    annotation_declaration <fa> (263)
        on left: 110 111 112 113 114 115 116
        on right: 111 112 113 114 115 116 117 118
    annotation_list <faList> (264)
        on left: 117 118
        on right: 118 120 536
    optional_annotation_list <faList> (265)
        on left: 119 120
        on right: 211 339 340 342 533 535 608 611 626
    optional_function_argument_list <pVarDeclList> (266)
        on left: 121 122 123
        on right: 215 339 340 342 402 727 734 741
    optional_function_type <pTypeDecl> (267)
        on left: 124 125
        on right: 215 339 340 342 402 727 734 741
    function_name <s> (268)
        on left: 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
        on right: 215
    global_function_declaration (269)
        on left: 211
        on right: 6
    optional_public_or_private_function <b> (270)
        on left: 212 213 214
        on right: 217
    function_declaration_header <pFuncDecl> (271)
        on left: 215
        on right: 217 533 535
    function_declaration <pFuncDecl> (272)
        on left: 217
        on right: 211
    $@6 (273)
        on left: 216
        on right: 217
    expression_block <pExpression> (274)
        on left: 218 219
        on right: 60 61 72 76 77 78 79 217 246 291 324 338 342 535
    expr_call_pipe <pExpression> (275)
        on left: 220 221
        on right: 263 372
    expression_any <pExpression> (276)
        on left: 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242
        on right: 244
    expressions <pExpression> (277)
        on left: 243 244 245
        on right: 218 219 244 245
    expr_keyword <pExpression> (278)
        on left: 246
        on right: 224
    optional_expr_list <pExpression> (279)
        on left: 247 248
        on right: 250 693 695
    optional_expr_list_in_braces <pExpression> (280)
        on left: 249 250
        on right: 258
    type_declaration_no_options_list <pTypeDeclList> (281)
        on left: 251 252
        on right: 252 255 258 695
    expression_keyword <pExpression> (282)
        on left: 255 258
        on right: 221 498
    $@7 (283)
        on left: 253
        on right: 255
    $@8 (284)
        on left: 254
        on right: 255
    $@9 (285)
        on left: 256
        on right: 258
    $@10 (286)
        on left: 257
        on right: 258
    expr_pipe <pExpression> (287)
        on left: 259 260 261 262 263
        on right: 223 284 285 289 290 561 574 576
    name_in_namespace <s> (288)
        on left: 264 265 266
        on right: 35 105 319 320 321 390 391 394 410 411 412 416 496 613 667 693 695
    expression_delete <pExpression> (289)
        on left: 267 268
        on right: 227
    new_type_declaration <pTypeDecl> (290)
        on left: 271 272
        on right: 273 274 275 276
    $@11 (291)
        on left: 269
        on right: 271
    $@12 (292)
        on left: 270
        on right: 271
    expr_new <pExpression> (293)
        on left: 273 274 275 276 277
        on right: 489
    expression_break <pExpression> (294)
        on left: 278
        on right: 70 234
    expression_continue <pExpression> (295)
        on left: 279
        on right: 71 235
    expression_return_no_pipe <pExpression> (296)
        on left: 280 281 282
        on right: 68 283
    expression_return <pExpression> (297)
        on left: 283 284 285
        on right: 236
    expression_yield_no_pipe <pExpression> (298)
        on left: 286 287
        on right: 69 288
    expression_yield <pExpression> (299)
        on left: 288 289 290
        on right: 237
    expression_try_catch <pExpression> (300)
        on left: 291
        on right: 239
    kwd_let_var_or_nothing <b> (301)
        on left: 292 293 294
        on right: 537
    kwd_let <b> (302)
        on left: 295 296
        on right: 305 306 585 587
    optional_in_scope <b> (303)
        on left: 297 298
        on right: 305 306
    tuple_expansion <pNameList> (304)
        on left: 299 300
        on right: 300 301 302 303 304
    tuple_expansion_variable_declaration <pVarDecl> (305)
        on left: 301 302 303 304
        on right: 306
    expression_let <pExpression> (306)
        on left: 305 306
        on right: 228
    expr_cast <pExpression> (307)
        on left: 309 312 315
        on right: 488
    $@13 (308)
        on left: 307
        on right: 309
    $@14 (309)
        on left: 308
        on right: 309
    $@15 (310)
        on left: 310
        on right: 312
    $@16 (311)
        on left: 311
        on right: 312
    $@17 (312)
        on left: 313
        on right: 315
    $@18 (313)
        on left: 314
        on right: 315
    expr_type_decl <pExpression> (314)
        on left: 318
        on right: 487
    $@19 (315)
        on left: 316
        on right: 318
    $@20 (316)
        on left: 317
        on right: 318
    expr_type_info <pExpression> (317)
        on left: 319 320 321
        on right: 486
    expr_list <pExpression> (318)
        on left: 322 323
        on right: 76 248 275 281 282 323 391 393 406 412 414 455 506 819 825 828 831 832 835 849 850 851 852 853 854
    block_or_simple_block <pExpression> (319)
        on left: 324 325 326
        on right: 339 340
    block_or_lambda <i> (320)
        on left: 327 328 329
        on right: 339 340 342
    capture_entry <pCapt> (321)
        on left: 330 331 332 333
        on right: 334 335
    capture_list <pCaptList> (322)
        on left: 334 335
        on right: 335 337
    optional_capture_list <pCaptList> (323)
        on left: 336 337
        on right: 339 340 342 467 468
    expr_block <pExpression> (324)
        on left: 338 339
        on right: 259 260 261 262 369 370 371 783
    expr_full_block <pExpression> (325)
        on left: 340
        on right: 492
    expr_full_block_assumed_piped <pExpression> (326)
        on left: 342
        on right: 220 221
    $@21 (327)
        on left: 341
        on right: 342
    expr_numeric_const <pExpression> (328)
        on left: 343 344 345 346 347 348 349
        on right: 417
    expr_assign <pExpression> (329)
        on left: 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368
        on right: 226 259
    expr_assign_pipe_right <pExpression> (330)
        on left: 369 370 371 372
        on right: 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389
    expr_assign_pipe <pExpression> (331)
        on left: 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389
        on right: 225
    expr_named_call <pExpression> (332)
        on left: 390 391
        on right: 491
    expr_method_call <pExpression> (333)
        on left: 392 393
        on right: 490
    func_addr_name <pExpression> (334)
        on left: 394 395
        on right: 396 399 402
    func_addr_expr <pExpression> (335)
        on left: 396 399 402
        on right: 462
    $@22 (336)
        on left: 397
        on right: 399
    $@23 (337)
        on left: 398
        on right: 399
    $@24 (338)
        on left: 400
        on right: 402
    $@25 (339)
        on left: 401
        on right: 402
    expr_field <pExpression> (340)
        on left: 403 404 405 406 409
        on right: 423
    $@26 (341)
        on left: 407
        on right: 409
    $@27 (342)
        on left: 408
        on right: 409
    expr_call <pExpression> (343)
        on left: 410 411 412 413 414
        on right: 463
    expr <pExpression> (344)
        on left: 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 473 474 475 476 479 480 481 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498
        on right
    $@28 (345)
        on left: 471
        on right: 473
    $@29 (346)
        on left: 472
        on right: 473
    $@30 (347)
        on left: 477
        on right: 479
    $@31 (348)
        on left: 478
        on right: 479
    $@32 (349)
        on left: 482
        on right: 484
    $@33 (350)
        on left: 483
        on right: 484
    expr_mtag <pExpression> (351)
        on left: 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514
        on right: 424
    optional_field_annotation <aaList> (352)
        on left: 515 516 517
        on right: 528 537 579 587
    optional_override <i> (353)
        on left: 518 519 520
        on right: 528 535
    optional_constant <b> (354)
        on left: 521 522
        on right: 533 535
    optional_public_or_private_member_variable <b> (355)
        on left: 523 524 525
        on right: 528 533 535
    optional_static_member_variable <b> (356)
        on left: 526 527
        on right: 528 535
    structure_variable_declaration <pVarDecl> (357)
        on left: 528
        on right: 531
    struct_variable_declaration_list <pVarDeclList> (358)
        on left: 529 531 533 535 536
        on right: 531 533 535 536 623
    $@34 (359)
        on left: 530
        on right: 531
    $@35 (360)
        on left: 532
        on right: 533
    $@36 (361)
        on left: 534
        on right: 535
    function_argument_declaration <pVarDecl> (362)
        on left: 537 538
        on right: 539 540
    function_argument_list <pVarDeclList> (363)
        on left: 539 540
        on right: 123 540
    tuple_type <pVarDecl> (364)
        on left: 541 542
        on right: 543 544 547
    tuple_type_list <pVarDeclList> (365)
        on left: 543 544
        on right: 544 744
    tuple_alias_type_list <pVarDeclList> (366)
        on left: 545 546 547
        on right: 546 547 755
    variant_type <pVarDecl> (367)
        on left: 548
        on right: 549 550 553
    variant_type_list <pVarDeclList> (368)
        on left: 549 550
        on right: 550 747
    variant_alias_type_list <pVarDeclList> (369)
        on left: 551 552 553
        on right: 552 553 760
    copy_or_move <b> (370)
        on left: 554 555
        on right: 559 560 561 771 773 775 777
    variable_declaration <pVarDecl> (371)
        on left: 556 557 558 559 560 561
        on right: 528 537
    copy_or_move_or_clone <i> (372)
        on left: 562 563 564
        on right: 301 302 303 304 573 574 575 576
    optional_ref <b> (373)
        on left: 565 566
        on right: 303 304 575 576
    let_variable_name_with_pos_list <pNameWithPosList> (374)
        on left: 567 568 569 570 571
        on right: 570 571 572 573 574 575 576
    let_variable_declaration <pVarDecl> (375)
        on left: 572 573 574 575 576
        on right: 305 579 587
    global_variable_declaration_list <pVarDeclList> (376)
        on left: 577 579
        on right: 579 585
    $@37 (377)
        on left: 578
        on right: 579
    optional_shared <b> (378)
        on left: 580 581
        on right: 22 585 587
    optional_public_or_private_variable <b> (379)
        on left: 582 583 584
        on right: 585 587
    global_let (380)
        on left: 585 587
        on right: 5
    $@38 (381)
        on left: 586
        on right: 587
    enum_list <pEnum> (382)
        on left: 588 589 590 591
        on right: 589 590 591 608 611
    optional_public_or_private_alias <b> (383)
        on left: 592 593 594
        on right: 596 755 760 765
    single_alias (384)
        on left: 596
        on right: 597 598 601
    $@39 (385)
        on left: 595
        on right: 596
    alias_list (386)
        on left: 597 598
        on right: 598 599
    alias_declaration (387)
        on left: 599 601
        on right: 10
    $@40 (388)
        on left: 600
        on right: 601
    optional_public_or_private_enum <b> (389)
        on left: 602 603 604
        on right: 608 611
    enum_name <pEnum> (390)
        on left: 605
        on right: 608 611
    enum_declaration (391)
        on left: 608 611
        on right: 4
    $@41 (392)
        on left: 606
        on right: 608
    $@42 (393)
        on left: 607
        on right: 608
    $@43 (394)
        on left: 609
        on right: 611
    $@44 (395)
        on left: 610
        on right: 611
    optional_structure_parent <s> (396)
        on left: 612 613
        on right: 616
    optional_sealed <b> (397)
        on left: 614 615
        on right: 616
    structure_name <pStructure> (398)
        on left: 616
        on right: 626
    class_or_struct <b> (399)
        on left: 617 618
        on right: 626
    optional_public_or_private_structure <b> (400)
        on left: 619 620 621
        on right: 626
    optional_struct_variable_declaration_list <pVarDeclList> (401)
        on left: 622 623
        on right: 626
    structure_declaration (402)
        on left: 626
        on right: 3
    $@45 (403)
        on left: 624
        on right: 626
    $@46 (404)
        on left: 625
        on right: 626
    variable_name_with_pos_list <pNameWithPosList> (405)
        on left: 627 628 629 630 631
        on right: 76 556 557 558 559 560 561 630 631 849 850 851 852 853 854
    basic_type_declaration <type> (406)
        on left: 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658
        on right: 413 414 474 480 485 495 683
    enum_basic_type_declaration <type> (407)
        on left: 659 660 661 662 663 664 665 666
        on right: 611
    structure_type_declaration <pTypeDecl> (408)
        on left: 667
        on right: 272 686
    auto_type_declaration <pTypeDecl> (409)
        on left: 668 669 670
        on right: 684
    bitfield_bits <pNameList> (410)
        on left: 671 672
        on right: 672 678
    bitfield_alias_bits <pNameList> (411)
        on left: 673 674 675
        on right: 674 675 765
    bitfield_type_declaration <pTypeDecl> (412)
        on left: 678
        on right: 685
    $@47 (413)
        on left: 676
        on right: 678
    $@48 (414)
        on left: 677
        on right: 678
    table_type_pair <aTypePair> (415)
        on left: 679 680
        on right: 717
    dim_list <pTypeDecl> (416)
        on left: 681 682
        on right: 682 687
    type_declaration_no_options <pTypeDecl> (417)
        on left: 683 684 685 686 687 688 691 692 693 695 696 697 698 699 700 701 702 703 704 705 706 707 710 711 714 717 720 721 724 727 728 731 734 735 738 741 744 747
        on right: 301 302 309 312 315 399 467 468 473 572 573 574 687 688 696 697 698 699 700 701 702 703 704 705 706 707 711 748 749 796 797 798 799 800 801 804 807 810 813 822 826 827 831 835 843 844
    $@49 (418)
        on left: 689
        on right: 691
    $@50 (419)
        on left: 690
        on right: 691
    $@51 (420)
        on left: 694
        on right: 695
    $@52 (421)
        on left: 708
        on right: 710
    $@53 (422)
        on left: 709
        on right: 710
    $@54 (423)
        on left: 712
        on right: 714
    $@55 (424)
        on left: 713
        on right: 714
    $@56 (425)
        on left: 715
        on right: 717
    $@57 (426)
        on left: 716
        on right: 717
    $@58 (427)
        on left: 718
        on right: 720
    $@59 (428)
        on left: 719
        on right: 720
    $@60 (429)
        on left: 722
        on right: 724
    $@61 (430)
        on left: 723
        on right: 724
    $@62 (431)
        on left: 725
        on right: 727
    $@63 (432)
        on left: 726
        on right: 727
    $@64 (433)
        on left: 729
        on right: 731
    $@65 (434)
        on left: 730
        on right: 731
    $@66 (435)
        on left: 732
        on right: 734
    $@67 (436)
        on left: 733
        on right: 734
    $@68 (437)
        on left: 736
        on right: 738
    $@69 (438)
        on left: 737
        on right: 738
    $@70 (439)
        on left: 739
        on right: 741
    $@71 (440)
        on left: 740
        on right: 741
    $@72 (441)
        on left: 742
        on right: 744
    $@73 (442)
        on left: 743
        on right: 744
    $@74 (443)
        on left: 745
        on right: 747
    $@75 (444)
        on left: 746
        on right: 747
    type_declaration <pTypeDecl> (445)
        on left: 748 749 750
        on right: 125 251 252 271 318 479 484 541 542 548 558 559 596 679 680 691 710 714 720 724 731 738 749 750
    tuple_alias_declaration (446)
        on left: 755
        on right: 12
    $@76 (447)
        on left: 751
        on right: 755
    $@77 (448)
        on left: 752
        on right: 755
    $@78 (449)
        on left: 753
        on right: 755
    $@79 (450)
        on left: 754
        on right: 755
    variant_alias_declaration (451)
        on left: 760
        on right: 11
    $@80 (452)
        on left: 756
        on right: 760
    $@81 (453)
        on left: 757
        on right: 760
    $@82 (454)
        on left: 758
        on right: 760
    $@83 (455)
        on left: 759
        on right: 760
    bitfield_alias_declaration (456)
        on left: 765
        on right: 13
    $@84 (457)
        on left: 761
        on right: 765
    $@85 (458)
        on left: 762
        on right: 765
    $@86 (459)
        on left: 763
        on right: 765
    $@87 (460)
        on left: 764
        on right: 765
    make_decl <pExpression> (461)
        on left: 766 767 768 769 770
        on right: 277 420
    make_struct_fields <pMakeStruct> (462)
        on left: 771 772 773 774 775 776 777 778
        on right: 390 391 773 774 777 778 779 780 781
    make_struct_single <pExpression> (463)
        on left: 779
        on right: 276 411
    make_struct_dim <pExpression> (464)
        on left: 780 781
        on right: 781 796 799 800 801 804 807 810 822
    optional_block <pExpression> (465)
        on left: 782 783
        on right: 796 797 798 799 800 801
    optional_trailing_semicolon_cur_cur (466)
        on left: 784 785
        on right: 841
    optional_trailing_semicolon_cur_sqr (467)
        on left: 786 787
        on right: 827
    optional_trailing_semicolon_sqr_sqr (468)
        on left: 788 789
        on right: 826
    optional_trailing_delim_sqr_sqr (469)
        on left: 790 791 792
        on right: 796 797 798 799
    optional_trailing_delim_cur_sqr (470)
        on left: 793 794 795
        on right: 800 801
    make_struct_decl <pExpression> (471)
        on left: 796 797 798 799 800 801 804 807 810 813
        on right: 766
    $@88 (472)
        on left: 802
        on right: 804
    $@89 (473)
        on left: 803
        on right: 804
    $@90 (474)
        on left: 805
        on right: 807
    $@91 (475)
        on left: 806
        on right: 807
    $@92 (476)
        on left: 808
        on right: 810
    $@93 (477)
        on left: 809
        on right: 810
    $@94 (478)
        on left: 811
        on right: 813
    $@95 (479)
        on left: 812
        on right: 813
    make_tuple <pExpression> (480)
        on left: 814 815 816
        on right: 816 823 824
    make_map_tuple <pExpression> (481)
        on left: 817 818
        on right: 836 837 838 839 853 854
    make_tuple_call <pExpression> (482)
        on left: 819 822
        on right: 770
    $@96 (483)
        on left: 820
        on right: 822
    $@97 (484)
        on left: 821
        on right: 822
    make_dim <pExpression> (485)
        on left: 823 824
        on right: 824 826 827
    make_dim_decl <pExpression> (486)
        on left: 825 826 827 828 831 832 835
        on right: 767
    $@98 (487)
        on left: 829
        on right: 831
    $@99 (488)
        on left: 830
        on right: 831
    $@100 (489)
        on left: 833
        on right: 835
    $@101 (490)
        on left: 834
        on right: 835
    make_table <pExpression> (491)
        on left: 836 837
        on right: 837 841
    expr_map_tuple_list <pExpression> (492)
        on left: 838 839
        on right: 839 840 842 843 844
    make_table_decl <pExpression> (493)
        on left: 840 841 842 843 844
        on right: 768
    array_comprehension_where <pExpression> (494)
        on left: 845 846
        on right: 849 850 851 852 853 854
    optional_comma <b> (495)
        on left: 847 848
        on right: 455 819 825 828 831 832 835 840 842 843 844
    array_comprehension <pExpression> (496)
        on left: 849 850 851 852 853 854
        on right: 769


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  295 kwd_let: "let" .

    $default  reduce using rule 295 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  599 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  601                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 600 ($@40)

    $@40  go to state 49


State 8

  296 kwd_let: "var" .

    $default  reduce using rule 296 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  765 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  755 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  760 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  120 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  211 global_function_declaration: optional_annotation_list . "def" function_declaration
  608 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  611                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  626 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  585 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  587           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 580 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  599 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  601 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 580 (optional_shared)

    optional_shared  go to state 93


State 53

  594 optional_public_or_private_alias: "public" .

    $default  reduce using rule 594 (optional_public_or_private_alias)


State 54

  593 optional_public_or_private_alias: "private" .

    $default  reduce using rule 593 (optional_public_or_private_alias)


State 55

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 761 ($@84)

    $@84  go to state 94


State 56

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 751 ($@76)

    $@76  go to state 95


State 57

  760 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 756 ($@80)

    $@80  go to state 96


State 58

  266 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 264 (name_in_namespace)]
    $default  reduce using rule 264 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  106 annotation_declaration_name: "require" .

    $default  reduce using rule 106 (annotation_declaration_name)


State 62

  107 annotation_declaration_name: "private" .

    $default  reduce using rule 107 (annotation_declaration_name)


State 63

  116 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  111 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  115 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  108 annotation_declaration_basic: annotation_declaration_name .
  109                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 108 (annotation_declaration_basic)


State 67

  110 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 110 (annotation_declaration)


State 68

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  117 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 117 (annotation_list)


State 69

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  105 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 105 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  618 class_or_struct: "struct" .

    $default  reduce using rule 618 (class_or_struct)


State 73

  617 class_or_struct: "class" .

    $default  reduce using rule 617 (class_or_struct)


State 74

  211 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 212 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  608 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  611                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 602 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  626 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 619 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  581 optional_shared: "shared" .

    $default  reduce using rule 581 (optional_shared)


State 78

  585 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  587           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 582 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  596 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  597 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  598 alias_list: alias_list . single_alias "end of expression"
  599 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 592 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  601 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  266 name_in_namespace: "::" "name" .

    $default  reduce using rule 266 (name_in_namespace)


State 98

  265 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  116                       | "|>" annotation_declaration .

    $default  reduce using rule 116 (annotation_declaration)


State 101

  111 annotation_declaration: '!' annotation_declaration .
  112                       | annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 111 (annotation_declaration)


State 102

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  115                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  109 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  112 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  113 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  114 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  118 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  120 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 120 (optional_annotation_list)


State 109

  214 optional_public_or_private_function: "public" .

    $default  reduce using rule 214 (optional_public_or_private_function)


State 110

  213 optional_public_or_private_function: "private" .

    $default  reduce using rule 213 (optional_public_or_private_function)


State 111

  217 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 216 ($@6)

    $@6  go to state 156


State 112

  211 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 211 (global_function_declaration)


State 113

  604 optional_public_or_private_enum: "public" .

    $default  reduce using rule 604 (optional_public_or_private_enum)


State 114

  603 optional_public_or_private_enum: "private" .

    $default  reduce using rule 603 (optional_public_or_private_enum)


State 115

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  611                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  621 optional_public_or_private_structure: "public" .

    $default  reduce using rule 621 (optional_public_or_private_structure)


State 117

  620 optional_public_or_private_structure: "private" .

    $default  reduce using rule 620 (optional_public_or_private_structure)


State 118

  626 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 624 ($@45)

    $@45  go to state 159


State 119

  584 optional_public_or_private_variable: "public" .

    $default  reduce using rule 584 (optional_public_or_private_variable)


State 120

  583 optional_public_or_private_variable: "private" .

    $default  reduce using rule 583 (optional_public_or_private_variable)


State 121

  585 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  587           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 586 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  596 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 595 ($@39)

    $@39  go to state 174


State 137

  597 alias_list: single_alias "end of expression" .

    $default  reduce using rule 597 (alias_list)


State 138

  599 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 599 (alias_declaration)


State 139

  598 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 175


State 140

  601 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 601 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 762 ($@85)

    $@85  go to state 176


State 145

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 752 ($@77)

    $@77  go to state 177


State 146

  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 757 ($@81)

    $@81  go to state 178


State 147

  265 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 265 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  115 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 115 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  112                       | annotation_declaration "&&" annotation_declaration .
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 112 (annotation_declaration)


State 153

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  113                       | annotation_declaration "||" annotation_declaration .
  114                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 113 (annotation_declaration)


State 154

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  114                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 114 (annotation_declaration)


State 155

  112 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  113                       | annotation_declaration . "||" annotation_declaration
  114                       | annotation_declaration . "^^" annotation_declaration
  118 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 118 (annotation_list)


State 156

  217 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  605 enum_name: "name" .

    $default  reduce using rule 605 (enum_name)


State 158

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  611                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 212
    ':'                    shift, and go to state 213


State 159

  626 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 614 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  585 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 577 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  587 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 515 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 221


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223
    "end of the string"   shift, and go to state 224


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 225
    ')'  shift, and go to state 226


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  596 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 227


State 175

  598 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 598 (alias_list)


State 176

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 228


State 177

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 229


State 178

  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 230


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  109 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 109 (annotation_declaration_basic)


State 181

  127 function_name: "operator" . '!'
  128              | "operator" . '~'
  129              | "operator" . "+="
  130              | "operator" . "-="
  131              | "operator" . "*="
  132              | "operator" . "/="
  133              | "operator" . "%="
  134              | "operator" . "&="
  135              | "operator" . "|="
  136              | "operator" . "^="
  137              | "operator" . "&&="
  138              | "operator" . "||="
  139              | "operator" . "^^="
  140              | "operator" . "&&"
  141              | "operator" . "||"
  142              | "operator" . "^^"
  143              | "operator" . '+'
  144              | "operator" . '-'
  145              | "operator" . '*'
  146              | "operator" . '/'
  147              | "operator" . '%'
  148              | "operator" . '<'
  149              | "operator" . '>'
  150              | "operator" . ".."
  151              | "operator" . "=="
  152              | "operator" . "!="
  153              | "operator" . "<="
  154              | "operator" . ">="
  155              | "operator" . '&'
  156              | "operator" . '|'
  157              | "operator" . '^'
  160              | "operator" . "++"
  161              | "operator" . "--"
  162              | "operator" . "<<"
  163              | "operator" . ">>"
  164              | "operator" . "<<="
  165              | "operator" . ">>="
  166              | "operator" . "<<<"
  167              | "operator" . ">>>"
  168              | "operator" . "<<<="
  169              | "operator" . ">>>="
  170              | "operator" . '[' ']'
  171              | "operator" . "?[" ']'
  172              | "operator" . '.'
  173              | "operator" . "?."
  174              | "operator" . '.' "name"
  175              | "operator" . '.' "name" ":="
  176              | "operator" . "?." "name"
  177              | "operator" . ":="
  178              | "operator" . "delete"
  179              | "operator" . "??"
  180              | "operator" . "is"
  181              | "operator" . "as"
  182              | "operator" . "is" "name"
  183              | "operator" . "as" "name"
  184              | "operator" . '?' "as"
  185              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 231
    "as"      shift, and go to state 232
    "delete"  shift, and go to state 233
    "+="      shift, and go to state 234
    "-="      shift, and go to state 235
    "/="      shift, and go to state 236
    "*="      shift, and go to state 237
    "%="      shift, and go to state 238
    "&="      shift, and go to state 239
    "|="      shift, and go to state 240
    "^="      shift, and go to state 241
    "<<"      shift, and go to state 242
    ">>"      shift, and go to state 243
    "++"      shift, and go to state 244
    "--"      shift, and go to state 245
    "<="      shift, and go to state 246
    "<<="     shift, and go to state 247
    ">>="     shift, and go to state 248
    ">="      shift, and go to state 249
    "=="      shift, and go to state 250
    "!="      shift, and go to state 251
    "??"      shift, and go to state 252
    "?."      shift, and go to state 253
    "?["      shift, and go to state 254
    ":="      shift, and go to state 255
    "<<<"     shift, and go to state 256
    ">>>"     shift, and go to state 257
    "<<<="    shift, and go to state 258
    ">>>="    shift, and go to state 259
    "&&"      shift, and go to state 260
    "||"      shift, and go to state 261
    "^^"      shift, and go to state 262
    "&&="     shift, and go to state 263
    "||="     shift, and go to state 264
    "^^="     shift, and go to state 265
    ".."      shift, and go to state 266
    '?'       shift, and go to state 267
    '|'       shift, and go to state 268
    '^'       shift, and go to state 269
    '&'       shift, and go to state 270
    '<'       shift, and go to state 271
    '>'       shift, and go to state 272
    '-'       shift, and go to state 273
    '+'       shift, and go to state 274
    '*'       shift, and go to state 275
    '/'       shift, and go to state 276
    '%'       shift, and go to state 277
    '~'       shift, and go to state 278
    '!'       shift, and go to state 279
    '.'       shift, and go to state 280
    '['       shift, and go to state 281


State 182

  186 function_name: "bool" .

    $default  reduce using rule 186 (function_name)


State 183

  187 function_name: "string" .

    $default  reduce using rule 187 (function_name)


State 184

  188 function_name: "int" .

    $default  reduce using rule 188 (function_name)


State 185

  189 function_name: "int2" .

    $default  reduce using rule 189 (function_name)


State 186

  190 function_name: "int3" .

    $default  reduce using rule 190 (function_name)


State 187

  191 function_name: "int4" .

    $default  reduce using rule 191 (function_name)


State 188

  192 function_name: "uint" .

    $default  reduce using rule 192 (function_name)


State 189

  193 function_name: "uint2" .

    $default  reduce using rule 193 (function_name)


State 190

  194 function_name: "uint3" .

    $default  reduce using rule 194 (function_name)


State 191

  195 function_name: "uint4" .

    $default  reduce using rule 195 (function_name)


State 192

  196 function_name: "float" .

    $default  reduce using rule 196 (function_name)


State 193

  197 function_name: "float2" .

    $default  reduce using rule 197 (function_name)


State 194

  198 function_name: "float3" .

    $default  reduce using rule 198 (function_name)


State 195

  199 function_name: "float4" .

    $default  reduce using rule 199 (function_name)


State 196

  200 function_name: "range" .

    $default  reduce using rule 200 (function_name)


State 197

  201 function_name: "urange" .

    $default  reduce using rule 201 (function_name)


State 198

  202 function_name: "range64" .

    $default  reduce using rule 202 (function_name)


State 199

  203 function_name: "urange64" .

    $default  reduce using rule 203 (function_name)


State 200

  204 function_name: "int64" .

    $default  reduce using rule 204 (function_name)


State 201

  205 function_name: "uint64" .

    $default  reduce using rule 205 (function_name)


State 202

  206 function_name: "double" .

    $default  reduce using rule 206 (function_name)


State 203

  207 function_name: "int8" .

    $default  reduce using rule 207 (function_name)


State 204

  208 function_name: "uint8" .

    $default  reduce using rule 208 (function_name)


State 205

  209 function_name: "int16" .

    $default  reduce using rule 209 (function_name)


State 206

  210 function_name: "uint16" .

    $default  reduce using rule 210 (function_name)


State 207

  158 function_name: "++" . "operator"

    "operator"  shift, and go to state 282


State 208

  159 function_name: "--" . "operator"

    "operator"  shift, and go to state 283


State 209

  126 function_name: "name" .

    $default  reduce using rule 126 (function_name)


State 210

  215 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 285


State 211

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 287


State 212

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 606 ($@41)

    $@41  go to state 288


State 213

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 289
    "uint"    shift, and go to state 290
    "int64"   shift, and go to state 291
    "uint64"  shift, and go to state 292
    "int8"    shift, and go to state 293
    "uint8"   shift, and go to state 294
    "int16"   shift, and go to state 295
    "uint16"  shift, and go to state 296

    enum_basic_type_declaration  go to state 297


State 214

  615 optional_sealed: "sealed" .

    $default  reduce using rule 615 (optional_sealed)


State 215

  616 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 298


State 216

  626 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 625 ($@46)

    $@46  go to state 299


State 217

  579 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  585 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 300

    $default  reduce using rule 578 ($@37)

    $@37  go to state 301


State 218

  516 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 302


State 219

  103 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 303


State 220

  104 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  517 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 304

    $default  reduce using rule 517 (optional_field_annotation)


State 221

  587 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 305
    "name"  shift, and go to state 306

    let_variable_name_with_pos_list  go to state 307
    let_variable_declaration         go to state 308


State 222

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 223

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 224

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 225

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 309


State 226

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 227

  596 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 357


State 228

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 763 ($@86)

    $@86  go to state 358


State 229

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 753 ($@78)

    $@78  go to state 359


State 230

  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 758 ($@82)

    $@82  go to state 360


State 231

  180 function_name: "operator" "is" .
  182              | "operator" "is" . "name"

    "name"  shift, and go to state 361

    $default  reduce using rule 180 (function_name)


State 232

  181 function_name: "operator" "as" .
  183              | "operator" "as" . "name"

    "name"  shift, and go to state 362

    $default  reduce using rule 181 (function_name)


State 233

  178 function_name: "operator" "delete" .

    $default  reduce using rule 178 (function_name)


State 234

  129 function_name: "operator" "+=" .

    $default  reduce using rule 129 (function_name)


State 235

  130 function_name: "operator" "-=" .

    $default  reduce using rule 130 (function_name)


State 236

  132 function_name: "operator" "/=" .

    $default  reduce using rule 132 (function_name)


State 237

  131 function_name: "operator" "*=" .

    $default  reduce using rule 131 (function_name)


State 238

  133 function_name: "operator" "%=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "&=" .

    $default  reduce using rule 134 (function_name)


State 240

  135 function_name: "operator" "|=" .

    $default  reduce using rule 135 (function_name)


State 241

  136 function_name: "operator" "^=" .

    $default  reduce using rule 136 (function_name)


State 242

  162 function_name: "operator" "<<" .

    $default  reduce using rule 162 (function_name)


State 243

  163 function_name: "operator" ">>" .

    $default  reduce using rule 163 (function_name)


State 244

  160 function_name: "operator" "++" .

    $default  reduce using rule 160 (function_name)


State 245

  161 function_name: "operator" "--" .

    $default  reduce using rule 161 (function_name)


State 246

  153 function_name: "operator" "<=" .

    $default  reduce using rule 153 (function_name)


State 247

  164 function_name: "operator" "<<=" .

    $default  reduce using rule 164 (function_name)


State 248

  165 function_name: "operator" ">>=" .

    $default  reduce using rule 165 (function_name)


State 249

  154 function_name: "operator" ">=" .

    $default  reduce using rule 154 (function_name)


State 250

  151 function_name: "operator" "==" .

    $default  reduce using rule 151 (function_name)


State 251

  152 function_name: "operator" "!=" .

    $default  reduce using rule 152 (function_name)


State 252

  179 function_name: "operator" "??" .

    $default  reduce using rule 179 (function_name)


State 253

  173 function_name: "operator" "?." .
  176              | "operator" "?." . "name"

    "name"  shift, and go to state 363

    $default  reduce using rule 173 (function_name)


State 254

  171 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 364


State 255

  177 function_name: "operator" ":=" .

    $default  reduce using rule 177 (function_name)


State 256

  166 function_name: "operator" "<<<" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>" .

    $default  reduce using rule 167 (function_name)


State 258

  168 function_name: "operator" "<<<=" .

    $default  reduce using rule 168 (function_name)


State 259

  169 function_name: "operator" ">>>=" .

    $default  reduce using rule 169 (function_name)


State 260

  140 function_name: "operator" "&&" .

    $default  reduce using rule 140 (function_name)


State 261

  141 function_name: "operator" "||" .

    $default  reduce using rule 141 (function_name)


State 262

  142 function_name: "operator" "^^" .

    $default  reduce using rule 142 (function_name)


State 263

  137 function_name: "operator" "&&=" .

    $default  reduce using rule 137 (function_name)


State 264

  138 function_name: "operator" "||=" .

    $default  reduce using rule 138 (function_name)


State 265

  139 function_name: "operator" "^^=" .

    $default  reduce using rule 139 (function_name)


State 266

  150 function_name: "operator" ".." .

    $default  reduce using rule 150 (function_name)


State 267

  184 function_name: "operator" '?' . "as"
  185              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 365


State 268

  156 function_name: "operator" '|' .

    $default  reduce using rule 156 (function_name)


State 269

  157 function_name: "operator" '^' .

    $default  reduce using rule 157 (function_name)


State 270

  155 function_name: "operator" '&' .

    $default  reduce using rule 155 (function_name)


State 271

  148 function_name: "operator" '<' .

    $default  reduce using rule 148 (function_name)


State 272

  149 function_name: "operator" '>' .

    $default  reduce using rule 149 (function_name)


State 273

  144 function_name: "operator" '-' .

    $default  reduce using rule 144 (function_name)


State 274

  143 function_name: "operator" '+' .

    $default  reduce using rule 143 (function_name)


State 275

  145 function_name: "operator" '*' .

    $default  reduce using rule 145 (function_name)


State 276

  146 function_name: "operator" '/' .

    $default  reduce using rule 146 (function_name)


State 277

  147 function_name: "operator" '%' .

    $default  reduce using rule 147 (function_name)


State 278

  128 function_name: "operator" '~' .

    $default  reduce using rule 128 (function_name)


State 279

  127 function_name: "operator" '!' .

    $default  reduce using rule 127 (function_name)


State 280

  172 function_name: "operator" '.' .
  174              | "operator" '.' . "name"
  175              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 366

    $default  reduce using rule 172 (function_name)


State 281

  170 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 367


State 282

  158 function_name: "++" "operator" .

    $default  reduce using rule 158 (function_name)


State 283

  159 function_name: "--" "operator" .

    $default  reduce using rule 159 (function_name)


State 284

  122 optional_function_argument_list: '(' . ')'
  123                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 368
    "[["  shift, and go to state 218
    ')'   shift, and go to state 369
    '@'   shift, and go to state 219

    $default  reduce using rule 515 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 370
    function_argument_declaration  go to state 371
    function_argument_list         go to state 372


State 285

  215 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 374


State 286

  218 expression_block: "begin of code block" . expressions "end of code block"
  219                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 243 (expressions)

    expressions  go to state 375


State 287

  217 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 217 (function_declaration)


State 288

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 588 (enum_list)

    enum_list  go to state 376


State 289

  659 enum_basic_type_declaration: "int" .

    $default  reduce using rule 659 (enum_basic_type_declaration)


State 290

  662 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 662 (enum_basic_type_declaration)


State 291

  665 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 665 (enum_basic_type_declaration)


State 292

  666 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 666 (enum_basic_type_declaration)


State 293

  660 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 660 (enum_basic_type_declaration)


State 294

  663 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 663 (enum_basic_type_declaration)


State 295

  661 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 661 (enum_basic_type_declaration)


State 296

  664 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 664 (enum_basic_type_declaration)


State 297

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 377


State 298

  616 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 378

    $default  reduce using rule 612 (optional_structure_parent)

    optional_structure_parent  go to state 379


State 299

  626 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 380

    $default  reduce using rule 622 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 381


State 300

  585 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 585 (global_let)


State 301

  579 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 515 (optional_field_annotation)

    metadata_argument_list     go to state 220
    optional_field_annotation  go to state 382


State 302

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  516 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 383


State 303

  103 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 103 (metadata_argument_list)


State 304

  104 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 384


State 305

  568 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 385


State 306

  567 let_variable_name_with_pos_list: "name" .
  569                                | "name" . "aka" "name"

    "aka"  shift, and go to state 386

    $default  reduce using rule 567 (let_variable_name_with_pos_list)


State 307

  570 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  571                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  572 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  573                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  574                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  575                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  576                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 387
    ':'  shift, and go to state 388
    '&'  shift, and go to state 389

    $default  reduce using rule 565 (optional_ref)

    optional_ref  go to state 390


State 308

  587 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 587 (global_let)


State 309

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 310

  691 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 391


State 311

  714 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 392


State 312

  717 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 393


State 313

  692 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 394


State 314

  720 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 395


State 315

  710 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 396


State 316

  632 basic_type_declaration: "bool" .

    $default  reduce using rule 632 (basic_type_declaration)


State 317

  652 basic_type_declaration: "void" .

    $default  reduce using rule 652 (basic_type_declaration)


State 318

  633 basic_type_declaration: "string" .

    $default  reduce using rule 633 (basic_type_declaration)


State 319

  668 auto_type_declaration: "auto" .
  669                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 397

    '('       [reduce using rule 668 (auto_type_declaration)]
    $default  reduce using rule 668 (auto_type_declaration)


State 320

  634 basic_type_declaration: "int" .

    $default  reduce using rule 634 (basic_type_declaration)


State 321

  638 basic_type_declaration: "int2" .

    $default  reduce using rule 638 (basic_type_declaration)


State 322

  639 basic_type_declaration: "int3" .

    $default  reduce using rule 639 (basic_type_declaration)


State 323

  640 basic_type_declaration: "int4" .

    $default  reduce using rule 640 (basic_type_declaration)


State 324

  641 basic_type_declaration: "uint" .

    $default  reduce using rule 641 (basic_type_declaration)


State 325

  658 basic_type_declaration: "bitfield" .
  678 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 398

    $default  reduce using rule 658 (basic_type_declaration)


State 326

  645 basic_type_declaration: "uint2" .

    $default  reduce using rule 645 (basic_type_declaration)


State 327

  646 basic_type_declaration: "uint3" .

    $default  reduce using rule 646 (basic_type_declaration)


State 328

  647 basic_type_declaration: "uint4" .

    $default  reduce using rule 647 (basic_type_declaration)


State 329

  648 basic_type_declaration: "float" .

    $default  reduce using rule 648 (basic_type_declaration)


State 330

  649 basic_type_declaration: "float2" .

    $default  reduce using rule 649 (basic_type_declaration)


State 331

  650 basic_type_declaration: "float3" .

    $default  reduce using rule 650 (basic_type_declaration)


State 332

  651 basic_type_declaration: "float4" .

    $default  reduce using rule 651 (basic_type_declaration)


State 333

  653 basic_type_declaration: "range" .

    $default  reduce using rule 653 (basic_type_declaration)


State 334

  654 basic_type_declaration: "urange" .

    $default  reduce using rule 654 (basic_type_declaration)


State 335

  655 basic_type_declaration: "range64" .

    $default  reduce using rule 655 (basic_type_declaration)


State 336

  656 basic_type_declaration: "urange64" .

    $default  reduce using rule 656 (basic_type_declaration)


State 337

  721 type_declaration_no_options: "block" .
  724                            | "block" . '<' $@60 type_declaration '>' $@61
  727                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 399

    $default  reduce using rule 721 (type_declaration_no_options)


State 338

  637 basic_type_declaration: "int64" .

    $default  reduce using rule 637 (basic_type_declaration)


State 339

  644 basic_type_declaration: "uint64" .

    $default  reduce using rule 644 (basic_type_declaration)


State 340

  657 basic_type_declaration: "double" .

    $default  reduce using rule 657 (basic_type_declaration)


State 341

  728 type_declaration_no_options: "function" .
  731                            | "function" . '<' $@64 type_declaration '>' $@65
  734                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 400

    $default  reduce using rule 728 (type_declaration_no_options)


State 342

  735 type_declaration_no_options: "lambda" .
  738                            | "lambda" . '<' $@68 type_declaration '>' $@69
  741                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 401

    $default  reduce using rule 735 (type_declaration_no_options)


State 343

  635 basic_type_declaration: "int8" .

    $default  reduce using rule 635 (basic_type_declaration)


State 344

  642 basic_type_declaration: "uint8" .

    $default  reduce using rule 642 (basic_type_declaration)


State 345

  636 basic_type_declaration: "int16" .

    $default  reduce using rule 636 (basic_type_declaration)


State 346

  643 basic_type_declaration: "uint16" .

    $default  reduce using rule 643 (basic_type_declaration)


State 347

  744 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 402


State 348

  747 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 403


State 349

  670 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 404


State 350

  693 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  695                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 405


State 351

  667 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 667 (structure_type_declaration)


State 352

  683 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 683 (type_declaration_no_options)


State 353

  686 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 686 (type_declaration_no_options)


State 354

  684 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 684 (type_declaration_no_options)


State 355

  685 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 685 (type_declaration_no_options)


State 356

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  748 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    $default  reduce using rule 748 (type_declaration)

    dim_list  go to state 416


State 357

  596 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 596 (single_alias)


State 358

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 673 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 418


State 359

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 545 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 419


State 360

  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 551 (variant_alias_type_list)

    variant_alias_type_list  go to state 420


State 361

  182 function_name: "operator" "is" "name" .

    $default  reduce using rule 182 (function_name)


State 362

  183 function_name: "operator" "as" "name" .

    $default  reduce using rule 183 (function_name)


State 363

  176 function_name: "operator" "?." "name" .

    $default  reduce using rule 176 (function_name)


State 364

  171 function_name: "operator" "?[" ']' .

    $default  reduce using rule 171 (function_name)


State 365

  184 function_name: "operator" '?' "as" .
  185              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 421

    $default  reduce using rule 184 (function_name)


State 366

  174 function_name: "operator" '.' "name" .
  175              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 422

    $default  reduce using rule 174 (function_name)


State 367

  170 function_name: "operator" '[' ']' .

    $default  reduce using rule 170 (function_name)


State 368

  538 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 423


State 369

  122 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 122 (optional_function_argument_list)


State 370

  537 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 424
    "var"  shift, and go to state 425

    $default  reduce using rule 294 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 426


State 371

  539 function_argument_list: function_argument_declaration .

    $default  reduce using rule 539 (function_argument_list)


State 372

  123 optional_function_argument_list: '(' function_argument_list . ')'
  540 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 427
    ')'                  shift, and go to state 428


State 373

  125 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 429


State 374

  215 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 215 (function_declaration_header)


State 375

  218 expression_block: "begin of code block" expressions . "end of code block"
  219                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  244 expressions: expressions . expression_any
  245            | expressions . error

    error                             shift, and go to state 430
    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 433
    "if"                              shift, and go to state 434
    "static_if"                       shift, and go to state 435
    "for"                             shift, and go to state 436
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 443
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "try"                             shift, and go to state 446
    "table"                           shift, and go to state 447
    "delete"                          shift, and go to state 448
    "deref"                           shift, and go to state 449
    "with"                            shift, and go to state 450
    "assume"                          shift, and go to state 451
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "pass"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 458
    "goto"                            shift, and go to state 459
    "unsafe"                          shift, and go to state 460
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 467
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 490
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    "end of code block"               shift, and go to state 494
    "end of expression"               shift, and go to state 495
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_label           go to state 507
    expression_goto            go to state 508
    if_or_static_if            go to state 509
    expression_if_one_liner    go to state 510
    expression_if_then_else    go to state 511
    expression_for_loop        go to state 512
    expression_unsafe          go to state 513
    expression_while_loop      go to state 514
    expression_with            go to state 515
    expression_with_alias      go to state 516
    expr_call_pipe             go to state 517
    expression_any             go to state 518
    expr_keyword               go to state 519
    expression_keyword         go to state 520
    expr_pipe                  go to state 521
    name_in_namespace          go to state 522
    expression_delete          go to state 523
    expr_new                   go to state 524
    expression_break           go to state 525
    expression_continue        go to state 526
    expression_return_no_pipe  go to state 527
    expression_return          go to state 528
    expression_yield_no_pipe   go to state 529
    expression_yield           go to state 530
    expression_try_catch       go to state 531
    kwd_let                    go to state 532
    expression_let             go to state 533
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_assign                go to state 540
    expr_assign_pipe           go to state 541
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 547
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 376

  589 enum_list: enum_list . "end of expression"
  590          | enum_list . "name" "end of expression"
  591          | enum_list . "name" '=' expr "end of expression"
  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 556
    "end of expression"  shift, and go to state 557

    $default  reduce using rule 607 ($@42)

    $@42  go to state 558


State 377

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 609 ($@43)

    $@43  go to state 559


State 378

  613 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 560


State 379

  616 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 616 (structure_name)


State 380

  623 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 529 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 561


State 381

  626 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 626 (structure_declaration)


State 382

  579 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 305
    "name"  shift, and go to state 306

    let_variable_name_with_pos_list  go to state 307
    let_variable_declaration         go to state 562


State 383

  516 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 563


State 384

  104 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 385

  568 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 567
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 386

  569 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 568


State 387

  570 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  571                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 569


State 388

  572 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  573                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  574                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 570


State 389

  566 optional_ref: '&' .

    $default  reduce using rule 566 (optional_ref)


State 390

  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  576                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 574


State 391

  691 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 689 ($@49)

    $@49  go to state 575


State 392

  714 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 712 ($@54)

    $@54  go to state 576


State 393

  717 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 715 ($@56)

    $@56  go to state 577


State 394

  692 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 578
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 395

  720 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 718 ($@58)

    $@58  go to state 579


State 396

  710 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 708 ($@52)

    $@52  go to state 580


State 397

  669 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 581


State 398

  678 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 676 ($@47)

    $@47  go to state 582


State 399

  724 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  727                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 725 ($@62)
    '>'       reduce using rule 725 ($@62)
    '('       reduce using rule 725 ($@62)
    $default  reduce using rule 722 ($@60)

    $@60  go to state 583
    $@62  go to state 584


State 400

  731 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  734                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 732 ($@66)
    '>'       reduce using rule 732 ($@66)
    '('       reduce using rule 732 ($@66)
    $default  reduce using rule 729 ($@64)

    $@64  go to state 585
    $@66  go to state 586


State 401

  738 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  741                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 739 ($@70)
    '>'       reduce using rule 739 ($@70)
    '('       reduce using rule 739 ($@70)
    $default  reduce using rule 736 ($@68)

    $@68  go to state 587
    $@70  go to state 588


State 402

  744 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 742 ($@72)

    $@72  go to state 589


State 403

  747 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 745 ($@74)

    $@74  go to state 590


State 404

  670 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 591
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 405

  693 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  695                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 592
    '('  shift, and go to state 593


State 406

  698 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 698 (type_declaration_no_options)


State 407

  703 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 703 (type_declaration_no_options)


State 408

  697 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 697 (type_declaration_no_options)


State 409

  705 type_declaration_no_options: type_declaration_no_options "==" . "const"
  706                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 594
    '&'      shift, and go to state 595


State 410

  711 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 711 (type_declaration_no_options)


State 411

  707 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 707 (type_declaration_no_options)


State 412

  700 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 700 (type_declaration_no_options)


State 413

  696 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  699                            | type_declaration_no_options '-' . "const"
  701                            | type_declaration_no_options '-' . '&'
  704                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 596
    '&'      shift, and go to state 597
    '['      shift, and go to state 598
    '#'      shift, and go to state 599


State 414

  681 dim_list: '[' . expr ']'
  688 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 600
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 601
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 415

  702 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 702 (type_declaration_no_options)


State 416

  682 dim_list: dim_list . '[' expr ']'
  687 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 602

    '['       [reduce using rule 687 (type_declaration_no_options)]
    $default  reduce using rule 687 (type_declaration_no_options)


State 417

  749 type_declaration: type_declaration '|' . type_declaration_no_options
  750                 | type_declaration '|' . '#'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350
    '#'          shift, and go to state 603

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 604


State 418

  674 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  675                    | bitfield_alias_bits . "name" "end of expression"
  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 605
    "end of expression"  shift, and go to state 606

    $default  reduce using rule 764 ($@87)

    $@87  go to state 607


State 419

  546 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  547                      | tuple_alias_type_list . tuple_type "end of expression"
  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 310
    "array"              shift, and go to state 311
    "table"              shift, and go to state 312
    "typedecl"           shift, and go to state 313
    "iterator"           shift, and go to state 314
    "smart_ptr"          shift, and go to state 315
    "bool"               shift, and go to state 316
    "void"               shift, and go to state 317
    "string"             shift, and go to state 318
    "auto"               shift, and go to state 319
    "int"                shift, and go to state 320
    "int2"               shift, and go to state 321
    "int3"               shift, and go to state 322
    "int4"               shift, and go to state 323
    "uint"               shift, and go to state 324
    "bitfield"           shift, and go to state 325
    "uint2"              shift, and go to state 326
    "uint3"              shift, and go to state 327
    "uint4"              shift, and go to state 328
    "float"              shift, and go to state 329
    "float2"             shift, and go to state 330
    "float3"             shift, and go to state 331
    "float4"             shift, and go to state 332
    "range"              shift, and go to state 333
    "urange"             shift, and go to state 334
    "range64"            shift, and go to state 335
    "urange64"           shift, and go to state 336
    "block"              shift, and go to state 337
    "int64"              shift, and go to state 338
    "uint64"             shift, and go to state 339
    "double"             shift, and go to state 340
    "function"           shift, and go to state 341
    "lambda"             shift, and go to state 342
    "int8"               shift, and go to state 343
    "uint8"              shift, and go to state 344
    "int16"              shift, and go to state 345
    "uint16"             shift, and go to state 346
    "tuple"              shift, and go to state 347
    "variant"            shift, and go to state 348
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 349
    "name"               shift, and go to state 608
    "end of expression"  shift, and go to state 609
    '$'                  shift, and go to state 350

    $default  reduce using rule 754 ($@79)

    name_in_namespace            go to state 351
    tuple_type                   go to state 610
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 611
    $@79                         go to state 612


State 420

  552 variant_alias_type_list: variant_alias_type_list . "end of expression"
  553                        | variant_alias_type_list . variant_type "end of expression"
  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 613
    "end of expression"  shift, and go to state 614

    $default  reduce using rule 759 ($@83)

    variant_type  go to state 615
    $@83          go to state 616


State 421

  185 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 185 (function_name)


State 422

  175 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 175 (function_name)


State 423

  538 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 617
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 424

  292 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 292 (kwd_let_var_or_nothing)


State 425

  293 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 293 (kwd_let_var_or_nothing)


State 426

  537 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_declaration         go to state 620
    variable_name_with_pos_list  go to state 621


State 427

  540 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 368
    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 515 (optional_field_annotation)

    metadata_argument_list         go to state 220
    optional_field_annotation      go to state 370
    function_argument_declaration  go to state 622


State 428

  123 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 123 (optional_function_argument_list)


State 429

  125 optional_function_type: ':' type_declaration .
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 125 (optional_function_type)


State 430

  245 expressions: expressions error .

    $default  reduce using rule 245 (expressions)


State 431

  804 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    '<'  shift, and go to state 623


State 432

  807 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    '<'  shift, and go to state 624


State 433

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 625
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 434

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 435

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 436

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 626


State 437

  421 expr: "true" .

    $default  reduce using rule 421 (expr)


State 438

  422 expr: "false" .

    $default  reduce using rule 422 (expr)


State 439

  273 expr_new: "new" . new_type_declaration
  274         | "new" . new_type_declaration '(' ')'
  275         | "new" . new_type_declaration '(' expr_list ')'
  276         | "new" . new_type_declaration '(' make_struct_single ')'
  277         | "new" . make_decl

    "struct"               shift, and go to state 431
    "class"                shift, and go to state 432
    "array"                shift, and go to state 442
    "table"                shift, and go to state 447
    "fixed_array"          shift, and go to state 461
    "default"              shift, and go to state 462
    "tuple"                shift, and go to state 464
    "variant"              shift, and go to state 465
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 480
    "[{"                   shift, and go to state 481
    "{{"                   shift, and go to state 482
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 493
    '<'                    shift, and go to state 627
    '['                    shift, and go to state 501

    name_in_namespace           go to state 351
    new_type_declaration        go to state 628
    structure_type_declaration  go to state 629
    make_decl                   go to state 630
    make_struct_decl            go to state 551
    make_tuple_call             go to state 552
    make_dim_decl               go to state 553
    make_table_decl             go to state 554
    array_comprehension         go to state 555


State 440

  319 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  320               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  321               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 631


State 441

  318 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 632


State 442

  828 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  831              | "array" . '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 633
    '('  shift, and go to state 634


State 443

  280 expression_return_no_pipe: "return" .
  281                          | "return" . expr_list
  282                          | "return" . "<-" expr_list
  284 expression_return: "return" . expr_pipe
  285                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 635
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 280 (expression_return_no_pipe)

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 636
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 637
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 638
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 639
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 444

  415 expr: "null" .

    $default  reduce using rule 415 (expr)


State 445

  278 expression_break: "break" .

    $default  reduce using rule 278 (expression_break)


State 446

  291 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 640


State 447

  842 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  843                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  844                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 641
    '('  shift, and go to state 642


State 448

  267 expression_delete: "delete" . expr
  268                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "explicit"                        shift, and go to state 643
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 644
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 449

  465 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 645


State 450

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 646
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 451

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 647


State 452

  309 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 648


State 453

  312 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 649


State 454

  466 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 650


State 455

  279 expression_continue: "continue" .

    $default  reduce using rule 279 (expression_continue)


State 456

  242 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 651


State 457

  315 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 652


State 458

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 653


State 459

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 654
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 655
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 460

   77 expression_unsafe: "unsafe" . expression_block
  497 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 286
    '('                    shift, and go to state 656

    expression_block  go to state 657


State 461

  832 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  835              | "fixed_array" . '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 658
    '('  shift, and go to state 659


State 462

  813 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95

    '<'  shift, and go to state 660


State 463

  658 basic_type_declaration: "bitfield" .

    $default  reduce using rule 658 (basic_type_declaration)


State 464

  819 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  822                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    '<'  shift, and go to state 661
    '('  shift, and go to state 662


State 465

  810 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    '<'  shift, and go to state 663


State 466

  467 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  468     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 664


State 467

  286 expression_yield_no_pipe: "yield" . expr
  287                         | "yield" . "<-" expr
  289 expression_yield: "yield" . expr_pipe
  290                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 665
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 666
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 638
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 667
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 468

  451 expr: "++" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 668
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 469

  452 expr: "--" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 669
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 470

  262 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 670

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 673


State 471

  260 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 670

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 674


State 472

  261 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 670

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 675


State 473

  499 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 676


State 474

  500 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 677


State 475

  501 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 678


State 476

  502 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 679


State 477

  503 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 680


State 478

  505 expr_mtag: "$c" . '(' expr ')' '(' ')'
  506          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 681


State 479

  504 expr_mtag: "..." .

    $default  reduce using rule 504 (expr_mtag)


State 480

  796 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  797                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  798                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  799                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  826 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  851 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 682
    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 683


State 481

  800 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  801                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  827 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  852 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 684
    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 685


State 482

  841 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  854 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 686
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 688
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table              go to state 689
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 483

  343 expr_numeric_const: "integer constant" .

    $default  reduce using rule 343 (expr_numeric_const)


State 484

  345 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 345 (expr_numeric_const)


State 485

  344 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 486

  346 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 346 (expr_numeric_const)


State 487

  347 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 347 (expr_numeric_const)


State 488

  348 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 348 (expr_numeric_const)


State 489

  349 expr_numeric_const: "double constant" .

    $default  reduce using rule 349 (expr_numeric_const)


State 490

  246 expr_keyword: "keyword" . expr expression_block
  255 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '<'                               shift, and go to state 690
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 691
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 491

  258 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 692


State 492

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 693


State 493

  840 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  853 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 694
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 695
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 696
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 494

  218 expression_block: "begin of code block" expressions "end of code block" .
  219                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 697

    $default  reduce using rule 218 (expression_block)


State 495

  222 expression_any: "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 496

  428 expr: '-' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 698
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 497

  427 expr: '+' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 699
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 498

  464 expr: '*' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 700
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 499

  426 expr: '~' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 701
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 500

  425 expr: '!' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 702
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 501

  825 make_dim_decl: '[' . expr_list optional_comma ']'
  849 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  850                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 703
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 704
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 705
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 502

  455 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 707
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 503

  327 block_or_lambda: '$' .

    $default  reduce using rule 327 (block_or_lambda)


State 504

  328 block_or_lambda: '@' .
  329                | '@' . '@'
  396 func_addr_expr: '@' . '@' func_addr_name
  399               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  402               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  514 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 708

    $default  reduce using rule 328 (block_or_lambda)


State 505

  419 expr: string_builder .

    $default  reduce using rule 419 (expr)


State 506

  418 expr: expr_reader .

    $default  reduce using rule 418 (expr)


State 507

  240 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 709


State 508

  241 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 710


State 509

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 711
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 510

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 712


State 511

  238 expression_any: expression_if_then_else .

    $default  reduce using rule 238 (expression_any)


State 512

  233 expression_any: expression_for_loop .

    $default  reduce using rule 233 (expression_any)


State 513

  230 expression_any: expression_unsafe .

    $default  reduce using rule 230 (expression_any)


State 514

  229 expression_any: expression_while_loop .

    $default  reduce using rule 229 (expression_any)


State 515

  231 expression_any: expression_with .

    $default  reduce using rule 231 (expression_any)


State 516

  232 expression_any: expression_with_alias .

    $default  reduce using rule 232 (expression_any)


State 517

  263 expr_pipe: expr_call_pipe .

    $default  reduce using rule 263 (expr_pipe)


State 518

  244 expressions: expressions expression_any .

    $default  reduce using rule 244 (expressions)


State 519

  224 expression_any: expr_keyword .

    $default  reduce using rule 224 (expression_any)


State 520

  221 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  498 expr: expression_keyword .

    '$'  shift, and go to state 503
    '@'  shift, and go to state 670

    '$'       [reduce using rule 498 (expr)]
    '@'       [reduce using rule 498 (expr)]
    $default  reduce using rule 498 (expr)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 714


State 521

  223 expression_any: expr_pipe .

    $default  reduce using rule 223 (expression_any)


State 522

  390 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  391                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  410 expr_call: name_in_namespace . '(' ')'
  411          | name_in_namespace . '(' make_struct_single ')'
  412          | name_in_namespace . '(' expr_list ')'
  416 expr: name_in_namespace .
  496     | name_in_namespace . "name"

    "name"  shift, and go to state 715
    '('     shift, and go to state 716

    "name"    [reduce using rule 416 (expr)]
    '('       [reduce using rule 416 (expr)]
    $default  reduce using rule 416 (expr)


State 523

  227 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 717


State 524

  489 expr: expr_new .

    $default  reduce using rule 489 (expr)


State 525

   70 expression_if_one_liner: expression_break .
  234 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 718

    $default  reduce using rule 70 (expression_if_one_liner)


State 526

   71 expression_if_one_liner: expression_continue .
  235 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 719

    $default  reduce using rule 71 (expression_if_one_liner)


State 527

   68 expression_if_one_liner: expression_return_no_pipe .
  283 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 720

    $default  reduce using rule 68 (expression_if_one_liner)


State 528

  236 expression_any: expression_return .

    $default  reduce using rule 236 (expression_any)


State 529

   69 expression_if_one_liner: expression_yield_no_pipe .
  288 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 721

    $default  reduce using rule 69 (expression_if_one_liner)


State 530

  237 expression_any: expression_yield .

    $default  reduce using rule 237 (expression_any)


State 531

  239 expression_any: expression_try_catch .

    $default  reduce using rule 239 (expression_any)


State 532

  305 expression_let: kwd_let . optional_in_scope let_variable_declaration
  306               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 722

    $default  reduce using rule 298 (optional_in_scope)

    optional_in_scope  go to state 723


State 533

  228 expression_any: expression_let .

    $default  reduce using rule 228 (expression_any)


State 534

  488 expr: expr_cast .

    $default  reduce using rule 488 (expr)


State 535

  487 expr: expr_type_decl .

    $default  reduce using rule 487 (expr)


State 536

  486 expr: expr_type_info .

    $default  reduce using rule 486 (expr)


State 537

  340 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 724


State 538

  492 expr: expr_full_block .

    $default  reduce using rule 492 (expr)


State 539

  417 expr: expr_numeric_const .

    $default  reduce using rule 417 (expr)


State 540

  226 expression_any: expr_assign . "end of expression"
  259 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 725
    "end of expression"  shift, and go to state 726


State 541

  225 expression_any: expr_assign_pipe .

    $default  reduce using rule 225 (expression_any)


State 542

  491 expr: expr_named_call .

    $default  reduce using rule 491 (expr)


State 543

  490 expr: expr_method_call .

    $default  reduce using rule 490 (expr)


State 544

  462 expr: func_addr_expr .

    $default  reduce using rule 462 (expr)


State 545

  423 expr: expr_field .

    $default  reduce using rule 423 (expr)


State 546

  463 expr: expr_call .

    $default  reduce using rule 463 (expr)


State 547

   67 expression_if_one_liner: expr .
  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  373 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  374                 | expr . "<-" expr_assign_pipe_right
  375                 | expr . "&=" expr_assign_pipe_right
  376                 | expr . "|=" expr_assign_pipe_right
  377                 | expr . "^=" expr_assign_pipe_right
  378                 | expr . "&&=" expr_assign_pipe_right
  379                 | expr . "||=" expr_assign_pipe_right
  380                 | expr . "^^=" expr_assign_pipe_right
  381                 | expr . "+=" expr_assign_pipe_right
  382                 | expr . "-=" expr_assign_pipe_right
  383                 | expr . "*=" expr_assign_pipe_right
  384                 | expr . "/=" expr_assign_pipe_right
  385                 | expr . "%=" expr_assign_pipe_right
  386                 | expr . "<<=" expr_assign_pipe_right
  387                 | expr . ">>=" expr_assign_pipe_right
  388                 | expr . "<<<=" expr_assign_pipe_right
  389                 | expr . ">>>=" expr_assign_pipe_right
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 727
    "as"    shift, and go to state 728
    "+="    shift, and go to state 729
    "-="    shift, and go to state 730
    "/="    shift, and go to state 731
    "*="    shift, and go to state 732
    "%="    shift, and go to state 733
    "&="    shift, and go to state 734
    "|="    shift, and go to state 735
    "^="    shift, and go to state 736
    "<<"    shift, and go to state 737
    ">>"    shift, and go to state 738
    "++"    shift, and go to state 739
    "--"    shift, and go to state 740
    "<="    shift, and go to state 741
    "<<="   shift, and go to state 742
    ">>="   shift, and go to state 743
    ">="    shift, and go to state 744
    "=="    shift, and go to state 745
    "!="    shift, and go to state 746
    "->"    shift, and go to state 747
    "<-"    shift, and go to state 748
    "??"    shift, and go to state 749
    "?."    shift, and go to state 750
    "?["    shift, and go to state 751
    "<|"    shift, and go to state 752
    "|>"    shift, and go to state 753
    ":="    shift, and go to state 754
    "<<<"   shift, and go to state 755
    ">>>"   shift, and go to state 756
    "<<<="  shift, and go to state 757
    ">>>="  shift, and go to state 758
    "&&"    shift, and go to state 759
    "||"    shift, and go to state 760
    "^^"    shift, and go to state 761
    "&&="   shift, and go to state 762
    "||="   shift, and go to state 763
    "^^="   shift, and go to state 764
    ".."    shift, and go to state 765
    '='     shift, and go to state 766
    '?'     shift, and go to state 767
    '|'     shift, and go to state 768
    '^'     shift, and go to state 769
    '&'     shift, and go to state 770
    '<'     shift, and go to state 771
    '>'     shift, and go to state 772
    '-'     shift, and go to state 773
    '+'     shift, and go to state 774
    '*'     shift, and go to state 775
    '/'     shift, and go to state 776
    '%'     shift, and go to state 777
    '.'     shift, and go to state 778
    '['     shift, and go to state 779
    '$'     shift, and go to state 503
    '@'     shift, and go to state 670

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 548

  424 expr: expr_mtag .

    $default  reduce using rule 424 (expr)


State 549

  413 expr_call: basic_type_declaration . '(' ')'
  414          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 781


State 550

  420 expr: make_decl .

    $default  reduce using rule 420 (expr)


State 551

  766 make_decl: make_struct_decl .

    $default  reduce using rule 766 (make_decl)


State 552

  770 make_decl: make_tuple_call .

    $default  reduce using rule 770 (make_decl)


State 553

  767 make_decl: make_dim_decl .

    $default  reduce using rule 767 (make_decl)


State 554

  768 make_decl: make_table_decl .

    $default  reduce using rule 768 (make_decl)


State 555

  769 make_decl: array_comprehension .

    $default  reduce using rule 769 (make_decl)


State 556

  590 enum_list: enum_list "name" . "end of expression"
  591          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 782
    '='                  shift, and go to state 783


State 557

  589 enum_list: enum_list "end of expression" .

    $default  reduce using rule 589 (enum_list)


State 558

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 784


State 559

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 588 (enum_list)

    enum_list  go to state 785


State 560

  613 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 613 (optional_structure_parent)


State 561

  531 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  533                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  535                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  536                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  623 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 786
    '['                  shift, and go to state 787

    "def"     reduce using rule 119 (optional_annotation_list)
    $default  reduce using rule 530 ($@34)

    optional_annotation_list  go to state 788
    $@34                      go to state 789


State 562

  579 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 579 (global_variable_declaration_list)


State 563

  516 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 516 (optional_field_annotation)


State 564

  497 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 656


State 565

  255 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 690


State 566

  498 expr: expression_keyword .

    $default  reduce using rule 498 (expr)


State 567

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  568 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 790


State 568

  569 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 569 (let_variable_name_with_pos_list)


State 569

  570 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  571                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 791

    $default  reduce using rule 570 (let_variable_name_with_pos_list)


State 570

  572 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  573                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  574                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 406
    "implicit"           shift, and go to state 407
    "explicit"           shift, and go to state 408
    "=="                 shift, and go to state 409
    "<-"                 shift, and go to state 571
    "??"                 shift, and go to state 410
    ":="                 shift, and go to state 572
    "end of expression"  shift, and go to state 792
    '='                  shift, and go to state 573
    '?'                  shift, and go to state 411
    '&'                  shift, and go to state 412
    '-'                  shift, and go to state 413
    '['                  shift, and go to state 414
    '#'                  shift, and go to state 415

    copy_or_move_or_clone  go to state 793
    dim_list               go to state 416


State 571

  563 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 563 (copy_or_move_or_clone)


State 572

  564 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 564 (copy_or_move_or_clone)


State 573

  562 copy_or_move_or_clone: '=' .

    $default  reduce using rule 562 (copy_or_move_or_clone)


State 574

  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  576                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 794
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 638
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 795
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 575

  691 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 796


State 576

  714 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 797


State 577

  717 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    table_type_pair              go to state 798
    type_declaration_no_options  go to state 356
    type_declaration             go to state 799


State 578

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  692 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 800


State 579

  720 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 801


State 580

  710 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 802


State 581

  669 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 803


State 582

  678 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 804

    bitfield_bits  go to state 805


State 583

  724 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 806


State 584

  727 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 807


State 585

  731 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 808


State 586

  734 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 809


State 587

  738 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 810


State 588

  741 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 811


State 589

  744 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 608
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    tuple_type                   go to state 812
    tuple_type_list              go to state 813
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 611


State 590

  747 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 613

    variant_type       go to state 814
    variant_type_list  go to state 815


State 591

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  670 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 816


State 592

  695 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 694 ($@51)

    $@51  go to state 817


State 593

  693 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 818
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 819
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 594

  705 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 705 (type_declaration_no_options)


State 595

  706 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 706 (type_declaration_no_options)


State 596

  699 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 699 (type_declaration_no_options)


State 597

  701 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 701 (type_declaration_no_options)


State 598

  696 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 820


State 599

  704 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 704 (type_declaration_no_options)


State 600

  688 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 601

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  681 dim_list: '[' expr . ']'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ']'    shift, and go to state 821


State 602

  682 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 822
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 603

  750 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 750 (type_declaration)


State 604

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  749 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    $default  reduce using rule 749 (type_declaration)

    dim_list  go to state 416


State 605

  675 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 823


State 606

  674 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 674 (bitfield_alias_bits)


State 607

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 824


State 608

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"
  542 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 825

    $default  reduce using rule 264 (name_in_namespace)


State 609

  546 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 546 (tuple_alias_type_list)


State 610

  547 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 826


State 611

  541 tuple_type: type_declaration .
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 541 (tuple_type)


State 612

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 827


State 613

  548 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 828


State 614

  552 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 552 (variant_alias_type_list)


State 615

  553 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 829


State 616

  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 830


State 617

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  538 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 831


State 618

  628 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 832


State 619

  627 variable_name_with_pos_list: "name" .
  629                            | "name" . "aka" "name"

    "aka"  shift, and go to state 833

    $default  reduce using rule 627 (variable_name_with_pos_list)


State 620

  537 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 537 (function_argument_declaration)


State 621

  556 variable_declaration: variable_name_with_pos_list .
  557                     | variable_name_with_pos_list . '&'
  558                     | variable_name_with_pos_list . ':' type_declaration
  559                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  560                     | variable_name_with_pos_list . copy_or_move expr
  561                     | variable_name_with_pos_list . copy_or_move expr_pipe
  630 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  631                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 834
    ','   shift, and go to state 835
    '='   shift, and go to state 836
    ':'   shift, and go to state 837
    '&'   shift, and go to state 838

    $default  reduce using rule 556 (variable_declaration)

    copy_or_move  go to state 839


State 622

  540 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 540 (function_argument_list)


State 623

  804 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    $default  reduce using rule 802 ($@88)

    $@88  go to state 840


State 624

  807 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    $default  reduce using rule 805 ($@90)

    $@90  go to state 841


State 625

   78 expression_while_loop: "while" expr . expression_block
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 727
    "as"                   shift, and go to state 728
    "<<"                   shift, and go to state 737
    ">>"                   shift, and go to state 738
    "++"                   shift, and go to state 739
    "--"                   shift, and go to state 740
    "<="                   shift, and go to state 741
    ">="                   shift, and go to state 744
    "=="                   shift, and go to state 745
    "!="                   shift, and go to state 746
    "->"                   shift, and go to state 747
    "??"                   shift, and go to state 749
    "?."                   shift, and go to state 750
    "?["                   shift, and go to state 751
    "<|"                   shift, and go to state 752
    "|>"                   shift, and go to state 753
    "<<<"                  shift, and go to state 755
    ">>>"                  shift, and go to state 756
    "&&"                   shift, and go to state 759
    "||"                   shift, and go to state 760
    "^^"                   shift, and go to state 761
    ".."                   shift, and go to state 765
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 767
    '|'                    shift, and go to state 768
    '^'                    shift, and go to state 769
    '&'                    shift, and go to state 770
    '<'                    shift, and go to state 771
    '>'                    shift, and go to state 772
    '-'                    shift, and go to state 773
    '+'                    shift, and go to state 774
    '*'                    shift, and go to state 775
    '/'                    shift, and go to state 776
    '%'                    shift, and go to state 777
    '.'                    shift, and go to state 778
    '['                    shift, and go to state 779

    expression_block  go to state 842


State 626

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 843


State 627

  271 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 269 ($@11)

    $@11  go to state 844


State 628

  273 expr_new: "new" new_type_declaration .
  274         | "new" new_type_declaration . '(' ')'
  275         | "new" new_type_declaration . '(' expr_list ')'
  276         | "new" new_type_declaration . '(' make_struct_single ')'

    '('  shift, and go to state 845

    '('       [reduce using rule 273 (expr_new)]
    $default  reduce using rule 273 (expr_new)


State 629

  272 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 272 (new_type_declaration)


State 630

  277 expr_new: "new" make_decl .

    $default  reduce using rule 277 (expr_new)


State 631

  319 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  320               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  321               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 846


State 632

  318 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 316 ($@19)

    $@19  go to state 847


State 633

  831 make_dim_decl: "array" '<' . $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 829 ($@98)

    $@98  go to state 848


State 634

  828 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 849
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 635

  282 expression_return_no_pipe: "return" "<-" . expr_list
  285 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 850
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 851
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 638
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 639
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 636

  284 expression_return: "return" expr_pipe .

    $default  reduce using rule 284 (expression_return)


State 637

  281 expression_return_no_pipe: "return" expr_list .
  323 expr_list: expr_list . ',' expr

    ','  shift, and go to state 852

    $default  reduce using rule 281 (expression_return_no_pipe)


State 638

  259 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 725


State 639

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  322 expr_list: expr .
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 727
    "as"    shift, and go to state 728
    "+="    shift, and go to state 853
    "-="    shift, and go to state 854
    "/="    shift, and go to state 855
    "*="    shift, and go to state 856
    "%="    shift, and go to state 857
    "&="    shift, and go to state 858
    "|="    shift, and go to state 859
    "^="    shift, and go to state 860
    "<<"    shift, and go to state 737
    ">>"    shift, and go to state 738
    "++"    shift, and go to state 739
    "--"    shift, and go to state 740
    "<="    shift, and go to state 741
    "<<="   shift, and go to state 861
    ">>="   shift, and go to state 862
    ">="    shift, and go to state 744
    "=="    shift, and go to state 745
    "!="    shift, and go to state 746
    "->"    shift, and go to state 747
    "<-"    shift, and go to state 863
    "??"    shift, and go to state 749
    "?."    shift, and go to state 750
    "?["    shift, and go to state 751
    "<|"    shift, and go to state 752
    "|>"    shift, and go to state 753
    ":="    shift, and go to state 754
    "<<<"   shift, and go to state 755
    ">>>"   shift, and go to state 756
    "<<<="  shift, and go to state 864
    ">>>="  shift, and go to state 865
    "&&"    shift, and go to state 759
    "||"    shift, and go to state 760
    "^^"    shift, and go to state 761
    "&&="   shift, and go to state 866
    "||="   shift, and go to state 867
    "^^="   shift, and go to state 868
    ".."    shift, and go to state 765
    '='     shift, and go to state 869
    '?'     shift, and go to state 767
    '|'     shift, and go to state 768
    '^'     shift, and go to state 769
    '&'     shift, and go to state 770
    '<'     shift, and go to state 771
    '>'     shift, and go to state 772
    '-'     shift, and go to state 773
    '+'     shift, and go to state 774
    '*'     shift, and go to state 775
    '/'     shift, and go to state 776
    '%'     shift, and go to state 777
    '.'     shift, and go to state 778
    '['     shift, and go to state 779
    '$'     shift, and go to state 503
    '@'     shift, and go to state 670

    " <|"     reduce using rule 350 (expr_assign)
    $default  reduce using rule 322 (expr_list)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 640

  291 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 870


State 641

  843 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  844                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 871


State 642

  842 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 695
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 872
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 643

  268 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 873
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 644

  267 expression_delete: "delete" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 267 (expression_delete)


State 645

  465 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 874
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 646

   79 expression_with: "with" expr . expression_block
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 727
    "as"                   shift, and go to state 728
    "<<"                   shift, and go to state 737
    ">>"                   shift, and go to state 738
    "++"                   shift, and go to state 739
    "--"                   shift, and go to state 740
    "<="                   shift, and go to state 741
    ">="                   shift, and go to state 744
    "=="                   shift, and go to state 745
    "!="                   shift, and go to state 746
    "->"                   shift, and go to state 747
    "??"                   shift, and go to state 749
    "?."                   shift, and go to state 750
    "?["                   shift, and go to state 751
    "<|"                   shift, and go to state 752
    "|>"                   shift, and go to state 753
    "<<<"                  shift, and go to state 755
    ">>>"                  shift, and go to state 756
    "&&"                   shift, and go to state 759
    "||"                   shift, and go to state 760
    "^^"                   shift, and go to state 761
    ".."                   shift, and go to state 765
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 767
    '|'                    shift, and go to state 768
    '^'                    shift, and go to state 769
    '&'                    shift, and go to state 770
    '<'                    shift, and go to state 771
    '>'                    shift, and go to state 772
    '-'                    shift, and go to state 773
    '+'                    shift, and go to state 774
    '*'                    shift, and go to state 775
    '/'                    shift, and go to state 776
    '%'                    shift, and go to state 777
    '.'                    shift, and go to state 778
    '['                    shift, and go to state 779

    expression_block  go to state 875


State 647

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 876


State 648

  309 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 307 ($@13)

    $@13  go to state 877


State 649

  312 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 310 ($@15)

    $@15  go to state 878


State 650

  466 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 879
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 651

  242 expression_any: "pass" "end of expression" .

    $default  reduce using rule 242 (expression_any)


State 652

  315 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 313 ($@17)

    $@17  go to state 880


State 653

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 881


State 654

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 882


State 655

   56 expression_goto: "goto" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 56 (expression_goto)


State 656

  497 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 883
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 657

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 658

  835 make_dim_decl: "fixed_array" '<' . $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 833 ($@100)

    $@100  go to state 884


State 659

  832 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 885
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 660

  813 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95

    $default  reduce using rule 811 ($@94)

    $@94  go to state 886


State 661

  822 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    $default  reduce using rule 820 ($@96)

    $@96  go to state 887


State 662

  819 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 888
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 663

  810 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    $default  reduce using rule 808 ($@92)

    $@92  go to state 889


State 664

  467 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  468     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 890


State 665

  287 expression_yield_no_pipe: "yield" "<-" . expr
  290 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 891
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 638
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 892
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 666

  289 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 289 (expression_yield)


State 667

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  286 expression_yield_no_pipe: "yield" expr .
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 727
    "as"    shift, and go to state 728
    "+="    shift, and go to state 853
    "-="    shift, and go to state 854
    "/="    shift, and go to state 855
    "*="    shift, and go to state 856
    "%="    shift, and go to state 857
    "&="    shift, and go to state 858
    "|="    shift, and go to state 859
    "^="    shift, and go to state 860
    "<<"    shift, and go to state 737
    ">>"    shift, and go to state 738
    "++"    shift, and go to state 739
    "--"    shift, and go to state 740
    "<="    shift, and go to state 741
    "<<="   shift, and go to state 861
    ">>="   shift, and go to state 862
    ">="    shift, and go to state 744
    "=="    shift, and go to state 745
    "!="    shift, and go to state 746
    "->"    shift, and go to state 747
    "<-"    shift, and go to state 863
    "??"    shift, and go to state 749
    "?."    shift, and go to state 750
    "?["    shift, and go to state 751
    "<|"    shift, and go to state 752
    "|>"    shift, and go to state 753
    ":="    shift, and go to state 754
    "<<<"   shift, and go to state 755
    ">>>"   shift, and go to state 756
    "<<<="  shift, and go to state 864
    ">>>="  shift, and go to state 865
    "&&"    shift, and go to state 759
    "||"    shift, and go to state 760
    "^^"    shift, and go to state 761
    "&&="   shift, and go to state 866
    "||="   shift, and go to state 867
    "^^="   shift, and go to state 868
    ".."    shift, and go to state 765
    '='     shift, and go to state 869
    '?'     shift, and go to state 767
    '|'     shift, and go to state 768
    '^'     shift, and go to state 769
    '&'     shift, and go to state 770
    '<'     shift, and go to state 771
    '>'     shift, and go to state 772
    '-'     shift, and go to state 773
    '+'     shift, and go to state 774
    '*'     shift, and go to state 775
    '/'     shift, and go to state 776
    '%'     shift, and go to state 777
    '.'     shift, and go to state 778
    '['     shift, and go to state 779
    '$'     shift, and go to state 503
    '@'     shift, and go to state 670

    " <|"     reduce using rule 350 (expr_assign)
    $default  reduce using rule 286 (expression_yield_no_pipe)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 668

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  451     | "++" expr .
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 451 (expr)


State 669

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  452     | "--" expr .
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 452 (expr)


State 670

  328 block_or_lambda: '@' .
  329                | '@' . '@'

    '@'  shift, and go to state 893

    $default  reduce using rule 328 (block_or_lambda)


State 671

  338 expr_block: expression_block .

    $default  reduce using rule 338 (expr_block)


State 672

  339 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 894


State 673

  262 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 262 (expr_pipe)


State 674

  260 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 260 (expr_pipe)


State 675

  261 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 261 (expr_pipe)


State 676

  499 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 895
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 677

  500 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 896
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 678

  501 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 897
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 679

  502 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 898
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 680

  503 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 899
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 681

  505 expr_mtag: "$c" '(' . expr ')' '(' ')'
  506          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 900
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 682

  851 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 901


State 683

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  796 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  797                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  798                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  799                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  826 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 406
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "where"                           shift, and go to state 902
    "reinterpret"                     shift, and go to state 457
    "implicit"                        shift, and go to state 407
    "explicit"                        shift, and go to state 408
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "=="                              shift, and go to state 409
    "??"                              shift, and go to state 410
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 903
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 904
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '?'                               shift, and go to state 411
    '&'                               shift, and go to state 412
    '-'                               shift, and go to state 905
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 906
    '('                               shift, and go to state 907
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 415

    $default  reduce using rule 782 (optional_block)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 908
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    dim_list                go to state 416
    make_decl               go to state 550
    make_struct_fields      go to state 909
    make_struct_dim         go to state 910
    optional_block          go to state 911
    make_struct_decl        go to state 551
    make_tuple              go to state 912
    make_tuple_call         go to state 552
    make_dim                go to state 913
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 684

  852 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 914


State 685

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  800 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  801                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  827 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 406
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "implicit"                        shift, and go to state 407
    "explicit"                        shift, and go to state 408
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "=="                              shift, and go to state 409
    "??"                              shift, and go to state 410
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 903
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 904
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '?'                               shift, and go to state 411
    '&'                               shift, and go to state 412
    '-'                               shift, and go to state 905
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 906
    '('                               shift, and go to state 915
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 415

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 908
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    dim_list                go to state 416
    make_decl               go to state 550
    make_struct_fields      go to state 909
    make_struct_dim         go to state 916
    make_struct_decl        go to state 551
    make_tuple              go to state 912
    make_tuple_call         go to state 552
    make_dim                go to state 917
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 686

  854 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 918


State 687

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  817 make_map_tuple: expr . "=>" expr
  818               | expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "=>"   shift, and go to state 919
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 818 (make_map_tuple)


State 688

  836 make_table: make_map_tuple .

    $default  reduce using rule 836 (make_table)


State 689

  837 make_table: make_table . "end of expression" make_map_tuple
  841 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 920
    "end of expression"  shift, and go to state 921
    ";}}"                shift, and go to state 922

    optional_trailing_semicolon_cur_cur  go to state 923


State 690

  255 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 253 ($@7)

    $@7  go to state 924


State 691

  246 expr_keyword: "keyword" expr . expression_block
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 727
    "as"                   shift, and go to state 728
    "<<"                   shift, and go to state 737
    ">>"                   shift, and go to state 738
    "++"                   shift, and go to state 739
    "--"                   shift, and go to state 740
    "<="                   shift, and go to state 741
    ">="                   shift, and go to state 744
    "=="                   shift, and go to state 745
    "!="                   shift, and go to state 746
    "->"                   shift, and go to state 747
    "??"                   shift, and go to state 749
    "?."                   shift, and go to state 750
    "?["                   shift, and go to state 751
    "<|"                   shift, and go to state 752
    "|>"                   shift, and go to state 753
    "<<<"                  shift, and go to state 755
    ">>>"                  shift, and go to state 756
    "&&"                   shift, and go to state 759
    "||"                   shift, and go to state 760
    "^^"                   shift, and go to state 761
    ".."                   shift, and go to state 765
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 767
    '|'                    shift, and go to state 768
    '^'                    shift, and go to state 769
    '&'                    shift, and go to state 770
    '<'                    shift, and go to state 771
    '>'                    shift, and go to state 772
    '-'                    shift, and go to state 773
    '+'                    shift, and go to state 774
    '*'                    shift, and go to state 775
    '/'                    shift, and go to state 776
    '%'                    shift, and go to state 777
    '.'                    shift, and go to state 778
    '['                    shift, and go to state 779

    expression_block  go to state 925


State 692

  258 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 256 ($@9)

    $@9  go to state 926


State 693

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 927
    "{"                   shift, and go to state 928

    character_sequence  go to state 929


State 694

  853 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 930


State 695

  838 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 838 (expr_map_tuple_list)


State 696

  839 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  840 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 931

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 932


State 697

  219 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 933


State 698

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  428 expr: '-' expr .
  429     | expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 428 (expr)


State 699

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  427 expr: '+' expr .
  429     | expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 427 (expr)


State 700

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  464     | '*' expr .
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 464 (expr)


State 701

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  426 expr: '~' expr .
  429     | expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 426 (expr)


State 702

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  425 expr: '!' expr .
  429     | expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 425 (expr)


State 703

  849 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 934


State 704

  850 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 935


State 705

  323 expr_list: expr_list . ',' expr
  825 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 936

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 937


State 706

  322 expr_list: expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 322 (expr_list)


State 707

  323 expr_list: expr_list . ',' expr
  455 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 936

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 938


State 708

  329 block_or_lambda: '@' '@' .
  396 func_addr_expr: '@' '@' . func_addr_name
  399               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  402               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  514 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 939
    "$c"    shift, and go to state 940
    "name"  shift, and go to state 59
    '<'     shift, and go to state 941

    $default  reduce using rule 329 (block_or_lambda)

    name_in_namespace  go to state 942
    func_addr_name     go to state 943


State 709

  240 expression_any: expression_label "end of expression" .

    $default  reduce using rule 240 (expression_any)


State 710

  241 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 241 (expression_any)


State 711

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 727
    "as"                   shift, and go to state 728
    "<<"                   shift, and go to state 737
    ">>"                   shift, and go to state 738
    "++"                   shift, and go to state 739
    "--"                   shift, and go to state 740
    "<="                   shift, and go to state 741
    ">="                   shift, and go to state 744
    "=="                   shift, and go to state 745
    "!="                   shift, and go to state 746
    "->"                   shift, and go to state 747
    "??"                   shift, and go to state 749
    "?."                   shift, and go to state 750
    "?["                   shift, and go to state 751
    "<|"                   shift, and go to state 752
    "|>"                   shift, and go to state 753
    "<<<"                  shift, and go to state 755
    ">>>"                  shift, and go to state 756
    "&&"                   shift, and go to state 759
    "||"                   shift, and go to state 760
    "^^"                   shift, and go to state 761
    ".."                   shift, and go to state 765
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 767
    '|'                    shift, and go to state 768
    '^'                    shift, and go to state 769
    '&'                    shift, and go to state 770
    '<'                    shift, and go to state 771
    '>'                    shift, and go to state 772
    '-'                    shift, and go to state 773
    '+'                    shift, and go to state 774
    '*'                    shift, and go to state 775
    '/'                    shift, and go to state 776
    '%'                    shift, and go to state 777
    '.'                    shift, and go to state 778
    '['                    shift, and go to state 779

    expression_block  go to state 944


State 712

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 73 ($@3)

    $@3  go to state 945


State 713

  342 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 341 ($@21)

    $@21  go to state 946


State 714

  221 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 221 (expr_call_pipe)


State 715

  496 expr: name_in_namespace "name" .

    $default  reduce using rule 496 (expr)


State 716

  390 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  391                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  410 expr_call: name_in_namespace '(' . ')'
  411          | name_in_namespace '(' . make_struct_single ')'
  412          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 903
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 904
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 947
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 948
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 949
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 950
    make_struct_single      go to state 951
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 717

  227 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 227 (expression_any)


State 718

  234 expression_any: expression_break "end of expression" .

    $default  reduce using rule 234 (expression_any)


State 719

  235 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 720

  283 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 283 (expression_return)


State 721

  288 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 288 (expression_yield)


State 722

  297 optional_in_scope: "inscope" .

    $default  reduce using rule 297 (optional_in_scope)


State 723

  305 expression_let: kwd_let optional_in_scope . let_variable_declaration
  306               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 305
    "[["    shift, and go to state 952
    "name"  shift, and go to state 306
    '('     shift, and go to state 953

    tuple_expansion_variable_declaration  go to state 954
    let_variable_name_with_pos_list       go to state 307
    let_variable_declaration              go to state 955


State 724

  340 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 956

    $default  reduce using rule 336 (optional_capture_list)

    optional_capture_list  go to state 957


State 725

  259 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 670

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 958


State 726

  226 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 727

  473 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr "is" . basic_type_declaration
  475     | expr "is" . "name"
  513 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 959
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 960
    "name"      shift, and go to state 961

    basic_type_declaration  go to state 962


State 728

  476 expr: expr "as" . "name"
  479     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  480     | expr "as" . basic_type_declaration
  511 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 963
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 964
    "name"      shift, and go to state 965

    basic_type_declaration  go to state 966


State 729

  360 expr_assign: expr "+=" . expr
  381 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 971
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 972
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 730

  361 expr_assign: expr "-=" . expr
  382 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 973
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 974
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 731

  363 expr_assign: expr "/=" . expr
  384 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 975
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 976
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 732

  362 expr_assign: expr "*=" . expr
  383 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 977
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 978
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 733

  364 expr_assign: expr "%=" . expr
  385 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 979
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 980
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 734

  354 expr_assign: expr "&=" . expr
  375 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 981
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 982
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 735

  355 expr_assign: expr "|=" . expr
  376 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 983
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 984
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 736

  356 expr_assign: expr "^=" . expr
  377 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 985
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 986
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 737

  429 expr: expr "<<" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 987
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 738

  430 expr: expr ">>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 988
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 739

  453 expr: expr "++" .

    $default  reduce using rule 453 (expr)


State 740

  454 expr: expr "--" .

    $default  reduce using rule 454 (expr)


State 741

  442 expr: expr "<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 989
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 742

  365 expr_assign: expr "<<=" . expr
  386 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 990
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 991
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 743

  366 expr_assign: expr ">>=" . expr
  387 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 992
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 993
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 744

  443 expr: expr ">=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 994
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 745

  440 expr: expr "==" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 995
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 746

  441 expr: expr "!=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 996
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 747

  392 expr_method_call: expr "->" . "name" '(' ')'
  393                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 997


State 748

  352 expr_assign: expr "<-" . expr
  374 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 998
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 999
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 749

  469 expr: expr "??" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1000
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 750

  460 expr: expr "?." . "name"
  508 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1001
    "name"  shift, and go to state 1002


State 751

  458 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1003
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 752

  493 expr: expr "<|" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1004
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 753

  494 expr: expr "|>" . expr
  495     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1005
    expr_mtag               go to state 548
    basic_type_declaration  go to state 1006
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 754

  353 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1007
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 755

  431 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1008
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 756

  432 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1009
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 757

  367 expr_assign: expr "<<<=" . expr
  388 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1010
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1011
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 758

  368 expr_assign: expr ">>>=" . expr
  389 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1012
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1013
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 759

  447 expr: expr "&&" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1014
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 760

  448 expr: expr "||" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1015
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 761

  449 expr: expr "^^" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1016
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 762

  357 expr_assign: expr "&&=" . expr
  378 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1017
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1018
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 763

  358 expr_assign: expr "||=" . expr
  379 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1019
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1020
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 764

  359 expr_assign: expr "^^=" . expr
  380 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1022
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 765

  450 expr: expr ".." . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1023
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 766

  351 expr_assign: expr '=' . expr
  373 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 967
    "@ <|"                            shift, and go to state 968
    "@@ <|"                           shift, and go to state 969
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 970
    expression_keyword      go to state 520
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign_pipe_right  go to state 1024
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1025
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 767

  470 expr: expr '?' . expr ':' expr
  481     | expr '?' . "as" "name"
  484     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr '?' . "as" basic_type_declaration
  512 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "as"                              shift, and go to state 1026
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1027
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 768

  445 expr: expr '|' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1028
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 769

  446 expr: expr '^' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1029
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 770

  444 expr: expr '&' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1030
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 771

  438 expr: expr '<' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1031
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 772

  439 expr: expr '>' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1032
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 773

  434 expr: expr '-' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1033
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 774

  433 expr: expr '+' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1034
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 775

  435 expr: expr '*' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1035
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 776

  436 expr: expr '/' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1036
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 777

  437 expr: expr '%' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1037
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 778

  403 expr_field: expr '.' . "name"
  404           | expr '.' . '.' "name"
  405           | expr '.' . "name" '(' ')'
  406           | expr '.' . "name" '(' expr_list ')'
  409           | expr '.' . $@26 error $@27
  457 expr: expr '.' . '[' expr ']'
  459     | expr '.' . "?[" expr ']'
  461     | expr '.' . "?." "name"
  507 expr_mtag: expr '.' . "$f" '(' expr ')'
  509          | expr '.' . '.' "$f" '(' expr ')'
  510          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1038
    "?["    shift, and go to state 1039
    "$f"    shift, and go to state 1040
    "name"  shift, and go to state 1041
    '.'     shift, and go to state 1042
    '['     shift, and go to state 1043

    $default  reduce using rule 407 ($@26)

    $@26  go to state 1044


State 779

  456 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1045
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 780

  220 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 220 (expr_call_pipe)


State 781

  413 expr_call: basic_type_declaration '(' . ')'
  414          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1046
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1047
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 782

  590 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 590 (enum_list)


State 783

  591 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1048
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 784

  608 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 608 (enum_declaration)


State 785

  589 enum_list: enum_list . "end of expression"
  590          | enum_list . "name" "end of expression"
  591          | enum_list . "name" '=' expr "end of expression"
  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 556
    "end of expression"  shift, and go to state 557

    $default  reduce using rule 610 ($@44)

    $@44  go to state 1049


State 786

  623 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 623 (optional_struct_variable_declaration_list)


State 787

  120 optional_annotation_list: '[' . annotation_list ']'
  536 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1050
    name_in_namespace             go to state 70


State 788

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  535                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1051


State 789

  531 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 218
    '@'   shift, and go to state 219

    $default  reduce using rule 515 (optional_field_annotation)

    metadata_argument_list          go to state 220
    optional_field_annotation       go to state 1052
    structure_variable_declaration  go to state 1053


State 790

  568 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 568 (let_variable_name_with_pos_list)


State 791

  571 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1054


State 792

  572 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 572 (let_variable_declaration)


State 793

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  574                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 1055
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 638
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1056
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 794

  576 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 576 (let_variable_declaration)


State 795

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "+="                 shift, and go to state 853
    "-="                 shift, and go to state 854
    "/="                 shift, and go to state 855
    "*="                 shift, and go to state 856
    "%="                 shift, and go to state 857
    "&="                 shift, and go to state 858
    "|="                 shift, and go to state 859
    "^="                 shift, and go to state 860
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    "<<="                shift, and go to state 861
    ">>="                shift, and go to state 862
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "<-"                 shift, and go to state 863
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    ":="                 shift, and go to state 754
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "<<<="               shift, and go to state 864
    ">>>="               shift, and go to state 865
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    "&&="                shift, and go to state 866
    "||="                shift, and go to state 867
    "^^="                shift, and go to state 868
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1057
    '='                  shift, and go to state 869
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779
    '$'                  shift, and go to state 503
    '@'                  shift, and go to state 670

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 796

  691 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1058


State 797

  714 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1059


State 798

  717 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1060


State 799

  679 table_type_pair: type_declaration .
  680                | type_declaration . "end of expression" type_declaration
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 1061
    '|'                  shift, and go to state 417

    $default  reduce using rule 679 (table_type_pair)


State 800

  692 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 692 (type_declaration_no_options)


State 801

  720 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1062


State 802

  710 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1063


State 803

  669 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 669 (auto_type_declaration)


State 804

  671 bitfield_bits: "name" .

    $default  reduce using rule 671 (bitfield_bits)


State 805

  672 bitfield_bits: bitfield_bits . "end of expression" "name"
  678 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1064
    '>'                  shift, and go to state 1065


State 806

  724 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1066


State 807

  727 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1067


State 808

  731 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1068


State 809

  734 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1069


State 810

  738 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1070


State 811

  741 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1071


State 812

  543 tuple_type_list: tuple_type .

    $default  reduce using rule 543 (tuple_type_list)


State 813

  544 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  744 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 1072
    '>'                  shift, and go to state 1073


State 814

  549 variant_type_list: variant_type .

    $default  reduce using rule 549 (variant_type_list)


State 815

  550 variant_type_list: variant_type_list . "end of expression" variant_type
  747 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 1074
    '>'                  shift, and go to state 1075


State 816

  670 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 670 (auto_type_declaration)


State 817

  695 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1076
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1077


State 818

  693 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1078


State 819

  248 optional_expr_list: expr_list .
  323 expr_list: expr_list . ',' expr

    ','  shift, and go to state 852

    $default  reduce using rule 248 (optional_expr_list)


State 820

  696 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 696 (type_declaration_no_options)


State 821

  681 dim_list: '[' expr ']' .

    $default  reduce using rule 681 (dim_list)


State 822

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  682 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ']'    shift, and go to state 1079


State 823

  675 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 675 (bitfield_alias_bits)


State 824

  765 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 765 (bitfield_alias_declaration)


State 825

  542 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1080


State 826

  547 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 547 (tuple_alias_type_list)


State 827

  755 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 755 (tuple_alias_declaration)


State 828

  548 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1081


State 829

  553 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 553 (variant_alias_type_list)


State 830

  760 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 760 (variant_alias_declaration)


State 831

  538 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 538 (function_argument_declaration)


State 832

  628 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1082
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 833

  629 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1083


State 834

  555 copy_or_move: "<-" .

    $default  reduce using rule 555 (copy_or_move)


State 835

  630 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  631                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1084


State 836

  554 copy_or_move: '=' .

    $default  reduce using rule 554 (copy_or_move)


State 837

  558 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  559                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1085


State 838

  557 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 557 (variable_declaration)


State 839

  560 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  561                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expr_call_pipe          go to state 517
    expression_keyword      go to state 520
    expr_pipe               go to state 1086
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_assign             go to state 638
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1087
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 840

  804 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1088


State 841

  807 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1089


State 842

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 843

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  630 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  631                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1090
    ','   shift, and go to state 835


State 844

  271 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1091


State 845

  274 expr_new: "new" new_type_declaration '(' . ')'
  275         | "new" new_type_declaration '(' . expr_list ')'
  276         | "new" new_type_declaration '(' . make_struct_single ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 903
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 904
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1092
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1093
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 950
    make_struct_single      go to state 1094
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 846

  319 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  320               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  321               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '<'                               shift, and go to state 1095
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1096
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 847

  318 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1097


State 848

  831 make_dim_decl: "array" '<' $@98 . type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1098


State 849

  323 expr_list: expr_list . ',' expr
  828 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 936

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 1099


State 850

  285 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 285 (expression_return)


State 851

  282 expression_return_no_pipe: "return" "<-" expr_list .
  323 expr_list: expr_list . ',' expr

    ','  shift, and go to state 852

    $default  reduce using rule 282 (expression_return_no_pipe)


State 852

  323 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1100
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 853

  360 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1101
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 854

  361 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1102
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 855

  363 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1103
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 856

  362 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1104
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 857

  364 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1105
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 858

  354 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1106
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 859

  355 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1107
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 860

  356 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1108
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 861

  365 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1109
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 862

  366 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1110
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 863

  352 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1111
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 864

  367 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1112
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 865

  368 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1113
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 866

  357 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1114
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 867

  358 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1115
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 868

  359 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1116
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 869

  351 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1117
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 870

  291 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1118


State 871

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  843 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  844                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 406
    "implicit"           shift, and go to state 407
    "explicit"           shift, and go to state 408
    "=="                 shift, and go to state 409
    "??"                 shift, and go to state 410
    "end of expression"  shift, and go to state 1119
    '?'                  shift, and go to state 411
    '&'                  shift, and go to state 412
    '>'                  shift, and go to state 1120
    '-'                  shift, and go to state 413
    '['                  shift, and go to state 414
    '#'                  shift, and go to state 415

    dim_list  go to state 416


State 872

  839 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  842 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 931

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 1121


State 873

  268 expression_delete: "delete" "explicit" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 268 (expression_delete)


State 874

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  465     | "deref" '(' expr . ')'
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1122


State 875

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 876

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1123


State 877

  309 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1124


State 878

  312 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1125


State 879

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  466     | "addr" '(' expr . ')'
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1126


State 880

  315 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1127


State 881

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 882

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 883

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  497     | "unsafe" '(' expr . ')'
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1128


State 884

  835 make_dim_decl: "fixed_array" '<' $@100 . type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1129


State 885

  323 expr_list: expr_list . ',' expr
  832 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 936

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 1130


State 886

  813 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1131


State 887

  822 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1132


State 888

  323 expr_list: expr_list . ',' expr
  819 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 936

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 1133


State 889

  810 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1134


State 890

  467 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  468     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1135
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 891

  290 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 290 (expression_yield)


State 892

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  287 expression_yield_no_pipe: "yield" "<-" expr .
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 727
    "as"    shift, and go to state 728
    "+="    shift, and go to state 853
    "-="    shift, and go to state 854
    "/="    shift, and go to state 855
    "*="    shift, and go to state 856
    "%="    shift, and go to state 857
    "&="    shift, and go to state 858
    "|="    shift, and go to state 859
    "^="    shift, and go to state 860
    "<<"    shift, and go to state 737
    ">>"    shift, and go to state 738
    "++"    shift, and go to state 739
    "--"    shift, and go to state 740
    "<="    shift, and go to state 741
    "<<="   shift, and go to state 861
    ">>="   shift, and go to state 862
    ">="    shift, and go to state 744
    "=="    shift, and go to state 745
    "!="    shift, and go to state 746
    "->"    shift, and go to state 747
    "<-"    shift, and go to state 863
    "??"    shift, and go to state 749
    "?."    shift, and go to state 750
    "?["    shift, and go to state 751
    "<|"    shift, and go to state 752
    "|>"    shift, and go to state 753
    ":="    shift, and go to state 754
    "<<<"   shift, and go to state 755
    ">>>"   shift, and go to state 756
    "<<<="  shift, and go to state 864
    ">>>="  shift, and go to state 865
    "&&"    shift, and go to state 759
    "||"    shift, and go to state 760
    "^^"    shift, and go to state 761
    "&&="   shift, and go to state 866
    "||="   shift, and go to state 867
    "^^="   shift, and go to state 868
    ".."    shift, and go to state 765
    '='     shift, and go to state 869
    '?'     shift, and go to state 767
    '|'     shift, and go to state 768
    '^'     shift, and go to state 769
    '&'     shift, and go to state 770
    '<'     shift, and go to state 771
    '>'     shift, and go to state 772
    '-'     shift, and go to state 773
    '+'     shift, and go to state 774
    '*'     shift, and go to state 775
    '/'     shift, and go to state 776
    '%'     shift, and go to state 777
    '.'     shift, and go to state 778
    '['     shift, and go to state 779
    '$'     shift, and go to state 503
    '@'     shift, and go to state 670

    " <|"     reduce using rule 350 (expr_assign)
    $default  reduce using rule 287 (expression_yield_no_pipe)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 893

  329 block_or_lambda: '@' '@' .

    $default  reduce using rule 329 (block_or_lambda)


State 894

  339 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 956

    $default  reduce using rule 336 (optional_capture_list)

    optional_capture_list  go to state 1136


State 895

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  499 expr_mtag: "$$" '(' expr . ')'
  507          | expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1137


State 896

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  500 expr_mtag: "$i" '(' expr . ')'
  507          | expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1138


State 897

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  501 expr_mtag: "$v" '(' expr . ')'
  507          | expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1139


State 898

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  502 expr_mtag: "$b" '(' expr . ')'
  507          | expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1140


State 899

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  503 expr_mtag: "$a" '(' expr . ')'
  507          | expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1141


State 900

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  505 expr_mtag: "$c" '(' expr . ')' '(' ')'
  506          | "$c" '(' expr . ')' '(' expr_list ')'
  507          | expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1142


State 901

  630 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  631                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  851 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1143
    ','   shift, and go to state 835


State 902

  783 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 670

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1144


State 903

  775 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  776                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1145


State 904

  264 name_in_namespace: "name" .
  265                  | "name" . "::" "name"
  771 make_struct_fields: "name" . copy_or_move expr
  772                   | "name" . ":=" expr

    "<-"  shift, and go to state 834
    ":="  shift, and go to state 1146
    "::"  shift, and go to state 98
    '='   shift, and go to state 836

    $default  reduce using rule 264 (name_in_namespace)

    copy_or_move  go to state 1147


State 905

  428 expr: '-' . expr
  696 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  699                            | type_declaration_no_options '-' . "const"
  701                            | type_declaration_no_options '-' . '&'
  704                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "const"                           shift, and go to state 596
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '&'                               shift, and go to state 597
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 1148
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504
    '#'                               shift, and go to state 599

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 698
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 906

  681 dim_list: '[' . expr ']'
  688 type_declaration_no_options: type_declaration_no_options '[' . ']'
  825 make_dim_decl: '[' . expr_list optional_comma ']'
  849 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  850                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 703
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 704
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 600
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 705
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1149
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 907

  455 expr: '(' . expr_list optional_comma ')'
  798 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  799                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1150
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 707
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 908

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  814 make_tuple: expr .
  815           | expr . "=>" expr

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "=>"   shift, and go to state 1151
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 814 (make_tuple)


State 909

  773 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  774                   | make_struct_fields . ',' "name" ":=" expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  778                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  780 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1152

    $default  reduce using rule 780 (make_struct_dim)


State 910

  781 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  796 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 902
    "end of expression"  shift, and go to state 1153

    $default  reduce using rule 782 (optional_block)

    optional_block  go to state 1154


State 911

  797 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1155
    ",]]"  shift, and go to state 1156
    ']'    shift, and go to state 1157

    optional_trailing_delim_sqr_sqr  go to state 1158


State 912

  816 make_tuple: make_tuple . ',' expr
  823 make_dim: make_tuple .

    ','  shift, and go to state 1159

    $default  reduce using rule 823 (make_dim)


State 913

  824 make_dim: make_dim . "end of expression" make_tuple
  826 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1160
    ";]]"                shift, and go to state 1161
    ']'                  shift, and go to state 1162

    optional_trailing_semicolon_sqr_sqr  go to state 1163


State 914

  630 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  631                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  852 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1164
    ','   shift, and go to state 835


State 915

  455 expr: '(' . expr_list optional_comma ')'
  801 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1165
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 707
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 916

  781 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  800 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 902
    "end of expression"  shift, and go to state 1153

    $default  reduce using rule 782 (optional_block)

    optional_block  go to state 1166


State 917

  824 make_dim: make_dim . "end of expression" make_tuple
  827 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1167
    "end of expression"  shift, and go to state 1160
    ";}]"                shift, and go to state 1168

    optional_trailing_semicolon_cur_sqr  go to state 1169


State 918

  630 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  631                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  854 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1170
    ','   shift, and go to state 835


State 919

  817 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1171
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 920

  784 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1172


State 921

  837 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1173
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 922

  785 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 785 (optional_trailing_semicolon_cur_cur)


State 923

  841 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 841 (make_table_decl)


State 924

  255 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1174
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1077


State 925

  246 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 246 (expr_keyword)


State 926

  258 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    type_declaration_no_options_list  go to state 1175
    name_in_namespace                 go to state 351
    basic_type_declaration            go to state 352
    structure_type_declaration        go to state 353
    auto_type_declaration             go to state 354
    bitfield_type_declaration         go to state 355
    type_declaration_no_options       go to state 356
    type_declaration                  go to state 1077


State 927

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 928

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1176
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 929

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 222
    STRING_CHARACTER_ESC  shift, and go to state 223

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 930

  630 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  631                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  853 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1177
    ','   shift, and go to state 835


State 931

  839 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  848 optional_comma: ',' .

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 848 (optional_comma)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1178
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 932

  840 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1179


State 933

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 243 (expressions)

    expressions  go to state 1180


State 934

  630 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  631                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  849 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1181
    ','   shift, and go to state 835


State 935

  850 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_name_with_pos_list  go to state 1182


State 936

  323 expr_list: expr_list ',' . expr
  848 optional_comma: ',' .

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 848 (optional_comma)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1100
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 937

  825 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1183


State 938

  455 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1184


State 939

  395 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1185


State 940

  514 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1186


State 941

  399 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  402               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 400 ($@24)
    '>'       reduce using rule 400 ($@24)
    '('       reduce using rule 400 ($@24)
    $default  reduce using rule 397 ($@22)

    $@22  go to state 1187
    $@24  go to state 1188


State 942

  394 func_addr_name: name_in_namespace .

    $default  reduce using rule 394 (func_addr_name)


State 943

  396 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 396 (func_addr_expr)


State 944

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1189
    "elif"         shift, and go to state 1190
    "static_elif"  shift, and go to state 1191

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1192
    expression_else      go to state 1193


State 945

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1194
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 946

  342 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 119 (optional_annotation_list)

    optional_annotation_list  go to state 1195


State 947

  390 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  825 make_dim_decl: '[' . expr_list optional_comma ']'
  849 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  850                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 703
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 704
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 903
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 904
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 705
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 1196
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 948

  410 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 410 (expr_call)


State 949

  323 expr_list: expr_list . ',' expr
  391 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  412 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1197
    ')'  shift, and go to state 1198


State 950

  773 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  774                   | make_struct_fields . ',' "name" ":=" expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  778                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  779 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1152

    $default  reduce using rule 779 (make_struct_single)


State 951

  411 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1199


State 952

  301 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1200

    tuple_expansion  go to state 1201


State 953

  302 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  304                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1200

    tuple_expansion  go to state 1202


State 954

  306 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 306 (expression_let)


State 955

  305 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 305 (expression_let)


State 956

  337 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1203
    ":="  shift, and go to state 1204
    '='   shift, and go to state 1205
    '&'   shift, and go to state 1206

    capture_entry  go to state 1207
    capture_list   go to state 1208


State 957

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1209


State 958

  259 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 259 (expr_pipe)


State 959

  473 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1210


State 960

  513 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1211


State 961

  475 expr: expr "is" "name" .

    $default  reduce using rule 475 (expr)


State 962

  474 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 474 (expr)


State 963

  479 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1212


State 964

  511 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1213


State 965

  476 expr: expr "as" "name" .

    $default  reduce using rule 476 (expr)


State 966

  480 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 480 (expr)


State 967

  371 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 670

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1214


State 968

  369 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 670

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1215


State 969

  370 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 286
    '$'                    shift, and go to state 503
    '@'                    shift, and go to state 670

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1216


State 970

  372 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 372 (expr_assign_pipe_right)


State 971

  381 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 972

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "+=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 973

  382 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 974

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr "-=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 975

  384 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 976

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "/=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 977

  383 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 383 (expr_assign_pipe)


State 978

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr "*=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 979

  385 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 980

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  364 expr_assign: expr "%=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 364 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 981

  375 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 982

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "&=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 983

  376 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 984

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "|=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 985

  377 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 986

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "^=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 987

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  429     | expr "<<" expr .
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '-'   shift, and go to state 773
    '+'   shift, and go to state 774
    '*'   shift, and go to state 775
    '/'   shift, and go to state 776
    '%'   shift, and go to state 777
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 429 (expr)


State 988

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  430     | expr ">>" expr .
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '-'   shift, and go to state 773
    '+'   shift, and go to state 774
    '*'   shift, and go to state 775
    '/'   shift, and go to state 776
    '%'   shift, and go to state 777
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 430 (expr)


State 989

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  442     | expr "<=" expr .
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 442 (expr)


State 990

  386 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 991

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "<<=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 992

  387 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 993

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr ">>=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 994

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  443     | expr ">=" expr .
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 443 (expr)


State 995

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  440     | expr "==" expr .
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 440 (expr)


State 996

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  441     | expr "!=" expr .
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 441 (expr)


State 997

  392 expr_method_call: expr "->" "name" . '(' ')'
  393                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1217


State 998

  374 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 999

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "<-" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1000

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  469     | expr "??" expr .
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 469 (expr)


State 1001

  508 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1218


State 1002

  460 expr: expr "?." "name" .

    $default  reduce using rule 460 (expr)


State 1003

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  458     | expr "?[" expr . ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ']'    shift, and go to state 1219


State 1004

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  493     | expr "<|" expr .
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 747
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 493 (expr)


State 1005

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  494     | expr "|>" expr .
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 747
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 494 (expr)


State 1006

  413 expr_call: basic_type_declaration . '(' ')'
  414          | basic_type_declaration . '(' expr_list ')'
  495 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 781

    $default  reduce using rule 495 (expr)


State 1007

  353 expr_assign: expr ":=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 353 (expr_assign)


State 1008

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  431     | expr "<<<" expr .
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '-'   shift, and go to state 773
    '+'   shift, and go to state 774
    '*'   shift, and go to state 775
    '/'   shift, and go to state 776
    '%'   shift, and go to state 777
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 431 (expr)


State 1009

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  432     | expr ">>>" expr .
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '-'   shift, and go to state 773
    '+'   shift, and go to state 774
    '*'   shift, and go to state 775
    '/'   shift, and go to state 776
    '%'   shift, and go to state 777
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 432 (expr)


State 1010

  388 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 1011

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr "<<<=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1012

  389 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 1013

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr ">>>=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1014

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  447     | expr "&&" expr .
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 447 (expr)


State 1015

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  448     | expr "||" expr .
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "^^"   shift, and go to state 761
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 448 (expr)


State 1016

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  449     | expr "^^" expr .
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 449 (expr)


State 1017

  378 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 1018

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "&&=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1019

  379 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1020

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "||=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1021

  380 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 1022

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr "^^=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1023

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  450     | expr ".." expr .
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    ".."  error (nonassociative)

    $default  reduce using rule 450 (expr)


State 1024

  373 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 1025

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr '=' expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    '$'    shift, and go to state 503
    '@'    shift, and go to state 670

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1026

  481 expr: expr '?' "as" . "name"
  484     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  485     | expr '?' "as" . basic_type_declaration
  512 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1220
    "bool"      shift, and go to state 316
    "void"      shift, and go to state 317
    "string"    shift, and go to state 318
    "int"       shift, and go to state 320
    "int2"      shift, and go to state 321
    "int3"      shift, and go to state 322
    "int4"      shift, and go to state 323
    "uint"      shift, and go to state 324
    "bitfield"  shift, and go to state 463
    "uint2"     shift, and go to state 326
    "uint3"     shift, and go to state 327
    "uint4"     shift, and go to state 328
    "float"     shift, and go to state 329
    "float2"    shift, and go to state 330
    "float3"    shift, and go to state 331
    "float4"    shift, and go to state 332
    "range"     shift, and go to state 333
    "urange"    shift, and go to state 334
    "range64"   shift, and go to state 335
    "urange64"  shift, and go to state 336
    "int64"     shift, and go to state 338
    "uint64"    shift, and go to state 339
    "double"    shift, and go to state 340
    "int8"      shift, and go to state 343
    "uint8"     shift, and go to state 344
    "int16"     shift, and go to state 345
    "uint16"    shift, and go to state 346
    "$f"        shift, and go to state 1221
    "name"      shift, and go to state 1222

    basic_type_declaration  go to state 1223


State 1027

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  470     | expr '?' expr . ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    ':'    shift, and go to state 1224
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779


State 1028

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  445     | expr '|' expr .
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 445 (expr)


State 1029

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  446     | expr '^' expr .
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 446 (expr)


State 1030

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  444     | expr '&' expr .
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 444 (expr)


State 1031

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  438     | expr '<' expr .
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 438 (expr)


State 1032

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  439     | expr '>' expr .
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 439 (expr)


State 1033

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  434     | expr '-' expr .
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '*'   shift, and go to state 775
    '/'   shift, and go to state 776
    '%'   shift, and go to state 777
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 434 (expr)


State 1034

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  433     | expr '+' expr .
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '*'   shift, and go to state 775
    '/'   shift, and go to state 776
    '%'   shift, and go to state 777
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 433 (expr)


State 1035

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  435     | expr '*' expr .
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 435 (expr)


State 1036

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  436     | expr '/' expr .
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 436 (expr)


State 1037

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  437     | expr '%' expr .
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 727
    "as"  shift, and go to state 728
    "++"  shift, and go to state 739
    "--"  shift, and go to state 740
    "->"  shift, and go to state 747
    "??"  shift, and go to state 749
    "?."  shift, and go to state 750
    "?["  shift, and go to state 751
    "<|"  shift, and go to state 752
    "|>"  shift, and go to state 753
    '.'   shift, and go to state 778
    '['   shift, and go to state 779

    $default  reduce using rule 437 (expr)


State 1038

  461 expr: expr '.' "?." . "name"
  510 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1225
    "name"  shift, and go to state 1226


State 1039

  459 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1227
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1040

  507 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1228


State 1041

  403 expr_field: expr '.' "name" .
  405           | expr '.' "name" . '(' ')'
  406           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1229

    '('       [reduce using rule 403 (expr_field)]
    $default  reduce using rule 403 (expr_field)


State 1042

  404 expr_field: expr '.' '.' . "name"
  509 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1230
    "name"  shift, and go to state 1231


State 1043

  457 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1232
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1044

  409 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1233


State 1045

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  456     | expr '[' expr . ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ']'    shift, and go to state 1234


State 1046

  413 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 413 (expr_call)


State 1047

  323 expr_list: expr_list . ',' expr
  414 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 852
    ')'  shift, and go to state 1235


State 1048

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  591 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1236
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779


State 1049

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1237


State 1050

  118 annotation_list: annotation_list . ',' annotation_declaration
  120 optional_annotation_list: '[' annotation_list . ']'
  536 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1238


State 1051

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  535                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1239
    "private"  shift, and go to state 1240

    $default  reduce using rule 523 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1241


State 1052

  528 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1242

    $default  reduce using rule 526 (optional_static_member_variable)

    optional_static_member_variable  go to state 1243


State 1053

  531 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1244


State 1054

  571 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 571 (let_variable_name_with_pos_list)


State 1055

  574 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 574 (let_variable_declaration)


State 1056

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "+="                 shift, and go to state 853
    "-="                 shift, and go to state 854
    "/="                 shift, and go to state 855
    "*="                 shift, and go to state 856
    "%="                 shift, and go to state 857
    "&="                 shift, and go to state 858
    "|="                 shift, and go to state 859
    "^="                 shift, and go to state 860
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    "<<="                shift, and go to state 861
    ">>="                shift, and go to state 862
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "<-"                 shift, and go to state 863
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    ":="                 shift, and go to state 754
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "<<<="               shift, and go to state 864
    ">>>="               shift, and go to state 865
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    "&&="                shift, and go to state 866
    "||="                shift, and go to state 867
    "^^="                shift, and go to state 868
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1245
    '='                  shift, and go to state 869
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779
    '$'                  shift, and go to state 503
    '@'                  shift, and go to state 670

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1057

  575 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 575 (let_variable_declaration)


State 1058

  691 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 690 ($@50)

    $@50  go to state 1246


State 1059

  714 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 713 ($@55)

    $@55  go to state 1247


State 1060

  717 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 716 ($@57)

    $@57  go to state 1248


State 1061

  680 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1249


State 1062

  720 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 719 ($@59)

    $@59  go to state 1250


State 1063

  710 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 709 ($@53)

    $@53  go to state 1251


State 1064

  672 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1252


State 1065

  678 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 677 ($@48)

    $@48  go to state 1253


State 1066

  724 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 723 ($@61)

    $@61  go to state 1254


State 1067

  727 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1255


State 1068

  731 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 730 ($@65)

    $@65  go to state 1256


State 1069

  734 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1257


State 1070

  738 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 737 ($@69)

    $@69  go to state 1258


State 1071

  741 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1259


State 1072

  544 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 608
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    tuple_type                   go to state 1260
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 611


State 1073

  744 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 743 ($@73)

    $@73  go to state 1261


State 1074

  550 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 613

    variant_type  go to state 1262


State 1075

  747 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 746 ($@75)

    $@75  go to state 1263


State 1076

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  695 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1264
    '>'                  shift, and go to state 1265


State 1077

  251 type_declaration_no_options_list: type_declaration .
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 251 (type_declaration_no_options_list)


State 1078

  693 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 693 (type_declaration_no_options)


State 1079

  682 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 682 (dim_list)


State 1080

  542 tuple_type: "name" ':' type_declaration .
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 542 (tuple_type)


State 1081

  548 variant_type: "name" ':' type_declaration .
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 548 (variant_type)


State 1082

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  628 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1266


State 1083

  629 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 629 (variable_name_with_pos_list)


State 1084

  630 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  631                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1267

    $default  reduce using rule 630 (variable_name_with_pos_list)


State 1085

  558 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  559                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 834
    '='   shift, and go to state 836
    '|'   shift, and go to state 417

    $default  reduce using rule 558 (variable_declaration)

    copy_or_move  go to state 1268


State 1086

  561 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 561 (variable_declaration)


State 1087

  220 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr .
  351            | expr . '=' expr
  352            | expr . "<-" expr
  353            | expr . ":=" expr
  354            | expr . "&=" expr
  355            | expr . "|=" expr
  356            | expr . "^=" expr
  357            | expr . "&&=" expr
  358            | expr . "||=" expr
  359            | expr . "^^=" expr
  360            | expr . "+=" expr
  361            | expr . "-=" expr
  362            | expr . "*=" expr
  363            | expr . "/=" expr
  364            | expr . "%=" expr
  365            | expr . "<<=" expr
  366            | expr . ">>=" expr
  367            | expr . "<<<=" expr
  368            | expr . ">>>=" expr
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  560 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 727
    "as"    shift, and go to state 728
    "+="    shift, and go to state 853
    "-="    shift, and go to state 854
    "/="    shift, and go to state 855
    "*="    shift, and go to state 856
    "%="    shift, and go to state 857
    "&="    shift, and go to state 858
    "|="    shift, and go to state 859
    "^="    shift, and go to state 860
    "<<"    shift, and go to state 737
    ">>"    shift, and go to state 738
    "++"    shift, and go to state 739
    "--"    shift, and go to state 740
    "<="    shift, and go to state 741
    "<<="   shift, and go to state 861
    ">>="   shift, and go to state 862
    ">="    shift, and go to state 744
    "=="    shift, and go to state 745
    "!="    shift, and go to state 746
    "->"    shift, and go to state 747
    "<-"    shift, and go to state 863
    "??"    shift, and go to state 749
    "?."    shift, and go to state 750
    "?["    shift, and go to state 751
    "<|"    shift, and go to state 752
    "|>"    shift, and go to state 753
    ":="    shift, and go to state 754
    "<<<"   shift, and go to state 755
    ">>>"   shift, and go to state 756
    "<<<="  shift, and go to state 864
    ">>>="  shift, and go to state 865
    "&&"    shift, and go to state 759
    "||"    shift, and go to state 760
    "^^"    shift, and go to state 761
    "&&="   shift, and go to state 866
    "||="   shift, and go to state 867
    "^^="   shift, and go to state 868
    ".."    shift, and go to state 765
    '='     shift, and go to state 869
    '?'     shift, and go to state 767
    '|'     shift, and go to state 768
    '^'     shift, and go to state 769
    '&'     shift, and go to state 770
    '<'     shift, and go to state 771
    '>'     shift, and go to state 772
    '-'     shift, and go to state 773
    '+'     shift, and go to state 774
    '*'     shift, and go to state 775
    '/'     shift, and go to state 776
    '%'     shift, and go to state 777
    '.'     shift, and go to state 778
    '['     shift, and go to state 779
    '$'     shift, and go to state 503
    '@'     shift, and go to state 670

    " <|"     reduce using rule 350 (expr_assign)
    $default  reduce using rule 560 (variable_declaration)

    block_or_lambda                go to state 713
    expr_full_block_assumed_piped  go to state 780


State 1088

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  804 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1269
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1089

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  807 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1270
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1090

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1271
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1091

  271 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1272


State 1092

  274 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 274 (expr_new)


State 1093

  275 expr_new: "new" new_type_declaration '(' expr_list . ')'
  323 expr_list: expr_list . ',' expr

    ','  shift, and go to state 852
    ')'  shift, and go to state 1273


State 1094

  276 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1274


State 1095

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  321               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1275


State 1096

  319 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1276


State 1097

  318 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1277


State 1098

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  831 make_dim_decl: "array" '<' $@98 type_declaration_no_options . '>' $@99 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1278
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1099

  828 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1279


State 1100

  323 expr_list: expr_list ',' expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 323 (expr_list)


State 1101

  360 expr_assign: expr "+=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 360 (expr_assign)


State 1102

  361 expr_assign: expr "-=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 361 (expr_assign)


State 1103

  363 expr_assign: expr "/=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 363 (expr_assign)


State 1104

  362 expr_assign: expr "*=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 362 (expr_assign)


State 1105

  364 expr_assign: expr "%=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 364 (expr_assign)


State 1106

  354 expr_assign: expr "&=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 354 (expr_assign)


State 1107

  355 expr_assign: expr "|=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 355 (expr_assign)


State 1108

  356 expr_assign: expr "^=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 356 (expr_assign)


State 1109

  365 expr_assign: expr "<<=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 365 (expr_assign)


State 1110

  366 expr_assign: expr ">>=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 366 (expr_assign)


State 1111

  352 expr_assign: expr "<-" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 352 (expr_assign)


State 1112

  367 expr_assign: expr "<<<=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 367 (expr_assign)


State 1113

  368 expr_assign: expr ">>>=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 368 (expr_assign)


State 1114

  357 expr_assign: expr "&&=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 357 (expr_assign)


State 1115

  358 expr_assign: expr "||=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 358 (expr_assign)


State 1116

  359 expr_assign: expr "^^=" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 359 (expr_assign)


State 1117

  351 expr_assign: expr '=' expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 351 (expr_assign)


State 1118

  291 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 291 (expression_try_catch)


State 1119

  844 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1280


State 1120

  843 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1281


State 1121

  842 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1282


State 1122

  465 expr: "deref" '(' expr ')' .

    $default  reduce using rule 465 (expr)


State 1123

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1283
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1124

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1284
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1125

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1285
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1126

  466 expr: "addr" '(' expr ')' .

    $default  reduce using rule 466 (expr)


State 1127

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1286
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1128

  497 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 497 (expr)


State 1129

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  835 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options . '>' $@101 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1287
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1130

  832 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1288


State 1131

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  813 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1289
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1132

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  822 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1290
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1133

  819 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1291


State 1134

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  810 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_dim ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1292
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1135

  467 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  468     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 956

    $default  reduce using rule 336 (optional_capture_list)

    optional_capture_list  go to state 1293


State 1136

  339 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1294


State 1137

  499 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1138

  500 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1139

  501 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1140

  502 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1141

  503 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1142

  505 expr_mtag: "$c" '(' expr ')' . '(' ')'
  506          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1295


State 1143

  851 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1296
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1144

  783 optional_block: "where" expr_block .

    $default  reduce using rule 783 (optional_block)


State 1145

  775 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  776                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1297
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1146

  772 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1298
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1147

  771 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1299
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1148

  696 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  825 make_dim_decl: '[' . expr_list optional_comma ']'
  849 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  850                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 703
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 704
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    ']'                               shift, and go to state 820
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 705
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1149

  322 expr_list: expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  681 dim_list: '[' expr . ']'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ']'    shift, and go to state 821

    ']'       [reduce using rule 322 (expr_list)]
    $default  reduce using rule 322 (expr_list)


State 1150

  798 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  799                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 902
    "$f"     shift, and go to state 903
    "name"   shift, and go to state 1300

    $default  reduce using rule 782 (optional_block)

    make_struct_fields  go to state 909
    make_struct_dim     go to state 1301
    optional_block      go to state 1302


State 1151

  815 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1303
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1152

  773 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  774                   | make_struct_fields ',' . "name" ":=" expr
  777                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  778                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1304
    "name"  shift, and go to state 1305


State 1153

  781 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 903
    "name"  shift, and go to state 1300

    make_struct_fields  go to state 1306


State 1154

  796 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1155
    ",]]"  shift, and go to state 1156
    ']'    shift, and go to state 1157

    optional_trailing_delim_sqr_sqr  go to state 1307


State 1155

  791 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 791 (optional_trailing_delim_sqr_sqr)


State 1156

  792 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 792 (optional_trailing_delim_sqr_sqr)


State 1157

  790 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1308


State 1158

  797 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 797 (make_struct_decl)


State 1159

  816 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1309
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1160

  824 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 908
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple              go to state 1310
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1161

  789 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 789 (optional_trailing_semicolon_sqr_sqr)


State 1162

  788 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1311


State 1163

  826 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 826 (make_dim_decl)


State 1164

  852 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1312
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1165

  801 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 903
    "name"  shift, and go to state 1300

    make_struct_fields  go to state 909
    make_struct_dim     go to state 1313


State 1166

  800 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1314
    ";}]"                shift, and go to state 1315
    ",}]"                shift, and go to state 1316

    optional_trailing_delim_cur_sqr  go to state 1317


State 1167

  786 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1318


State 1168

  787 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 787 (optional_trailing_semicolon_cur_sqr)


State 1169

  827 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 827 (make_dim_decl)


State 1170

  854 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1319
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1171

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  817 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 817 (make_map_tuple)


State 1172

  784 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 784 (optional_trailing_semicolon_cur_cur)


State 1173

  837 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 837 (make_table)


State 1174

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 1264
    '>'                  shift, and go to state 1320


State 1175

  252 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1264
    '>'                  shift, and go to state 1321


State 1176

   30 string_builder_body: string_builder_body "{" expr . "}"
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    "}"    shift, and go to state 1322
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779


State 1177

  853 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1323
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1178

  839 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 839 (expr_map_tuple_list)


State 1179

  840 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 840 (make_table_decl)


State 1180

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  244 expressions: expressions . expression_any
  245            | expressions . error

    error                             shift, and go to state 430
    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 433
    "if"                              shift, and go to state 434
    "static_if"                       shift, and go to state 435
    "for"                             shift, and go to state 436
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 443
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "try"                             shift, and go to state 446
    "table"                           shift, and go to state 447
    "delete"                          shift, and go to state 448
    "deref"                           shift, and go to state 449
    "with"                            shift, and go to state 450
    "assume"                          shift, and go to state 451
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "pass"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 457
    "label"                           shift, and go to state 458
    "goto"                            shift, and go to state 459
    "unsafe"                          shift, and go to state 460
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 467
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "$ <|"                            shift, and go to state 470
    "@ <|"                            shift, and go to state 471
    "@@ <|"                           shift, and go to state 472
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 490
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    "end of code block"               shift, and go to state 1324
    "end of expression"               shift, and go to state 495
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_label           go to state 507
    expression_goto            go to state 508
    if_or_static_if            go to state 509
    expression_if_one_liner    go to state 510
    expression_if_then_else    go to state 511
    expression_for_loop        go to state 512
    expression_unsafe          go to state 513
    expression_while_loop      go to state 514
    expression_with            go to state 515
    expression_with_alias      go to state 516
    expr_call_pipe             go to state 517
    expression_any             go to state 518
    expr_keyword               go to state 519
    expression_keyword         go to state 520
    expr_pipe                  go to state 521
    name_in_namespace          go to state 522
    expression_delete          go to state 523
    expr_new                   go to state 524
    expression_break           go to state 525
    expression_continue        go to state 526
    expression_return_no_pipe  go to state 527
    expression_return          go to state 528
    expression_yield_no_pipe   go to state 529
    expression_yield           go to state 530
    expression_try_catch       go to state 531
    kwd_let                    go to state 532
    expression_let             go to state 533
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_assign                go to state 540
    expr_assign_pipe           go to state 541
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 547
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 1181

  849 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1325
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1182

  630 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  631                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  850 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1326
    ','   shift, and go to state 835


State 1183

  825 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 825 (make_dim_decl)


State 1184

  455 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 455 (expr)


State 1185

  395 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1327
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1186

  514 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1328
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1187

  399 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1329


State 1188

  402 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1330


State 1189

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1331


State 1190

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1191

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1192

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1332
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1193

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1194

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1333
    "is"    shift, and go to state 727
    "as"    shift, and go to state 728
    "<<"    shift, and go to state 737
    ">>"    shift, and go to state 738
    "++"    shift, and go to state 739
    "--"    shift, and go to state 740
    "<="    shift, and go to state 741
    ">="    shift, and go to state 744
    "=="    shift, and go to state 745
    "!="    shift, and go to state 746
    "->"    shift, and go to state 747
    "??"    shift, and go to state 749
    "?."    shift, and go to state 750
    "?["    shift, and go to state 751
    "<|"    shift, and go to state 752
    "|>"    shift, and go to state 753
    "<<<"   shift, and go to state 755
    ">>>"   shift, and go to state 756
    "&&"    shift, and go to state 759
    "||"    shift, and go to state 760
    "^^"    shift, and go to state 761
    ".."    shift, and go to state 765
    '?'     shift, and go to state 767
    '|'     shift, and go to state 768
    '^'     shift, and go to state 769
    '&'     shift, and go to state 770
    '<'     shift, and go to state 771
    '>'     shift, and go to state 772
    '-'     shift, and go to state 773
    '+'     shift, and go to state 774
    '*'     shift, and go to state 775
    '/'     shift, and go to state 776
    '%'     shift, and go to state 777
    '.'     shift, and go to state 778
    '['     shift, and go to state 779

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1334


State 1195

  342 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 956

    $default  reduce using rule 336 (optional_capture_list)

    optional_capture_list  go to state 1335


State 1196

  390 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  773 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  774                   | make_struct_fields . ',' "name" ":=" expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  778                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1152
    ']'  shift, and go to state 1336


State 1197

  323 expr_list: expr_list ',' . expr
  391 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 1337
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1100
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1198

  412 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 412 (expr_call)


State 1199

  411 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 411 (expr_call)


State 1200

  299 tuple_expansion: "name" .

    $default  reduce using rule 299 (tuple_expansion)


State 1201

  300 tuple_expansion: tuple_expansion . ',' "name"
  301 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1338
    ']'  shift, and go to state 1339


State 1202

  300 tuple_expansion: tuple_expansion . ',' "name"
  302 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  304                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1338
    ')'  shift, and go to state 1340


State 1203

  332 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1341


State 1204

  333 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1342


State 1205

  331 capture_entry: '=' . "name"

    "name"  shift, and go to state 1343


State 1206

  330 capture_entry: '&' . "name"

    "name"  shift, and go to state 1344


State 1207

  334 capture_list: capture_entry .

    $default  reduce using rule 334 (capture_list)


State 1208

  335 capture_list: capture_list . ',' capture_entry
  337 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1345
    ']'  shift, and go to state 1346


State 1209

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1347


State 1210

  473 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 471 ($@28)

    $@28  go to state 1348


State 1211

  513 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1349
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1212

  479 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 477 ($@30)

    $@30  go to state 1350


State 1213

  511 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1351
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1214

  371 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 371 (expr_assign_pipe_right)


State 1215

  369 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 369 (expr_assign_pipe_right)


State 1216

  370 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 370 (expr_assign_pipe_right)


State 1217

  392 expr_method_call: expr "->" "name" '(' . ')'
  393                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1352
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1353
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1218

  508 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1354
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1219

  458 expr: expr "?[" expr ']' .

    $default  reduce using rule 458 (expr)


State 1220

  484 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1355


State 1221

  512 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1356


State 1222

  481 expr: expr '?' "as" "name" .

    $default  reduce using rule 481 (expr)


State 1223

  485 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 485 (expr)


State 1224

  470 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1357
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1225

  510 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1358


State 1226

  461 expr: expr '.' "?." "name" .

    $default  reduce using rule 461 (expr)


State 1227

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  459     | expr '.' "?[" expr . ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ']'    shift, and go to state 1359


State 1228

  507 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1360
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1229

  405 expr_field: expr '.' "name" '(' . ')'
  406           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1361
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1362
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1230

  509 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1363


State 1231

  404 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 404 (expr_field)


State 1232

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  457     | expr '.' '[' expr . ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ']'    shift, and go to state 1364


State 1233

  409 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 408 ($@27)

    $@27  go to state 1365


State 1234

  456 expr: expr '[' expr ']' .

    $default  reduce using rule 456 (expr)


State 1235

  414 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 414 (expr_call)


State 1236

  591 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 591 (enum_list)


State 1237

  611 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 611 (enum_declaration)


State 1238

  120 optional_annotation_list: '[' annotation_list ']' .
  536 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1366

    $default  reduce using rule 120 (optional_annotation_list)


State 1239

  524 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 524 (optional_public_or_private_member_variable)


State 1240

  525 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 525 (optional_public_or_private_member_variable)


State 1241

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  535                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1367
    "static"    shift, and go to state 1242

    $default  reduce using rule 526 (optional_static_member_variable)

    optional_static_member_variable  go to state 1368


State 1242

  527 optional_static_member_variable: "static" .

    $default  reduce using rule 527 (optional_static_member_variable)


State 1243

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1369
    "sealed"    shift, and go to state 1370

    $default  reduce using rule 518 (optional_override)

    optional_override  go to state 1371


State 1244

  531 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 531 (struct_variable_declaration_list)


State 1245

  573 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 573 (let_variable_declaration)


State 1246

  691 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 691 (type_declaration_no_options)


State 1247

  714 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 714 (type_declaration_no_options)


State 1248

  717 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 717 (type_declaration_no_options)


State 1249

  680 table_type_pair: type_declaration "end of expression" type_declaration .
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 680 (table_type_pair)


State 1250

  720 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 720 (type_declaration_no_options)


State 1251

  710 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 710 (type_declaration_no_options)


State 1252

  672 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 672 (bitfield_bits)


State 1253

  678 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 678 (bitfield_type_declaration)


State 1254

  724 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 724 (type_declaration_no_options)


State 1255

  727 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 726 ($@63)

    $@63  go to state 1372


State 1256

  731 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 731 (type_declaration_no_options)


State 1257

  734 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 733 ($@67)

    $@67  go to state 1373


State 1258

  738 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 738 (type_declaration_no_options)


State 1259

  741 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 740 ($@71)

    $@71  go to state 1374


State 1260

  544 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 544 (tuple_type_list)


State 1261

  744 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 744 (type_declaration_no_options)


State 1262

  550 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 550 (variant_type_list)


State 1263

  747 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 747 (type_declaration_no_options)


State 1264

  252 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1375


State 1265

  695 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1376


State 1266

  628 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 628 (variable_name_with_pos_list)


State 1267

  631 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1377


State 1268

  559 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1378
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1269

  804 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' make_struct_dim ')'

    $default  reduce using rule 803 ($@89)

    $@89  go to state 1379


State 1270

  807 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' make_struct_dim ')'

    $default  reduce using rule 806 ($@91)

    $@91  go to state 1380


State 1271

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  323 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 286
    ','                    shift, and go to state 852

    expression_block  go to state 1381


State 1272

  271 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 270 ($@12)

    $@12  go to state 1382


State 1273

  275 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 275 (expr_new)


State 1274

  276 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 276 (expr_new)


State 1275

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  321               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1383
    '>'                  shift, and go to state 1384


State 1276

  319 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 319 (expr_type_info)


State 1277

  318 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 317 ($@20)

    $@20  go to state 1385


State 1278

  831 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' . $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 830 ($@99)

    $@99  go to state 1386


State 1279

  828 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 828 (make_dim_decl)


State 1280

  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"
  844 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1387
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1281

  843 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 695
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 1388
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1282

  842 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 842 (make_table_decl)


State 1283

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 81 (expression_with_alias)


State 1284

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 308 ($@14)

    $@14  go to state 1389


State 1285

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 311 ($@16)

    $@16  go to state 1390


State 1286

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 314 ($@18)

    $@18  go to state 1391


State 1287

  835 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' . $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 834 ($@101)

    $@101  go to state 1392


State 1288

  832 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 832 (make_dim_decl)


State 1289

  813 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95

    $default  reduce using rule 812 ($@95)

    $@95  go to state 1393


State 1290

  822 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' make_struct_dim ')'

    $default  reduce using rule 821 ($@97)

    $@97  go to state 1394


State 1291

  819 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 819 (make_tuple_call)


State 1292

  810 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_dim ')'

    $default  reduce using rule 809 ($@93)

    $@93  go to state 1395


State 1293

  467 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  468     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1396


State 1294

  339 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1397


State 1295

  505 expr_mtag: "$c" '(' expr ')' '(' . ')'
  506          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1398
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1399
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1296

  323 expr_list: expr_list . ',' expr
  851 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1400
    ','                  shift, and go to state 852


State 1297

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  775 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  776                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1401


State 1298

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  772 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 772 (make_struct_fields)


State 1299

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 771 (make_struct_fields)


State 1300

  771 make_struct_fields: "name" . copy_or_move expr
  772                   | "name" . ":=" expr

    "<-"  shift, and go to state 834
    ":="  shift, and go to state 1146
    '='   shift, and go to state 836

    copy_or_move  go to state 1147


State 1301

  781 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  799 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 902
    "end of expression"  shift, and go to state 1153

    $default  reduce using rule 782 (optional_block)

    optional_block  go to state 1402


State 1302

  798 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1155
    ",]]"  shift, and go to state 1156
    ']'    shift, and go to state 1157

    optional_trailing_delim_sqr_sqr  go to state 1403


State 1303

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  815 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 815 (make_tuple)


State 1304

  777 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  778                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1404


State 1305

  773 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  774                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 834
    ":="  shift, and go to state 1405
    '='   shift, and go to state 836

    copy_or_move  go to state 1406


State 1306

  773 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  774                   | make_struct_fields . ',' "name" ":=" expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  778                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  781 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1152

    $default  reduce using rule 781 (make_struct_dim)


State 1307

  796 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 796 (make_struct_decl)


State 1308

  790 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 790 (optional_trailing_delim_sqr_sqr)


State 1309

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  816 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 816 (make_tuple)


State 1310

  816 make_tuple: make_tuple . ',' expr
  824 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1159

    $default  reduce using rule 824 (make_dim)


State 1311

  788 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 788 (optional_trailing_semicolon_sqr_sqr)


State 1312

  323 expr_list: expr_list . ',' expr
  852 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1407
    ','                  shift, and go to state 852


State 1313

  781 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  801 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 902
    "end of expression"  shift, and go to state 1153

    $default  reduce using rule 782 (optional_block)

    optional_block  go to state 1408


State 1314

  793 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1409


State 1315

  794 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 794 (optional_trailing_delim_cur_sqr)


State 1316

  795 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 795 (optional_trailing_delim_cur_sqr)


State 1317

  800 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 800 (make_struct_decl)


State 1318

  786 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 786 (optional_trailing_semicolon_cur_sqr)


State 1319

  323 expr_list: expr_list . ',' expr
  854 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1410
    ','                  shift, and go to state 852


State 1320

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 254 ($@8)

    $@8  go to state 1411


State 1321

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 257 ($@10)

    $@10  go to state 1412


State 1322

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1323

  323 expr_list: expr_list . ',' expr
  853 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1413
    ','                  shift, and go to state 852


State 1324

  219 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 219 (expression_block)


State 1325

  323 expr_list: expr_list . ',' expr
  849 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1414
    ','                  shift, and go to state 852


State 1326

  850 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1415
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1327

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  395 func_addr_name: "$i" '(' expr . ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1416


State 1328

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  514          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1417


State 1329

  399 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1418
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1330

  402 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1419


State 1331

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1332

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 727
    "as"                   shift, and go to state 728
    "<<"                   shift, and go to state 737
    ">>"                   shift, and go to state 738
    "++"                   shift, and go to state 739
    "--"                   shift, and go to state 740
    "<="                   shift, and go to state 741
    ">="                   shift, and go to state 744
    "=="                   shift, and go to state 745
    "!="                   shift, and go to state 746
    "->"                   shift, and go to state 747
    "??"                   shift, and go to state 749
    "?."                   shift, and go to state 750
    "?["                   shift, and go to state 751
    "<|"                   shift, and go to state 752
    "|>"                   shift, and go to state 753
    "<<<"                  shift, and go to state 755
    ">>>"                  shift, and go to state 756
    "&&"                   shift, and go to state 759
    "||"                   shift, and go to state 760
    "^^"                   shift, and go to state 761
    ".."                   shift, and go to state 765
    "begin of code block"  shift, and go to state 286
    '?'                    shift, and go to state 767
    '|'                    shift, and go to state 768
    '^'                    shift, and go to state 769
    '&'                    shift, and go to state 770
    '<'                    shift, and go to state 771
    '>'                    shift, and go to state 772
    '-'                    shift, and go to state 773
    '+'                    shift, and go to state 774
    '*'                    shift, and go to state 775
    '/'                    shift, and go to state 776
    '%'                    shift, and go to state 777
    '.'                    shift, and go to state 778
    '['                    shift, and go to state 779

    expression_block  go to state 1420


State 1333

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1421


State 1334

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1422


State 1335

  342 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 284

    $default  reduce using rule 121 (optional_function_argument_list)

    optional_function_argument_list  go to state 1423


State 1336

  390 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1424


State 1337

  391 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  825 make_dim_decl: '[' . expr_list optional_comma ']'
  849 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  850                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "for"                             shift, and go to state 703
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "iterator"                        shift, and go to state 704
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "$f"                              shift, and go to state 903
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 904
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 705
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_fields      go to state 1425
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1338

  300 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1426


State 1339

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1427


State 1340

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  304                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1428
    '&'  shift, and go to state 389

    $default  reduce using rule 565 (optional_ref)

    optional_ref  go to state 1429


State 1341

  332 capture_entry: "<-" "name" .

    $default  reduce using rule 332 (capture_entry)


State 1342

  333 capture_entry: ":=" "name" .

    $default  reduce using rule 333 (capture_entry)


State 1343

  331 capture_entry: '=' "name" .

    $default  reduce using rule 331 (capture_entry)


State 1344

  330 capture_entry: '&' "name" .

    $default  reduce using rule 330 (capture_entry)


State 1345

  335 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1203
    ":="  shift, and go to state 1204
    '='   shift, and go to state 1205
    '&'   shift, and go to state 1206

    capture_entry  go to state 1430


State 1346

  337 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1431


State 1347

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1432
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1433
    block_or_simple_block  go to state 1434


State 1348

  473 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1435


State 1349

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  513          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1436


State 1350

  479 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1437


State 1351

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  511          | expr "as" "$f" '(' expr . ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1438


State 1352

  392 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 392 (expr_method_call)


State 1353

  323 expr_list: expr_list . ',' expr
  393 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 852
    ')'  shift, and go to state 1439


State 1354

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  508          | expr "?." "$f" '(' expr . ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1440


State 1355

  484 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 482 ($@32)

    $@32  go to state 1441


State 1356

  512 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1442
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1357

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  470     | expr '?' expr ':' expr .
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 470 (expr)


State 1358

  510 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1443
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1359

  459 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 459 (expr)


State 1360

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr '.' "$f" '(' expr . ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1444


State 1361

  405 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 405 (expr_field)


State 1362

  323 expr_list: expr_list . ',' expr
  406 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 852
    ')'  shift, and go to state 1445


State 1363

  509 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1446
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1364

  457 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 457 (expr)


State 1365

  409 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 409 (expr_field)


State 1366

  536 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 536 (struct_variable_declaration_list)


State 1367

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1447

    $default  reduce using rule 521 (optional_constant)

    optional_constant  go to state 1448


State 1368

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1369
    "sealed"    shift, and go to state 1370

    $default  reduce using rule 518 (optional_override)

    optional_override  go to state 1449


State 1369

  519 optional_override: "override" .

    $default  reduce using rule 519 (optional_override)


State 1370

  520 optional_override: "sealed" .

    $default  reduce using rule 520 (optional_override)


State 1371

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1239
    "private"  shift, and go to state 1240

    $default  reduce using rule 523 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1450


State 1372

  727 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 727 (type_declaration_no_options)


State 1373

  734 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1374

  741 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 741 (type_declaration_no_options)


State 1375

  252 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417

    $default  reduce using rule 252 (type_declaration_no_options_list)


State 1376

  695 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1451
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 819
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1377

  631 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 631 (variable_name_with_pos_list)


State 1378

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  559 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 559 (variable_declaration)


State 1379

  804 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' make_struct_dim ')'

    '('  shift, and go to state 1452


State 1380

  807 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' make_struct_dim ')'

    '('  shift, and go to state 1453


State 1381

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1382

  271 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 271 (new_type_declaration)


State 1383

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1454


State 1384

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1455
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1385

  318 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 318 (expr_type_decl)


State 1386

  831 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1456


State 1387

  844 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1457


State 1388

  839 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  843 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 931

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 1458


State 1389

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1459
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1390

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1460
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1391

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1461
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1392

  835 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1462


State 1393

  813 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 .

    $default  reduce using rule 813 (make_struct_decl)


State 1394

  822 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' make_struct_dim ')'

    '('  shift, and go to state 1463


State 1395

  810 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_dim ')'

    '('  shift, and go to state 1464


State 1396

  467 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  468     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    ')'                               shift, and go to state 1465
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1466
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1397

  339 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1432
    "begin of code block"  shift, and go to state 286

    expression_block       go to state 1433
    block_or_simple_block  go to state 1467


State 1398

  505 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1399

  323 expr_list: expr_list . ',' expr
  506 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 852
    ')'  shift, and go to state 1468


State 1400

  851 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1469
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1401

  775 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  776                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 834
    ":="  shift, and go to state 1470
    '='   shift, and go to state 836

    copy_or_move  go to state 1471


State 1402

  799 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1155
    ",]]"  shift, and go to state 1156
    ']'    shift, and go to state 1157

    optional_trailing_delim_sqr_sqr  go to state 1472


State 1403

  798 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 798 (make_struct_decl)


State 1404

  777 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  778                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1473
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1405

  774 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1474
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1406

  773 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1475
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1407

  852 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1476
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1408

  801 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1314
    ";}]"                shift, and go to state 1315
    ",}]"                shift, and go to state 1316

    optional_trailing_delim_cur_sqr  go to state 1477


State 1409

  793 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 793 (optional_trailing_delim_cur_sqr)


State 1410

  854 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1478
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1411

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1479
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1412

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1480

    '('       [reduce using rule 249 (optional_expr_list_in_braces)]
    $default  reduce using rule 249 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1481


State 1413

  853 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 1482
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1414

  849 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1483
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1415

  323 expr_list: expr_list . ',' expr
  850 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1484
    ','                  shift, and go to state 852


State 1416

  395 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 395 (func_addr_name)


State 1417

  514 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1418

  399 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 398 ($@23)

    $@23  go to state 1485


State 1419

  402 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1486


State 1420

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1189
    "elif"         shift, and go to state 1190
    "static_elif"  shift, and go to state 1191

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1192
    expression_else      go to state 1487


State 1421

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "return"                          shift, and go to state 1488
    "null"                            shift, and go to state 444
    "break"                           shift, and go to state 445
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "continue"                        shift, and go to state 455
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "yield"                           shift, and go to state 1489
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder             go to state 505
    expr_reader                go to state 506
    expression_if_one_liner    go to state 1490
    expression_keyword         go to state 566
    name_in_namespace          go to state 522
    expr_new                   go to state 524
    expression_break           go to state 1491
    expression_continue        go to state 1492
    expression_return_no_pipe  go to state 1493
    expression_yield_no_pipe   go to state 1494
    expr_cast                  go to state 534
    expr_type_decl             go to state 535
    expr_type_info             go to state 536
    block_or_lambda            go to state 537
    expr_full_block            go to state 538
    expr_numeric_const         go to state 539
    expr_named_call            go to state 542
    expr_method_call           go to state 543
    func_addr_expr             go to state 544
    expr_field                 go to state 545
    expr_call                  go to state 546
    expr                       go to state 1495
    expr_mtag                  go to state 548
    basic_type_declaration     go to state 549
    make_decl                  go to state 550
    make_struct_decl           go to state 551
    make_tuple_call            go to state 552
    make_dim_decl              go to state 553
    make_table_decl            go to state 554
    array_comprehension        go to state 555


State 1422

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 74 (expression_if_then_else)


State 1423

  342 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 373

    $default  reduce using rule 124 (optional_function_type)

    optional_function_type  go to state 1496


State 1424

  390 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 390 (expr_named_call)


State 1425

  391 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  773 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  774                   | make_struct_fields . ',' "name" ":=" expr
  777                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  778                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1152
    ']'  shift, and go to state 1497


State 1426

  300 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 300 (tuple_expansion)


State 1427

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  303                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1498
    '&'  shift, and go to state 389

    $default  reduce using rule 565 (optional_ref)

    optional_ref  go to state 1499


State 1428

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1500


State 1429

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 1501


State 1430

  335 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 335 (capture_list)


State 1431

  337 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 337 (optional_capture_list)


State 1432

  325 block_or_simple_block: "=>" . expr
  326                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1502
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1503
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1433

  324 block_or_simple_block: expression_block .

    $default  reduce using rule 324 (block_or_simple_block)


State 1434

  340 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 340 (expr_full_block)


State 1435

  473 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "??"        shift, and go to state 410
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '>'         shift, and go to state 1504
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    dim_list  go to state 416


State 1436

  513 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1437

  479 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1505


State 1438

  511 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1439

  393 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 393 (expr_method_call)


State 1440

  508 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1441

  484 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 356
    type_declaration             go to state 1506


State 1442

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr '?' "as" "$f" '(' expr . ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1507


State 1443

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr '.' "?." "$f" '(' expr . ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1508


State 1444

  507 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1445

  406 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 406 (expr_field)


State 1446

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr '.' '.' "$f" '(' expr . ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1509


State 1447

  522 optional_constant: "const" .

    $default  reduce using rule 522 (optional_constant)


State 1448

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 532 ($@35)

    $@35  go to state 1510


State 1449

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1447

    $default  reduce using rule 521 (optional_constant)

    optional_constant  go to state 1511


State 1450

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 618
    "name"  shift, and go to state 619

    variable_declaration         go to state 1512
    variable_name_with_pos_list  go to state 621


State 1451

  695 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1513


State 1452

  804 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 903
    "name"  shift, and go to state 1300

    make_struct_fields  go to state 909
    make_struct_dim     go to state 1514


State 1453

  807 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 903
    "name"  shift, and go to state 1300

    make_struct_fields  go to state 909
    make_struct_dim     go to state 1515


State 1454

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1516


State 1455

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1517


State 1456

  831 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1518
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1457

  844 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 687
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_map_tuple          go to state 695
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    expr_map_tuple_list     go to state 1519
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1458

  843 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1520


State 1459

  309 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 309 (expr_cast)


State 1460

  312 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 312 (expr_cast)


State 1461

  315 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 315 (expr_cast)


State 1462

  835 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 1521
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1463

  822 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 903
    "name"  shift, and go to state 1300

    make_struct_fields  go to state 909
    make_struct_dim     go to state 1522


State 1464

  810 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 903
    "name"  shift, and go to state 1300

    make_struct_fields  go to state 909
    make_struct_dim     go to state 1523


State 1465

  467 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 467 (expr)


State 1466

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  468     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1524


State 1467

  339 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 339 (expr_block)


State 1468

  506 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1469

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  851 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1525
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779

    $default  reduce using rule 845 (array_comprehension_where)

    array_comprehension_where  go to state 1526


State 1470

  776 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1527
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1471

  775 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1528
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1472

  799 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 799 (make_struct_decl)


State 1473

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  778                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1529


State 1474

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  774 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 774 (make_struct_fields)


State 1475

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  773 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 773 (make_struct_fields)


State 1476

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  852 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1525
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779

    $default  reduce using rule 845 (array_comprehension_where)

    array_comprehension_where  go to state 1530


State 1477

  801 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 801 (make_struct_decl)


State 1478

  854 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1525

    $default  reduce using rule 845 (array_comprehension_where)

    array_comprehension_where  go to state 1531


State 1479

  255 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 255 (expression_keyword)


State 1480

  250 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 247 (optional_expr_list)

    string_builder          go to state 505
    expr_reader             go to state 506
    optional_expr_list      go to state 1532
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 819
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1481

  258 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 258 (expression_keyword)


State 1482

  853 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1525

    $default  reduce using rule 845 (array_comprehension_where)

    array_comprehension_where  go to state 1533


State 1483

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  849 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1525
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779

    $default  reduce using rule 845 (array_comprehension_where)

    array_comprehension_where  go to state 1534


State 1484

  850 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1535
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1485

  399 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 939
    "name"  shift, and go to state 59

    name_in_namespace  go to state 942
    func_addr_name     go to state 1536


State 1486

  402 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 401 ($@25)

    $@25  go to state 1537


State 1487

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1488

  280 expression_return_no_pipe: "return" .
  281                          | "return" . expr_list
  282                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1538
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    $default  reduce using rule 280 (expression_return_no_pipe)

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 637
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1489

  286 expression_yield_no_pipe: "yield" . expr
  287                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "<-"                              shift, and go to state 1539
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1540
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1490

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1491

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1492

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1493

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1494

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1495

   67 expression_if_one_liner: expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 67 (expression_if_one_liner)


State 1496

  342 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1541


State 1497

  391 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1542


State 1498

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 310
    "array"      shift, and go to state 311
    "table"      shift, and go to state 312
    "typedecl"   shift, and go to state 313
    "iterator"   shift, and go to state 314
    "smart_ptr"  shift, and go to state 315
    "bool"       shift, and go to state 316
    "void"       shift, and go to state 317
    "string"     shift, and go to state 318
    "auto"       shift, and go to state 319
    "int"        shift, and go to state 320
    "int2"       shift, and go to state 321
    "int3"       shift, and go to state 322
    "int4"       shift, and go to state 323
    "uint"       shift, and go to state 324
    "bitfield"   shift, and go to state 325
    "uint2"      shift, and go to state 326
    "uint3"      shift, and go to state 327
    "uint4"      shift, and go to state 328
    "float"      shift, and go to state 329
    "float2"     shift, and go to state 330
    "float3"     shift, and go to state 331
    "float4"     shift, and go to state 332
    "range"      shift, and go to state 333
    "urange"     shift, and go to state 334
    "range64"    shift, and go to state 335
    "urange64"   shift, and go to state 336
    "block"      shift, and go to state 337
    "int64"      shift, and go to state 338
    "uint64"     shift, and go to state 339
    "double"     shift, and go to state 340
    "function"   shift, and go to state 341
    "lambda"     shift, and go to state 342
    "int8"       shift, and go to state 343
    "uint8"      shift, and go to state 344
    "int16"      shift, and go to state 345
    "uint16"     shift, and go to state 346
    "tuple"      shift, and go to state 347
    "variant"    shift, and go to state 348
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 349
    "name"       shift, and go to state 59
    '$'          shift, and go to state 350

    name_in_namespace            go to state 351
    basic_type_declaration       go to state 352
    structure_type_declaration   go to state 353
    auto_type_declaration        go to state 354
    bitfield_type_declaration    go to state 355
    type_declaration_no_options  go to state 1543


State 1499

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 1544


State 1500

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "<-"        shift, and go to state 571
    "??"        shift, and go to state 410
    ":="        shift, and go to state 572
    '='         shift, and go to state 573
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    copy_or_move_or_clone  go to state 1545
    dim_list               go to state 416


State 1501

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1546
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1502

  326 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1547
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1503

  325 block_or_simple_block: "=>" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    ".."  error (nonassociative)

    $default  reduce using rule 325 (block_or_simple_block)


State 1504

  473 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 472 ($@29)

    $@29  go to state 1548


State 1505

  479 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 478 ($@31)

    $@31  go to state 1549


State 1506

  484 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  749 type_declaration: type_declaration . '|' type_declaration_no_options
  750                 | type_declaration . '|' '#'

    '|'  shift, and go to state 417
    '>'  shift, and go to state 1550


State 1507

  512 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1508

  510 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1509

  509 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1510

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1551


State 1511

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 534 ($@36)

    $@36  go to state 1552


State 1512

  528 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 528 (structure_variable_declaration)


State 1513

  695 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 1514

  781 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  804 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1153
    ')'                  shift, and go to state 1553


State 1515

  781 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  807 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1153
    ')'                  shift, and go to state 1554


State 1516

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1555
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1517

  320 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 320 (expr_type_info)


State 1518

  323 expr_list: expr_list . ',' expr
  831 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 936

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 1556


State 1519

  839 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  844 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 931

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 1557


State 1520

  843 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 843 (make_table_decl)


State 1521

  323 expr_list: expr_list . ',' expr
  835 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 936

    $default  reduce using rule 847 (optional_comma)

    optional_comma  go to state 1558


State 1522

  781 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  822 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1153
    ')'                  shift, and go to state 1559


State 1523

  781 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  810 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1153
    ')'                  shift, and go to state 1560


State 1524

  468 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 468 (expr)


State 1525

  846 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1561


State 1526

  851 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1562


State 1527

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  776 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 776 (make_struct_fields)


State 1528

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  775 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 775 (make_struct_fields)


State 1529

  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  778                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 834
    ":="  shift, and go to state 1563
    '='   shift, and go to state 836

    copy_or_move  go to state 1564


State 1530

  852 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1565


State 1531

  854 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1566


State 1532

  250 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1567


State 1533

  853 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1568


State 1534

  849 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1569


State 1535

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  850 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1525
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779

    $default  reduce using rule 845 (array_comprehension_where)

    array_comprehension_where  go to state 1570


State 1536

  399 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 399 (func_addr_expr)


State 1537

  402 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 939
    "name"  shift, and go to state 59

    name_in_namespace  go to state 942
    func_addr_name     go to state 1571


State 1538

  282 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    expr_list               go to state 851
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 706
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1539

  287 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1572
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1540

  286 expression_yield_no_pipe: "yield" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 286 (expression_yield_no_pipe)


State 1541

  342 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 342 (expr_full_block_assumed_piped)


State 1542

  391 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 391 (expr_named_call)


State 1543

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  687 type_declaration_no_options: type_declaration_no_options . dim_list
  688                            | type_declaration_no_options . '[' ']'
  696                            | type_declaration_no_options . '-' '[' ']'
  697                            | type_declaration_no_options . "explicit"
  698                            | type_declaration_no_options . "const"
  699                            | type_declaration_no_options . '-' "const"
  700                            | type_declaration_no_options . '&'
  701                            | type_declaration_no_options . '-' '&'
  702                            | type_declaration_no_options . '#'
  703                            | type_declaration_no_options . "implicit"
  704                            | type_declaration_no_options . '-' '#'
  705                            | type_declaration_no_options . "==" "const"
  706                            | type_declaration_no_options . "==" '&'
  707                            | type_declaration_no_options . '?'
  711                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 406
    "implicit"  shift, and go to state 407
    "explicit"  shift, and go to state 408
    "=="        shift, and go to state 409
    "<-"        shift, and go to state 571
    "??"        shift, and go to state 410
    ":="        shift, and go to state 572
    '='         shift, and go to state 573
    '?'         shift, and go to state 411
    '&'         shift, and go to state 412
    '-'         shift, and go to state 413
    '['         shift, and go to state 414
    '#'         shift, and go to state 415

    copy_or_move_or_clone  go to state 1573
    dim_list               go to state 416


State 1544

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1574
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1545

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1575
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1546

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1576
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779


State 1547

  326 block_or_simple_block: "=>" "<-" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 326 (block_or_simple_block)


State 1548

  473 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 473 (expr)


State 1549

  479 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 479 (expr)


State 1550

  484 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 483 ($@33)

    $@33  go to state 1577


State 1551

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1578


State 1552

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1579


State 1553

  804 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')' .

    $default  reduce using rule 804 (make_struct_decl)


State 1554

  807 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')' .

    $default  reduce using rule 807 (make_struct_decl)


State 1555

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779
    ')'    shift, and go to state 1580


State 1556

  831 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1581


State 1557

  844 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1582


State 1558

  835 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1583


State 1559

  822 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')' .

    $default  reduce using rule 822 (make_tuple_call)


State 1560

  810 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')' .

    $default  reduce using rule 810 (make_struct_decl)


State 1561

  846 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1584
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1562

  851 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1585


State 1563

  778 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1586
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1564

  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1587
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1565

  852 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1588


State 1566

  854 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1589


State 1567

  250 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 250 (optional_expr_list_in_braces)


State 1568

  853 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 853 (array_comprehension)


State 1569

  849 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 849 (array_comprehension)


State 1570

  850 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1590


State 1571

  402 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 402 (func_addr_expr)


State 1572

  287 expression_yield_no_pipe: "yield" "<-" expr .
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 287 (expression_yield_no_pipe)


State 1573

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 431
    "class"                           shift, and go to state 432
    "true"                            shift, and go to state 437
    "false"                           shift, and go to state 438
    "new"                             shift, and go to state 439
    "typeinfo"                        shift, and go to state 440
    "type"                            shift, and go to state 441
    "array"                           shift, and go to state 442
    "null"                            shift, and go to state 444
    "table"                           shift, and go to state 447
    "deref"                           shift, and go to state 449
    "cast"                            shift, and go to state 452
    "upcast"                          shift, and go to state 453
    "addr"                            shift, and go to state 454
    "reinterpret"                     shift, and go to state 457
    "unsafe"                          shift, and go to state 564
    "fixed_array"                     shift, and go to state 461
    "default"                         shift, and go to state 462
    "bool"                            shift, and go to state 316
    "void"                            shift, and go to state 317
    "string"                          shift, and go to state 318
    "int"                             shift, and go to state 320
    "int2"                            shift, and go to state 321
    "int3"                            shift, and go to state 322
    "int4"                            shift, and go to state 323
    "uint"                            shift, and go to state 324
    "bitfield"                        shift, and go to state 463
    "uint2"                           shift, and go to state 326
    "uint3"                           shift, and go to state 327
    "uint4"                           shift, and go to state 328
    "float"                           shift, and go to state 329
    "float2"                          shift, and go to state 330
    "float3"                          shift, and go to state 331
    "float4"                          shift, and go to state 332
    "range"                           shift, and go to state 333
    "urange"                          shift, and go to state 334
    "range64"                         shift, and go to state 335
    "urange64"                        shift, and go to state 336
    "int64"                           shift, and go to state 338
    "uint64"                          shift, and go to state 339
    "double"                          shift, and go to state 340
    "int8"                            shift, and go to state 343
    "uint8"                           shift, and go to state 344
    "int16"                           shift, and go to state 345
    "uint16"                          shift, and go to state 346
    "tuple"                           shift, and go to state 464
    "variant"                         shift, and go to state 465
    "generator"                       shift, and go to state 466
    "++"                              shift, and go to state 468
    "--"                              shift, and go to state 469
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 473
    "$i"                              shift, and go to state 474
    "$v"                              shift, and go to state 475
    "$b"                              shift, and go to state 476
    "$a"                              shift, and go to state 477
    "$c"                              shift, and go to state 478
    "..."                             shift, and go to state 479
    "[["                              shift, and go to state 480
    "[{"                              shift, and go to state 481
    "{{"                              shift, and go to state 482
    "integer constant"                shift, and go to state 483
    "long integer constant"           shift, and go to state 484
    "unsigned integer constant"       shift, and go to state 485
    "unsigned long integer constant"  shift, and go to state 486
    "unsigned int8 constant"          shift, and go to state 487
    "floating point constant"         shift, and go to state 488
    "double constant"                 shift, and go to state 489
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 565
    "type function"                   shift, and go to state 491
    "start of the string"             shift, and go to state 492
    "begin of code block"             shift, and go to state 493
    '-'                               shift, and go to state 496
    '+'                               shift, and go to state 497
    '*'                               shift, and go to state 498
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 499
    '!'                               shift, and go to state 500
    '['                               shift, and go to state 501
    '('                               shift, and go to state 502
    '$'                               shift, and go to state 503
    '@'                               shift, and go to state 504

    string_builder          go to state 505
    expr_reader             go to state 506
    expression_keyword      go to state 566
    name_in_namespace       go to state 522
    expr_new                go to state 524
    expr_cast               go to state 534
    expr_type_decl          go to state 535
    expr_type_info          go to state 536
    block_or_lambda         go to state 537
    expr_full_block         go to state 538
    expr_numeric_const      go to state 539
    expr_named_call         go to state 542
    expr_method_call        go to state 543
    func_addr_expr          go to state 544
    expr_field              go to state 545
    expr_call               go to state 546
    expr                    go to state 1591
    expr_mtag               go to state 548
    basic_type_declaration  go to state 549
    make_decl               go to state 550
    make_struct_decl        go to state 551
    make_tuple_call         go to state 552
    make_dim_decl           go to state 553
    make_table_decl         go to state 554
    array_comprehension     go to state 555


State 1574

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1592
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779


State 1575

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1593
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779


State 1576

  304 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 304 (tuple_expansion_variable_declaration)


State 1577

  484 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 484 (expr)


State 1578

  533 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 533 (struct_variable_declaration_list)


State 1579

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 286

    expression_block  go to state 1594


State 1580

  321 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 321 (expr_type_info)


State 1581

  831 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')' .

    $default  reduce using rule 831 (make_dim_decl)


State 1582

  844 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 844 (make_table_decl)


State 1583

  835 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')' .

    $default  reduce using rule 835 (make_dim_decl)


State 1584

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  846 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 846 (array_comprehension_where)


State 1585

  851 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 851 (array_comprehension)


State 1586

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  778 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 778 (make_struct_fields)


State 1587

  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'
  777 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 727
    "as"   shift, and go to state 728
    "<<"   shift, and go to state 737
    ">>"   shift, and go to state 738
    "++"   shift, and go to state 739
    "--"   shift, and go to state 740
    "<="   shift, and go to state 741
    ">="   shift, and go to state 744
    "=="   shift, and go to state 745
    "!="   shift, and go to state 746
    "->"   shift, and go to state 747
    "??"   shift, and go to state 749
    "?."   shift, and go to state 750
    "?["   shift, and go to state 751
    "<|"   shift, and go to state 752
    "|>"   shift, and go to state 753
    "<<<"  shift, and go to state 755
    ">>>"  shift, and go to state 756
    "&&"   shift, and go to state 759
    "||"   shift, and go to state 760
    "^^"   shift, and go to state 761
    ".."   shift, and go to state 765
    '?'    shift, and go to state 767
    '|'    shift, and go to state 768
    '^'    shift, and go to state 769
    '&'    shift, and go to state 770
    '<'    shift, and go to state 771
    '>'    shift, and go to state 772
    '-'    shift, and go to state 773
    '+'    shift, and go to state 774
    '*'    shift, and go to state 775
    '/'    shift, and go to state 776
    '%'    shift, and go to state 777
    '.'    shift, and go to state 778
    '['    shift, and go to state 779

    $default  reduce using rule 777 (make_struct_fields)


State 1588

  852 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 852 (array_comprehension)


State 1589

  854 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 854 (array_comprehension)


State 1590

  850 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 850 (array_comprehension)


State 1591

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  392 expr_method_call: expr . "->" "name" '(' ')'
  393                 | expr . "->" "name" '(' expr_list ')'
  403 expr_field: expr . '.' "name"
  404           | expr . '.' '.' "name"
  405           | expr . '.' "name" '(' ')'
  406           | expr . '.' "name" '(' expr_list ')'
  409           | expr . '.' $@26 error $@27
  429 expr: expr . "<<" expr
  430     | expr . ">>" expr
  431     | expr . "<<<" expr
  432     | expr . ">>>" expr
  433     | expr . '+' expr
  434     | expr . '-' expr
  435     | expr . '*' expr
  436     | expr . '/' expr
  437     | expr . '%' expr
  438     | expr . '<' expr
  439     | expr . '>' expr
  440     | expr . "==" expr
  441     | expr . "!=" expr
  442     | expr . "<=" expr
  443     | expr . ">=" expr
  444     | expr . '&' expr
  445     | expr . '|' expr
  446     | expr . '^' expr
  447     | expr . "&&" expr
  448     | expr . "||" expr
  449     | expr . "^^" expr
  450     | expr . ".." expr
  453     | expr . "++"
  454     | expr . "--"
  456     | expr . '[' expr ']'
  457     | expr . '.' '[' expr ']'
  458     | expr . "?[" expr ']'
  459     | expr . '.' "?[" expr ']'
  460     | expr . "?." "name"
  461     | expr . '.' "?." "name"
  469     | expr . "??" expr
  470     | expr . '?' expr ':' expr
  473     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  474     | expr . "is" basic_type_declaration
  475     | expr . "is" "name"
  476     | expr . "as" "name"
  479     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  480     | expr . "as" basic_type_declaration
  481     | expr . '?' "as" "name"
  484     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  485     | expr . '?' "as" basic_type_declaration
  493     | expr . "<|" expr
  494     | expr . "|>" expr
  495     | expr . "|>" basic_type_declaration
  507 expr_mtag: expr . '.' "$f" '(' expr ')'
  508          | expr . "?." "$f" '(' expr ')'
  509          | expr . '.' '.' "$f" '(' expr ')'
  510          | expr . '.' "?." "$f" '(' expr ')'
  511          | expr . "as" "$f" '(' expr ')'
  512          | expr . '?' "as" "$f" '(' expr ')'
  513          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 727
    "as"                 shift, and go to state 728
    "<<"                 shift, and go to state 737
    ">>"                 shift, and go to state 738
    "++"                 shift, and go to state 739
    "--"                 shift, and go to state 740
    "<="                 shift, and go to state 741
    ">="                 shift, and go to state 744
    "=="                 shift, and go to state 745
    "!="                 shift, and go to state 746
    "->"                 shift, and go to state 747
    "??"                 shift, and go to state 749
    "?."                 shift, and go to state 750
    "?["                 shift, and go to state 751
    "<|"                 shift, and go to state 752
    "|>"                 shift, and go to state 753
    "<<<"                shift, and go to state 755
    ">>>"                shift, and go to state 756
    "&&"                 shift, and go to state 759
    "||"                 shift, and go to state 760
    "^^"                 shift, and go to state 761
    ".."                 shift, and go to state 765
    "end of expression"  shift, and go to state 1595
    '?'                  shift, and go to state 767
    '|'                  shift, and go to state 768
    '^'                  shift, and go to state 769
    '&'                  shift, and go to state 770
    '<'                  shift, and go to state 771
    '>'                  shift, and go to state 772
    '-'                  shift, and go to state 773
    '+'                  shift, and go to state 774
    '*'                  shift, and go to state 775
    '/'                  shift, and go to state 776
    '%'                  shift, and go to state 777
    '.'                  shift, and go to state 778
    '['                  shift, and go to state 779


State 1592

  303 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 303 (tuple_expansion_variable_declaration)


State 1593

  302 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 302 (tuple_expansion_variable_declaration)


State 1594

  535 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 535 (struct_variable_declaration_list)


State 1595

  301 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 301 (tuple_expansion_variable_declaration)
