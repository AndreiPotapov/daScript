Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 321 conflicts: 1 shift/reduce
State 418 conflicts: 1 shift/reduce
State 522 conflicts: 2 shift/reduce
State 524 conflicts: 2 shift/reduce
State 633 conflicts: 1 shift/reduce
State 829 conflicts: 1 shift/reduce
State 1059 conflicts: 1 shift/reduce
State 1177 conflicts: 1 shift/reduce
State 1467 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 string_builder_body: %empty
   30                    | string_builder_body character_sequence
   31                    | string_builder_body "{" expr "}"

   32 string_builder: "start of the string" string_builder_body "end of the string"

   33 reader_character_sequence: STRING_CHARACTER
   34                          | reader_character_sequence STRING_CHARACTER

   35 $@1: %empty

   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   37 options_declaration: "options" annotation_argument_list

   38 require_declaration: "require" require_module

   39 keyword_or_name: "name"
   40                | "keyword"
   41                | "type function"

   42 require_module_name: keyword_or_name
   43                    | '%' require_module_name
   44                    | require_module_name '.' keyword_or_name
   45                    | require_module_name '/' keyword_or_name

   46 require_module: require_module_name is_public_module
   47               | require_module_name "as" "name" is_public_module

   48 is_public_module: %empty
   49                 | "public"

   50 expect_declaration: "expect" expect_list

   51 expect_list: expect_error
   52            | expect_list ',' expect_error

   53 expect_error: "integer constant"
   54             | "integer constant" ':' "integer constant"

   55 expression_label: "label" "integer constant" ':'

   56 expression_goto: "goto" "label" "integer constant"
   57                | "goto" expr

   58 elif_or_static_elif: "elif"
   59                    | "static_elif"

   60 expression_else: %empty
   61                | "else" expression_block
   62                | elif_or_static_elif expr expression_block expression_else

   63 if_or_static_if: "if"
   64                | "static_if"

   65 expression_else_one_liner: %empty

   66 $@2: %empty

   67 expression_else_one_liner: "else" $@2 expression_if_one_liner

   68 expression_if_one_liner: expr
   69                        | expression_return_no_pipe
   70                        | expression_yield_no_pipe
   71                        | expression_break
   72                        | expression_continue

   73 expression_if_then_else: if_or_static_if expr expression_block expression_else

   74 $@3: %empty

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression"

   76 $@4: %empty

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   78 expression_unsafe: "unsafe" expression_block

   79 expression_while_loop: "while" expr expression_block

   80 expression_with: "with" expr expression_block

   81 $@5: %empty

   82 expression_with_alias: "assume" "name" '=' $@5 expr

   83 annotation_argument_value: string_constant
   84                          | "name"
   85                          | "integer constant"
   86                          | "floating point constant"
   87                          | "true"
   88                          | "false"

   89 annotation_argument_value_list: annotation_argument_value
   90                               | annotation_argument_value_list ',' annotation_argument_value

   91 annotation_argument_name: "name"
   92                         | "type"
   93                         | "in"

   94 annotation_argument: annotation_argument_name '=' string_constant
   95                    | annotation_argument_name '=' "name"
   96                    | annotation_argument_name '=' "integer constant"
   97                    | annotation_argument_name '=' "floating point constant"
   98                    | annotation_argument_name '=' "true"
   99                    | annotation_argument_name '=' "false"
  100                    | annotation_argument_name
  101                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  102 annotation_argument_list: annotation_argument
  103                         | annotation_argument_list ',' annotation_argument

  104 metadata_argument_list: '@' annotation_argument
  105                       | metadata_argument_list '@' annotation_argument
  106                       | metadata_argument_list "end of expression"

  107 annotation_declaration_name: name_in_namespace
  108                            | "require"
  109                            | "private"

  110 annotation_declaration_basic: annotation_declaration_name
  111                             | annotation_declaration_name '(' annotation_argument_list ')'

  112 annotation_declaration: annotation_declaration_basic
  113                       | '!' annotation_declaration
  114                       | annotation_declaration "&&" annotation_declaration
  115                       | annotation_declaration "||" annotation_declaration
  116                       | annotation_declaration "^^" annotation_declaration
  117                       | '(' annotation_declaration ')'
  118                       | "|>" annotation_declaration

  119 annotation_list: annotation_declaration
  120                | annotation_list ',' annotation_declaration

  121 optional_annotation_list: %empty
  122                         | '[' annotation_list ']'

  123 optional_function_argument_list: %empty
  124                                | '(' ')'
  125                                | '(' function_argument_list ')'

  126 optional_function_type: %empty
  127                       | ':' type_declaration

  128 function_name: "name"
  129              | "operator" '!'
  130              | "operator" '~'
  131              | "operator" "+="
  132              | "operator" "-="
  133              | "operator" "*="
  134              | "operator" "/="
  135              | "operator" "%="
  136              | "operator" "&="
  137              | "operator" "|="
  138              | "operator" "^="
  139              | "operator" "&&="
  140              | "operator" "||="
  141              | "operator" "^^="
  142              | "operator" "&&"
  143              | "operator" "||"
  144              | "operator" "^^"
  145              | "operator" '+'
  146              | "operator" '-'
  147              | "operator" '*'
  148              | "operator" '/'
  149              | "operator" '%'
  150              | "operator" '<'
  151              | "operator" '>'
  152              | "operator" ".."
  153              | "operator" "=="
  154              | "operator" "!="
  155              | "operator" "<="
  156              | "operator" ">="
  157              | "operator" '&'
  158              | "operator" '|'
  159              | "operator" '^'
  160              | "++" "operator"
  161              | "--" "operator"
  162              | "operator" "++"
  163              | "operator" "--"
  164              | "operator" "<<"
  165              | "operator" ">>"
  166              | "operator" "<<="
  167              | "operator" ">>="
  168              | "operator" "<<<"
  169              | "operator" ">>>"
  170              | "operator" "<<<="
  171              | "operator" ">>>="
  172              | "operator" '[' ']'
  173              | "operator" "?[" ']'
  174              | "operator" '.'
  175              | "operator" "?."
  176              | "operator" '.' "name"
  177              | "operator" '.' "name" ":="
  178              | "operator" "?." "name"
  179              | "operator" ":="
  180              | "operator" "delete"
  181              | "operator" "??"
  182              | "operator" "is"
  183              | "operator" "as"
  184              | "operator" "is" "name"
  185              | "operator" "as" "name"
  186              | "operator" '?' "as"
  187              | "operator" '?' "as" "name"
  188              | "bool"
  189              | "string"
  190              | "int"
  191              | "int2"
  192              | "int3"
  193              | "int4"
  194              | "uint"
  195              | "uint2"
  196              | "uint3"
  197              | "uint4"
  198              | "float"
  199              | "float2"
  200              | "float3"
  201              | "float4"
  202              | "range"
  203              | "urange"
  204              | "range64"
  205              | "urange64"
  206              | "int64"
  207              | "uint64"
  208              | "double"
  209              | "int8"
  210              | "uint8"
  211              | "int16"
  212              | "uint16"

  213 global_function_declaration: optional_annotation_list "def" function_declaration

  214 optional_public_or_private_function: %empty
  215                                    | "private"
  216                                    | "public"

  217 function_declaration_header: function_name optional_function_argument_list optional_function_type

  218 $@6: %empty

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  220 expression_block: "begin of code block" expressions "end of code block"
  221                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  222 expr_call_pipe: expr expr_full_block_assumed_piped
  223               | expression_keyword expr_full_block_assumed_piped
  224               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  225 expression_any: "end of expression"
  226               | expr_pipe
  227               | expr_keyword
  228               | expr_assign_pipe
  229               | expr_assign "end of expression"
  230               | expression_delete "end of expression"
  231               | expression_let
  232               | expression_while_loop
  233               | expression_unsafe
  234               | expression_with
  235               | expression_with_alias
  236               | expression_for_loop
  237               | expression_break "end of expression"
  238               | expression_continue "end of expression"
  239               | expression_return
  240               | expression_yield
  241               | expression_if_then_else
  242               | expression_try_catch
  243               | expression_label "end of expression"
  244               | expression_goto "end of expression"
  245               | "pass" "end of expression"

  246 expressions: %empty
  247            | expressions expression_any
  248            | expressions error

  249 expr_keyword: "keyword" expr expression_block

  250 optional_expr_list: %empty
  251                   | expr_list optional_comma

  252 optional_expr_list_in_braces: %empty
  253                             | '(' optional_expr_list optional_comma ')'

  254 optional_expr_map_tuple_list: %empty
  255                             | expr_map_tuple_list optional_comma

  256 type_declaration_no_options_list: type_declaration
  257                                 | type_declaration_no_options_list c_or_s type_declaration

  258 $@7: %empty

  259 $@8: %empty

  260 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  261 $@9: %empty

  262 $@10: %empty

  263 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  264 expr_pipe: expr_assign " <|" expr_block
  265          | "@ <|" expr_block
  266          | "@@ <|" expr_block
  267          | "$ <|" expr_block
  268          | expr_call_pipe

  269 name_in_namespace: "name"
  270                  | "name" "::" "name"
  271                  | "::" "name"

  272 expression_delete: "delete" expr
  273                  | "delete" "explicit" expr

  274 $@11: %empty

  275 $@12: %empty

  276 new_type_declaration: '<' $@11 type_declaration '>' $@12
  277                     | structure_type_declaration

  278 expr_new: "new" new_type_declaration
  279         | "new" new_type_declaration '(' use_initializer ')'
  280         | "new" new_type_declaration '(' expr_list ')'
  281         | "new" new_type_declaration '(' make_struct_single ')'
  282         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  283         | "new" make_decl

  284 expression_break: "break"

  285 expression_continue: "continue"

  286 expression_return_no_pipe: "return"
  287                          | "return" expr_list
  288                          | "return" "<-" expr_list

  289 expression_return: expression_return_no_pipe "end of expression"
  290                  | "return" expr_pipe
  291                  | "return" "<-" expr_pipe

  292 expression_yield_no_pipe: "yield" expr
  293                         | "yield" "<-" expr

  294 expression_yield: expression_yield_no_pipe "end of expression"
  295                 | "yield" expr_pipe
  296                 | "yield" "<-" expr_pipe

  297 expression_try_catch: "try" expression_block "recover" expression_block

  298 kwd_let_var_or_nothing: "let"
  299                       | "var"
  300                       | %empty

  301 kwd_let: "let"
  302        | "var"

  303 optional_in_scope: "inscope"
  304                  | %empty

  305 tuple_expansion: "name"
  306                | tuple_expansion ',' "name"

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  308                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"
  310                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  311 expression_let: kwd_let optional_in_scope let_variable_declaration
  312               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  313 $@13: %empty

  314 $@14: %empty

  315 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  316 $@15: %empty

  317 $@16: %empty

  318 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  319 $@17: %empty

  320 $@18: %empty

  321 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  322 $@19: %empty

  323 $@20: %empty

  324 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  325 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  326               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  327               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  328               | "typeinfo" name_in_namespace '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  330               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  331 expr_list: expr
  332          | expr_list ',' expr

  333 block_or_simple_block: expression_block
  334                      | "=>" expr
  335                      | "=>" "<-" expr

  336 block_or_lambda: '$'
  337                | '@'
  338                | '@' '@'

  339 capture_entry: '&' "name"
  340              | '=' "name"
  341              | "<-" "name"
  342              | ":=" "name"
  343              | "name" '(' "name" ')'

  344 capture_list: capture_entry
  345             | capture_list ',' capture_entry

  346 optional_capture_list: %empty
  347                      | "[[" capture_list ']' ']'
  348                      | "capture" '(' capture_list ')'

  349 expr_block: expression_block
  350           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  352 $@21: %empty

  353 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  354 expr_numeric_const: "integer constant"
  355                   | "unsigned integer constant"
  356                   | "long integer constant"
  357                   | "unsigned long integer constant"
  358                   | "unsigned int8 constant"
  359                   | "floating point constant"
  360                   | "double constant"

  361 expr_assign: expr
  362            | expr '=' expr
  363            | expr "<-" expr
  364            | expr ":=" expr
  365            | expr "&=" expr
  366            | expr "|=" expr
  367            | expr "^=" expr
  368            | expr "&&=" expr
  369            | expr "||=" expr
  370            | expr "^^=" expr
  371            | expr "+=" expr
  372            | expr "-=" expr
  373            | expr "*=" expr
  374            | expr "/=" expr
  375            | expr "%=" expr
  376            | expr "<<=" expr
  377            | expr ">>=" expr
  378            | expr "<<<=" expr
  379            | expr ">>>=" expr

  380 expr_assign_pipe_right: "@ <|" expr_block
  381                       | "@@ <|" expr_block
  382                       | "$ <|" expr_block
  383                       | expr_call_pipe

  384 expr_assign_pipe: expr '=' expr_assign_pipe_right
  385                 | expr "<-" expr_assign_pipe_right
  386                 | expr "&=" expr_assign_pipe_right
  387                 | expr "|=" expr_assign_pipe_right
  388                 | expr "^=" expr_assign_pipe_right
  389                 | expr "&&=" expr_assign_pipe_right
  390                 | expr "||=" expr_assign_pipe_right
  391                 | expr "^^=" expr_assign_pipe_right
  392                 | expr "+=" expr_assign_pipe_right
  393                 | expr "-=" expr_assign_pipe_right
  394                 | expr "*=" expr_assign_pipe_right
  395                 | expr "/=" expr_assign_pipe_right
  396                 | expr "%=" expr_assign_pipe_right
  397                 | expr "<<=" expr_assign_pipe_right
  398                 | expr ">>=" expr_assign_pipe_right
  399                 | expr "<<<=" expr_assign_pipe_right
  400                 | expr ">>>=" expr_assign_pipe_right

  401 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  402                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  403 expr_method_call: expr "->" "name" '(' ')'
  404                 | expr "->" "name" '(' expr_list ')'

  405 func_addr_name: name_in_namespace
  406               | "$i" '(' expr ')'

  407 func_addr_expr: '@' '@' func_addr_name

  408 $@22: %empty

  409 $@23: %empty

  410 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  411 $@24: %empty

  412 $@25: %empty

  413 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  414 expr_field: expr '.' "name"
  415           | expr '.' '.' "name"
  416           | expr '.' "name" '(' ')'
  417           | expr '.' "name" '(' expr_list ')'
  418           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr '.' basic_type_declaration '(' ')'
  420           | expr '.' basic_type_declaration '(' expr_list ')'

  421 $@26: %empty

  422 $@27: %empty

  423 expr_field: expr '.' $@26 error $@27

  424 expr_call: name_in_namespace '(' ')'
  425          | name_in_namespace '(' "uninitialized" ')'
  426          | name_in_namespace '(' make_struct_single ')'
  427          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  428          | name_in_namespace '(' expr_list ')'
  429          | basic_type_declaration '(' ')'
  430          | basic_type_declaration '(' expr_list ')'

  431 expr: "null"
  432     | name_in_namespace
  433     | expr_numeric_const
  434     | expr_reader
  435     | string_builder
  436     | make_decl
  437     | "true"
  438     | "false"
  439     | expr_field
  440     | expr_mtag
  441     | '!' expr
  442     | '~' expr
  443     | '+' expr
  444     | '-' expr
  445     | expr "<<" expr
  446     | expr ">>" expr
  447     | expr "<<<" expr
  448     | expr ">>>" expr
  449     | expr '+' expr
  450     | expr '-' expr
  451     | expr '*' expr
  452     | expr '/' expr
  453     | expr '%' expr
  454     | expr '<' expr
  455     | expr '>' expr
  456     | expr "==" expr
  457     | expr "!=" expr
  458     | expr "<=" expr
  459     | expr ">=" expr
  460     | expr '&' expr
  461     | expr '|' expr
  462     | expr '^' expr
  463     | expr "&&" expr
  464     | expr "||" expr
  465     | expr "^^" expr
  466     | expr ".." expr
  467     | "++" expr
  468     | "--" expr
  469     | expr "++"
  470     | expr "--"
  471     | '(' expr_list optional_comma ')'
  472     | expr '[' expr ']'
  473     | expr '.' '[' expr ']'
  474     | expr "?[" expr ']'
  475     | expr '.' "?[" expr ']'
  476     | expr "?." "name"
  477     | expr '.' "?." "name"
  478     | func_addr_expr
  479     | expr_call
  480     | '*' expr
  481     | "deref" '(' expr ')'
  482     | "addr" '(' expr ')'
  483     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  484     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  485     | expr "??" expr
  486     | expr '?' expr ':' expr

  487 $@28: %empty

  488 $@29: %empty

  489 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr "is" basic_type_declaration
  491     | expr "is" "name"
  492     | expr "as" "name"

  493 $@30: %empty

  494 $@31: %empty

  495 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr "as" basic_type_declaration
  497     | expr '?' "as" "name"

  498 $@32: %empty

  499 $@33: %empty

  500 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr '?' "as" basic_type_declaration
  502     | expr_type_info
  503     | expr_type_decl
  504     | expr_cast
  505     | expr_new
  506     | expr_method_call
  507     | expr_named_call
  508     | expr_full_block
  509     | expr "<|" expr
  510     | expr "|>" expr
  511     | expr "|>" basic_type_declaration
  512     | name_in_namespace "name"
  513     | "unsafe" '(' expr ')'
  514     | expression_keyword

  515 expr_mtag: "$$" '(' expr ')'
  516          | "$i" '(' expr ')'
  517          | "$v" '(' expr ')'
  518          | "$b" '(' expr ')'
  519          | "$a" '(' expr ')'
  520          | "..."
  521          | "$c" '(' expr ')' '(' ')'
  522          | "$c" '(' expr ')' '(' expr_list ')'
  523          | expr '.' "$f" '(' expr ')'
  524          | expr "?." "$f" '(' expr ')'
  525          | expr '.' '.' "$f" '(' expr ')'
  526          | expr '.' "?." "$f" '(' expr ')'
  527          | expr "as" "$f" '(' expr ')'
  528          | expr '?' "as" "$f" '(' expr ')'
  529          | expr "is" "$f" '(' expr ')'
  530          | '@' '@' "$c" '(' expr ')'

  531 optional_field_annotation: %empty
  532                          | "[[" annotation_argument_list ']' ']'
  533                          | metadata_argument_list

  534 optional_override: %empty
  535                  | "override"
  536                  | "sealed"

  537 optional_constant: %empty
  538                  | "const"

  539 optional_public_or_private_member_variable: %empty
  540                                           | "public"
  541                                           | "private"

  542 optional_static_member_variable: %empty
  543                                | "static"

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  545 struct_variable_declaration_list: %empty

  546 $@34: %empty

  547 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression"

  548 $@35: %empty

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"

  550 $@36: %empty

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  552                                 | struct_variable_declaration_list '[' annotation_list ']' "end of expression"

  553 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  554                              | "$a" '(' expr ')'

  555 function_argument_list: function_argument_declaration
  556                       | function_argument_list "end of expression" function_argument_declaration

  557 tuple_type: type_declaration
  558           | "name" ':' type_declaration

  559 tuple_type_list: tuple_type
  560                | tuple_type_list c_or_s tuple_type

  561 tuple_alias_type_list: %empty
  562                      | tuple_alias_type_list c_or_s
  563                      | tuple_alias_type_list tuple_type c_or_s

  564 variant_type: "name" ':' type_declaration

  565 variant_type_list: variant_type
  566                  | variant_type_list c_or_s variant_type

  567 variant_alias_type_list: %empty
  568                        | variant_alias_type_list c_or_s
  569                        | variant_alias_type_list variant_type c_or_s

  570 copy_or_move: '='
  571             | "<-"

  572 variable_declaration: variable_name_with_pos_list
  573                     | variable_name_with_pos_list '&'
  574                     | variable_name_with_pos_list ':' type_declaration
  575                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  576                     | variable_name_with_pos_list copy_or_move expr
  577                     | variable_name_with_pos_list copy_or_move expr_pipe

  578 copy_or_move_or_clone: '='
  579                      | "<-"
  580                      | ":="

  581 optional_ref: %empty
  582             | '&'

  583 let_variable_name_with_pos_list: "name"
  584                                | "$i" '(' expr ')'
  585                                | "name" "aka" "name"
  586                                | let_variable_name_with_pos_list ',' "name"
  587                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  588 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  589                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  590                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  591                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  592                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  593 global_variable_declaration_list: %empty

  594 $@37: %empty

  595 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  596 optional_shared: %empty
  597                | "shared"

  598 optional_public_or_private_variable: %empty
  599                                    | "private"
  600                                    | "public"

  601 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  602 $@38: %empty

  603 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  604 enum_list: %empty
  605          | enum_list "end of expression"
  606          | enum_list "name" "end of expression"
  607          | enum_list "name" '=' expr "end of expression"

  608 optional_public_or_private_alias: %empty
  609                                 | "private"
  610                                 | "public"

  611 $@39: %empty

  612 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  613 alias_list: single_alias "end of expression"
  614           | alias_list single_alias "end of expression"

  615 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"

  616 $@40: %empty

  617 alias_declaration: "typedef" $@40 single_alias "end of expression"

  618 optional_public_or_private_enum: %empty
  619                                | "private"
  620                                | "public"

  621 enum_name: "name"

  622 $@41: %empty

  623 $@42: %empty

  624 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"

  625 $@43: %empty

  626 $@44: %empty

  627 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

  628 optional_structure_parent: %empty
  629                          | ':' name_in_namespace

  630 optional_sealed: %empty
  631                | "sealed"

  632 structure_name: optional_sealed "name" optional_structure_parent

  633 class_or_struct: "class"
  634                | "struct"

  635 optional_public_or_private_structure: %empty
  636                                     | "private"
  637                                     | "public"

  638 optional_struct_variable_declaration_list: %empty
  639                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  640 $@45: %empty

  641 $@46: %empty

  642 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  643 variable_name_with_pos_list: "name"
  644                            | "$i" '(' expr ')'
  645                            | "name" "aka" "name"
  646                            | variable_name_with_pos_list ',' "name"
  647                            | variable_name_with_pos_list ',' "name" "aka" "name"

  648 basic_type_declaration: "bool"
  649                       | "string"
  650                       | "int"
  651                       | "int8"
  652                       | "int16"
  653                       | "int64"
  654                       | "int2"
  655                       | "int3"
  656                       | "int4"
  657                       | "uint"
  658                       | "uint8"
  659                       | "uint16"
  660                       | "uint64"
  661                       | "uint2"
  662                       | "uint3"
  663                       | "uint4"
  664                       | "float"
  665                       | "float2"
  666                       | "float3"
  667                       | "float4"
  668                       | "void"
  669                       | "range"
  670                       | "urange"
  671                       | "range64"
  672                       | "urange64"
  673                       | "double"
  674                       | "bitfield"

  675 enum_basic_type_declaration: "int"
  676                            | "int8"
  677                            | "int16"
  678                            | "uint"
  679                            | "uint8"
  680                            | "uint16"
  681                            | "int64"
  682                            | "uint64"

  683 structure_type_declaration: name_in_namespace

  684 auto_type_declaration: "auto"
  685                      | "auto" '(' "name" ')'
  686                      | "$t" '(' expr ')'

  687 bitfield_bits: "name"
  688              | bitfield_bits "end of expression" "name"

  689 bitfield_alias_bits: %empty
  690                    | bitfield_alias_bits "end of expression"
  691                    | bitfield_alias_bits "name" "end of expression"

  692 $@47: %empty

  693 $@48: %empty

  694 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  695 c_or_s: ','
  696       | "end of expression"

  697 table_type_pair: type_declaration
  698                | type_declaration c_or_s type_declaration

  699 dim_list: '[' expr ']'
  700         | dim_list '[' expr ']'

  701 type_declaration_no_options: basic_type_declaration
  702                            | auto_type_declaration
  703                            | bitfield_type_declaration
  704                            | structure_type_declaration
  705                            | type_declaration_no_options dim_list
  706                            | type_declaration_no_options '[' ']'

  707 $@49: %empty

  708 $@50: %empty

  709 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  710                            | "typedecl" '(' expr ')'
  711                            | '$' name_in_namespace '(' optional_expr_list ')'

  712 $@51: %empty

  713 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  714                            | type_declaration_no_options '-' '[' ']'
  715                            | type_declaration_no_options "explicit"
  716                            | type_declaration_no_options "const"
  717                            | type_declaration_no_options '-' "const"
  718                            | type_declaration_no_options '&'
  719                            | type_declaration_no_options '-' '&'
  720                            | type_declaration_no_options '#'
  721                            | type_declaration_no_options "implicit"
  722                            | type_declaration_no_options '-' '#'
  723                            | type_declaration_no_options "==" "const"
  724                            | type_declaration_no_options "==" '&'
  725                            | type_declaration_no_options '?'

  726 $@52: %empty

  727 $@53: %empty

  728 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  729                            | type_declaration_no_options "??"

  730 $@54: %empty

  731 $@55: %empty

  732 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  733 $@56: %empty

  734 $@57: %empty

  735 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  736 $@58: %empty

  737 $@59: %empty

  738 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  739                            | "block"

  740 $@60: %empty

  741 $@61: %empty

  742 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  743 $@62: %empty

  744 $@63: %empty

  745 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  746                            | "function"

  747 $@64: %empty

  748 $@65: %empty

  749 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  750 $@66: %empty

  751 $@67: %empty

  752 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  753                            | "lambda"

  754 $@68: %empty

  755 $@69: %empty

  756 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  757 $@70: %empty

  758 $@71: %empty

  759 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  760 $@72: %empty

  761 $@73: %empty

  762 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  763 $@74: %empty

  764 $@75: %empty

  765 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  766 type_declaration: type_declaration_no_options
  767                 | type_declaration '|' type_declaration_no_options
  768                 | type_declaration '|' '#'

  769 $@76: %empty

  770 $@77: %empty

  771 $@78: %empty

  772 $@79: %empty

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

  774 $@80: %empty

  775 $@81: %empty

  776 $@82: %empty

  777 $@83: %empty

  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

  779 $@84: %empty

  780 $@85: %empty

  781 $@86: %empty

  782 $@87: %empty

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

  784 make_decl: make_struct_decl
  785          | make_dim_decl
  786          | make_table_decl
  787          | array_comprehension
  788          | make_tuple_call

  789 make_struct_fields: "name" copy_or_move expr
  790                   | "name" ":=" expr
  791                   | make_struct_fields ',' "name" copy_or_move expr
  792                   | make_struct_fields ',' "name" ":=" expr
  793                   | "$f" '(' expr ')' copy_or_move expr
  794                   | "$f" '(' expr ')' ":=" expr
  795                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  797 make_variant_dim: make_struct_fields

  798 make_struct_single: make_struct_fields

  799 make_struct_dim: make_struct_fields
  800                | make_struct_dim "end of expression" make_struct_fields

  801 make_struct_dim_list: '(' make_struct_fields ')'
  802                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  803 make_struct_dim_decl: make_struct_fields
  804                     | make_struct_dim_list optional_comma

  805 optional_make_struct_dim_decl: make_struct_dim_decl
  806                              | %empty

  807 optional_block: %empty
  808               | "where" expr_block

  809 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  810                                    | ";}}"

  811 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  812                                    | ";}]"

  813 optional_trailing_semicolon_sqr_sqr: ']' ']'
  814                                    | ";]]"

  815 optional_trailing_delim_sqr_sqr: ']' ']'
  816                                | ";]]"
  817                                | ",]]"

  818 optional_trailing_delim_cur_sqr: "end of code block" ']'
  819                                | ";}]"
  820                                | ",}]"

  821 use_initializer: %empty
  822                | "uninitialized"

  823 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  824                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  825                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  826                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  827                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  828                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  829 $@88: %empty

  830 $@89: %empty

  831 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

  832 $@90: %empty

  833 $@91: %empty

  834 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  835 $@92: %empty

  836 $@93: %empty

  837 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

  838 $@94: %empty

  839 $@95: %empty

  840 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer

  841 make_tuple: expr
  842           | expr "=>" expr
  843           | make_tuple ',' expr

  844 make_map_tuple: expr "=>" expr
  845               | expr

  846 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  847 $@96: %empty

  848 $@97: %empty

  849 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

  850 make_dim: make_tuple
  851         | make_dim "end of expression" make_tuple

  852 make_dim_decl: '[' expr_list optional_comma ']'
  853              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  854              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  855 $@98: %empty

  856 $@99: %empty

  857 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  858 $@100: %empty

  859 $@101: %empty

  860 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  861 $@102: %empty

  862 $@103: %empty

  863 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  864              | "array" '(' expr_list optional_comma ')'

  865 $@104: %empty

  866 $@105: %empty

  867 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'
  868              | "fixed_array" '(' expr_list optional_comma ')'

  869 $@106: %empty

  870 $@107: %empty

  871 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

  872 make_table: make_map_tuple
  873           | make_table "end of expression" make_map_tuple

  874 expr_map_tuple_list: make_map_tuple
  875                    | expr_map_tuple_list ',' make_map_tuple

  876 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  877                | "{{" make_table optional_trailing_semicolon_cur_cur
  878                | "table" '(' optional_expr_map_tuple_list ')'
  879                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  880                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  881 array_comprehension_where: %empty
  882                          | "end of expression" "where" expr

  883 optional_comma: %empty
  884               | ','

  885 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  886                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  887                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  888                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  889                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  890                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 113 129 441
    '#' (35) 720 722 768
    '$' (36) 20 336 711 713
    '%' (37) 36 43 149 453
    '&' (38) 157 339 460 573 582 718 719 724
    '(' (40) 101 111 117 124 125 253 279 280 281 282 308 310 325 326 327 328 329 330 343 348 401 402 403 404 406 416 417 418 419 420 424 425 426 427 428 429 430 471 481 482 483 484 513 515 516 517 518 519 521 522 523 524 525 526 527 528 529 530 554 584 644 685 686 710 711 713 793 794 795 796 801 802 825 826 828 831 834 837 846 849 857 860 863 864 867 868 871 878 879 880
    ')' (41) 101 111 117 124 125 253 279 280 281 282 308 310 325 326 327 328 329 330 343 348 401 402 403 404 406 416 417 418 419 420 424 425 426 427 428 429 430 471 481 482 483 484 513 515 516 517 518 519 521 522 523 524 525 526 527 528 529 530 554 584 644 685 686 710 711 713 793 794 795 796 801 802 825 826 828 831 834 837 846 849 857 860 863 864 867 868 871 878 879 880
    '*' (42) 147 451 480
    '+' (43) 145 443 449
    ',' (44) 52 90 103 120 306 332 345 402 586 587 646 647 695 791 792 795 796 802 843 875 884
    '-' (45) 146 444 450 714 717 719 722
    '.' (46) 44 174 176 177 414 415 416 417 418 419 420 423 473 475 477 523 525 526
    '/' (47) 45 148 452
    ':' (58) 54 55 127 307 308 486 558 564 574 575 588 589 590 627 629
    "end of expression" (59) 15 16 75 106 225 229 230 237 238 243 244 245 289 294 307 308 309 310 330 547 549 552 556 588 589 591 605 606 607 613 614 617 688 690 691 696 800 851 873 882 885 886 887 888 889 890
    '<' (60) 150 224 260 263 276 315 318 321 324 326 327 329 330 410 413 454 483 484 489 495 500 694 709 713 728 732 735 738 742 745 749 752 756 759 762 765 831 834 837 840 849 857 860 863 867 871 879 880
    '=' (61) 82 94 95 96 97 98 99 101 340 362 384 570 578 607 612
    '>' (62) 151 224 260 263 276 315 318 321 324 326 327 329 330 410 413 455 483 484 489 495 500 694 709 713 728 732 735 738 742 745 749 752 756 759 762 765 831 834 837 840 849 857 860 863 867 871 879 880
    '?' (63) 186 187 486 497 500 501 528 725
    '@' (64) 104 105 337 338 407 410 413 530
    '[' (91) 122 172 401 402 418 472 473 552 699 700 706 714 852 885 886
    ']' (93) 122 172 173 307 309 347 401 402 418 472 473 474 475 532 552 699 700 706 714 811 813 815 818 852 885 886 887 888
    '^' (94) 159 462
    "begin of code block" (123) 220 221 601 615 624 627 639 773 778 783 876 889
    '|' (124) 158 461 767 768
    "end of code block" (125) 220 221 601 615 624 627 639 773 778 783 809 811 818 876 888 889 890
    '~' (126) 130 442
    error (256) 248 423
    "lexer error" (258)
    "capture" (259) 348
    "struct" (260) 634 831 857
    "class" (261) 633 834
    "let" (262) 298 301
    "def" (263) 213 549 551
    "while" (264) 79
    "if" (265) 63 75
    "static_if" (266) 64
    "else" (267) 61 67
    "for" (268) 77 885 886 887 888 889 890
    "recover" (269) 297
    "true" (270) 87 98 437
    "false" (271) 88 99 438
    "new" (272) 278 279 280 281 282 283
    "typeinfo" (273) 325 326 327 328 329 330
    "type" (274) 92 324 489 495 500 709
    "in" (275) 77 93 885 886 887 888 889 890
    "is" (276) 182 184 489 490 491 529
    "as" (277) 47 183 185 186 187 492 495 496 497 500 501 527 528
    "elif" (278) 58
    "static_elif" (279) 59
    "array" (280) 732 857 860 863 864 867
    "return" (281) 286 287 288 290 291
    "null" (282) 431
    "break" (283) 284
    "try" (284) 297
    "options" (285) 37
    "table" (286) 735 878 879 880
    "expect" (287) 50
    "const" (288) 538 716 717 723
    "require" (289) 38 108
    "operator" (290) 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    "enum" (291) 624 627
    "finally" (292) 221
    "delete" (293) 180 272 273
    "deref" (294) 481
    "typedef" (295) 615 617
    "typedecl" (296) 710
    "with" (297) 80
    "aka" (298) 585 587 645 647
    "assume" (299) 82
    "cast" (300) 315
    "override" (301) 535
    "abstract" (302) 549
    "upcast" (303) 318
    "iterator" (304) 738 886
    "var" (305) 299 302
    "addr" (306) 482
    "continue" (307) 285
    "where" (308) 808 882
    "pass" (309) 245
    "reinterpret" (310) 321
    "module" (311) 22
    "public" (312) 18 49 216 540 600 610 620 637
    "label" (313) 55 56
    "goto" (314) 56 57
    "implicit" (315) 721
    "explicit" (316) 273 715
    "shared" (317) 597
    "private" (318) 19 109 215 541 599 609 619 636
    "smart_ptr" (319) 728
    "unsafe" (320) 78 513
    "inscope" (321) 303
    "static" (322) 543
    "fixed_array" (323) 868 871
    "default" (324) 840
    "uninitialized" (325) 282 425 427 822
    "bool" (326) 188 648
    "void" (327) 668
    "string" (328) 189 649
    "auto" (329) 684 685
    "int" (330) 190 650 675
    "int2" (331) 191 654
    "int3" (332) 192 655
    "int4" (333) 193 656
    "uint" (334) 194 657 678
    "bitfield" (335) 674 694 783
    "uint2" (336) 195 661
    "uint3" (337) 196 662
    "uint4" (338) 197 663
    "float" (339) 198 664
    "float2" (340) 199 665
    "float3" (341) 200 666
    "float4" (342) 201 667
    "range" (343) 202 669
    "urange" (344) 203 670
    "range64" (345) 204 671
    "urange64" (346) 205 672
    "block" (347) 739 742 745
    "int64" (348) 206 653 681
    "uint64" (349) 207 660 682
    "double" (350) 208 673
    "function" (351) 746 749 752
    "lambda" (352) 753 756 759
    "int8" (353) 209 651 676
    "uint8" (354) 210 658 679
    "int16" (355) 211 652 677
    "uint16" (356) 212 659 680
    "tuple" (357) 762 773 846 849 860
    "variant" (358) 765 778 837 863
    "generator" (359) 224 483 484
    "yield" (360) 292 293 295 296
    "sealed" (361) 536 631
    "+=" (362) 131 371 392
    "-=" (363) 132 372 393
    "/=" (364) 134 374 395
    "*=" (365) 133 373 394
    "%=" (366) 135 375 396
    "&=" (367) 136 365 386
    "|=" (368) 137 366 387
    "^=" (369) 138 367 388
    "<<" (370) 164 445
    ">>" (371) 165 446
    "++" (372) 160 162 467 469
    "--" (373) 161 163 468 470
    "<=" (374) 155 458
    "<<=" (375) 166 376 397
    ">>=" (376) 167 377 398
    ">=" (377) 156 459
    "==" (378) 153 456 723 724
    "!=" (379) 154 457
    "->" (380) 403 404
    "<-" (381) 288 291 293 296 335 341 363 385 571 579
    "??" (382) 181 485 729
    "?." (383) 175 178 476 477 524 526
    "?[" (384) 173 474 475
    "<|" (385) 509
    " <|" (386) 264
    "$ <|" (387) 267 382
    "@ <|" (388) 265 380
    "@@ <|" (389) 266 381
    "|>" (390) 118 510 511
    ":=" (391) 177 179 342 364 580 790 792 794 796
    "<<<" (392) 168 447
    ">>>" (393) 169 448
    "<<<=" (394) 170 378 399
    ">>>=" (395) 171 379 400
    "=>" (396) 334 335 842 844
    "::" (397) 270 271
    "&&" (398) 114 142 463
    "||" (399) 115 143 464
    "^^" (400) 116 144 465
    "&&=" (401) 139 368 389
    "||=" (402) 140 369 390
    "^^=" (403) 141 370 391
    ".." (404) 152 466
    "$$" (405) 515
    "$i" (406) 406 516 584 644
    "$v" (407) 517
    "$b" (408) 518
    "$a" (409) 519 554
    "$t" (410) 686
    "$c" (411) 521 522 530
    "$f" (412) 523 524 525 526 527 528 529 793 794 795 796
    "..." (413) 520
    "[[" (414) 307 309 347 532 823 824 825 826 853 887
    "[{" (415) 827 828 854 888
    "{{" (416) 877 890
    "integer constant" <i> (417) 53 54 55 56 85 96 354
    "long integer constant" <i64> (418) 356
    "unsigned integer constant" <ui> (419) 355
    "unsigned long integer constant" <ui64> (420) 357
    "unsigned int8 constant" <ui> (421) 358
    "floating point constant" <fd> (422) 86 97 359
    "double constant" <d> (423) 360
    "name" <s> (424) 21 39 47 82 84 91 95 128 176 177 178 184 185 187 269 270 271 305 306 326 327 329 330 339 340 341 342 343 403 404 414 415 416 417 418 476 477 491 492 497 512 558 564 583 585 586 587 606 607 612 621 632 643 645 646 647 685 687 688 691 773 778 783 789 790 791 792
    "keyword" <s> (425) 40 249 260
    "type function" <s> (426) 41 263
    "start of the string" (427) 27 28 32
    STRING_CHARACTER <ch> (428) 23 25 33 34
    STRING_CHARACTER_ESC (429) 24 26
    "end of the string" (430) 27 28 32
    "{" (431) 31
    "}" (432) 31
    "end of failed eader macro" (433)
    ";}}" (434) 810
    ";}]" (435) 812 819
    ";]]" (436) 814 816
    ",]]" (437) 817
    ",}]" (438) 820
    UNARY_MINUS (439)
    UNARY_PLUS (440)
    PRE_INC (441)
    PRE_DEC (442)
    POST_INC (443)
    POST_DEC (444)
    DEREF (445)


Nonterminals, with rules where they appear

    $accept (218)
        on left: 0
    program (219)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (220)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (221)
        on left: 17 18 19
        on right: 22
    module_name <s> (222)
        on left: 20 21
        on right: 22
    module_declaration (223)
        on left: 22
        on right: 2
    character_sequence <s> (224)
        on left: 23 24 25 26
        on right: 25 26 27 30
    string_constant <s> (225)
        on left: 27 28
        on right: 83 94
    string_builder_body <pExpression> (226)
        on left: 29 30 31
        on right: 30 31 32
    string_builder <pExpression> (227)
        on left: 32
        on right: 435
    reader_character_sequence (228)
        on left: 33 34
        on right: 34 36
    expr_reader <pExpression> (229)
        on left: 36
        on right: 16 434
    $@1 (230)
        on left: 35
        on right: 36
    options_declaration (231)
        on left: 37
        on right: 9
    require_declaration (232)
        on left: 38
        on right: 8
    keyword_or_name <s> (233)
        on left: 39 40 41
        on right: 42 44 45
    require_module_name <s> (234)
        on left: 42 43 44 45
        on right: 43 44 45 46 47
    require_module (235)
        on left: 46 47
        on right: 38
    is_public_module <b> (236)
        on left: 48 49
        on right: 46 47
    expect_declaration (237)
        on left: 50
        on right: 7
    expect_list (238)
        on left: 51 52
        on right: 50 52
    expect_error (239)
        on left: 53 54
        on right: 51 52
    expression_label <pExpression> (240)
        on left: 55
        on right: 243
    expression_goto <pExpression> (241)
        on left: 56 57
        on right: 244
    elif_or_static_elif <b> (242)
        on left: 58 59
        on right: 62
    expression_else <pExpression> (243)
        on left: 60 61 62
        on right: 62 73
    if_or_static_if <b> (244)
        on left: 63 64
        on right: 73
    expression_else_one_liner <pExpression> (245)
        on left: 65 67
        on right: 75
    $@2 (246)
        on left: 66
        on right: 67
    expression_if_one_liner <pExpression> (247)
        on left: 68 69 70 71 72
        on right: 67 75
    expression_if_then_else <pExpression> (248)
        on left: 73 75
        on right: 241
    $@3 (249)
        on left: 74
        on right: 75
    expression_for_loop <pExpression> (250)
        on left: 77
        on right: 236
    $@4 (251)
        on left: 76
        on right: 77
    expression_unsafe <pExpression> (252)
        on left: 78
        on right: 233
    expression_while_loop <pExpression> (253)
        on left: 79
        on right: 232
    expression_with <pExpression> (254)
        on left: 80
        on right: 234
    expression_with_alias <pExpression> (255)
        on left: 82
        on right: 235
    $@5 (256)
        on left: 81
        on right: 82
    annotation_argument_value <aa> (257)
        on left: 83 84 85 86 87 88
        on right: 89 90
    annotation_argument_value_list <aaList> (258)
        on left: 89 90
        on right: 90 101
    annotation_argument_name <s> (259)
        on left: 91 92 93
        on right: 94 95 96 97 98 99 100 101
    annotation_argument <aa> (260)
        on left: 94 95 96 97 98 99 100 101
        on right: 102 103 104 105
    annotation_argument_list <aaList> (261)
        on left: 102 103
        on right: 37 103 111 532
    metadata_argument_list <aaList> (262)
        on left: 104 105 106
        on right: 105 106 533
    annotation_declaration_name <s> (263)
        on left: 107 108 109
        on right: 110 111
    annotation_declaration_basic <fa> (264)
        on left: 110 111
        on right: 112
    annotation_declaration <fa> (265)
        on left: 112 113 114 115 116 117 118
        on right: 113 114 115 116 117 118 119 120
    annotation_list <faList> (266)
        on left: 119 120
        on right: 120 122 552
    optional_annotation_list <faList> (267)
        on left: 121 122
        on right: 213 350 351 353 549 551 624 627 642
    optional_function_argument_list <pVarDeclList> (268)
        on left: 123 124 125
        on right: 217 350 351 353 413 745 752 759
    optional_function_type <pTypeDecl> (269)
        on left: 126 127
        on right: 217 350 351 353 413 745 752 759
    function_name <s> (270)
        on left: 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212
        on right: 217
    global_function_declaration (271)
        on left: 213
        on right: 6
    optional_public_or_private_function <b> (272)
        on left: 214 215 216
        on right: 219
    function_declaration_header <pFuncDecl> (273)
        on left: 217
        on right: 219 549 551
    function_declaration <pFuncDecl> (274)
        on left: 219
        on right: 213
    $@6 (275)
        on left: 218
        on right: 219
    expression_block <pExpression> (276)
        on left: 220 221
        on right: 61 62 73 77 78 79 80 219 249 297 333 349 353 551
    expr_call_pipe <pExpression> (277)
        on left: 222 223 224
        on right: 268 383
    expression_any <pExpression> (278)
        on left: 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245
        on right: 247
    expressions <pExpression> (279)
        on left: 246 247 248
        on right: 220 221 247 248
    expr_keyword <pExpression> (280)
        on left: 249
        on right: 227
    optional_expr_list <pExpression> (281)
        on left: 250 251
        on right: 253 711 713 867
    optional_expr_list_in_braces <pExpression> (282)
        on left: 252 253
        on right: 263
    optional_expr_map_tuple_list <pExpression> (283)
        on left: 254 255
        on right: 878 879 880
    type_declaration_no_options_list <pTypeDeclList> (284)
        on left: 256 257
        on right: 257 260 263 713
    expression_keyword <pExpression> (285)
        on left: 260 263
        on right: 223 514
    $@7 (286)
        on left: 258
        on right: 260
    $@8 (287)
        on left: 259
        on right: 260
    $@9 (288)
        on left: 261
        on right: 263
    $@10 (289)
        on left: 262
        on right: 263
    expr_pipe <pExpression> (290)
        on left: 264 265 266 267 268
        on right: 226 290 291 295 296 577 590 592
    name_in_namespace <s> (291)
        on left: 269 270 271
        on right: 36 107 325 326 327 328 329 330 401 402 405 424 425 426 427 428 432 512 629 683 711 713
    expression_delete <pExpression> (292)
        on left: 272 273
        on right: 230
    new_type_declaration <pTypeDecl> (293)
        on left: 276 277
        on right: 278 279 280 281 282
    $@11 (294)
        on left: 274
        on right: 276
    $@12 (295)
        on left: 275
        on right: 276
    expr_new <pExpression> (296)
        on left: 278 279 280 281 282 283
        on right: 505
    expression_break <pExpression> (297)
        on left: 284
        on right: 71 237
    expression_continue <pExpression> (298)
        on left: 285
        on right: 72 238
    expression_return_no_pipe <pExpression> (299)
        on left: 286 287 288
        on right: 69 289
    expression_return <pExpression> (300)
        on left: 289 290 291
        on right: 239
    expression_yield_no_pipe <pExpression> (301)
        on left: 292 293
        on right: 70 294
    expression_yield <pExpression> (302)
        on left: 294 295 296
        on right: 240
    expression_try_catch <pExpression> (303)
        on left: 297
        on right: 242
    kwd_let_var_or_nothing <b> (304)
        on left: 298 299 300
        on right: 553
    kwd_let <b> (305)
        on left: 301 302
        on right: 311 312 601 603
    optional_in_scope <b> (306)
        on left: 303 304
        on right: 311 312
    tuple_expansion <pNameList> (307)
        on left: 305 306
        on right: 306 307 308 309 310
    tuple_expansion_variable_declaration <pVarDecl> (308)
        on left: 307 308 309 310
        on right: 312
    expression_let <pExpression> (309)
        on left: 311 312
        on right: 231
    expr_cast <pExpression> (310)
        on left: 315 318 321
        on right: 504
    $@13 (311)
        on left: 313
        on right: 315
    $@14 (312)
        on left: 314
        on right: 315
    $@15 (313)
        on left: 316
        on right: 318
    $@16 (314)
        on left: 317
        on right: 318
    $@17 (315)
        on left: 319
        on right: 321
    $@18 (316)
        on left: 320
        on right: 321
    expr_type_decl <pExpression> (317)
        on left: 324
        on right: 503
    $@19 (318)
        on left: 322
        on right: 324
    $@20 (319)
        on left: 323
        on right: 324
    expr_type_info <pExpression> (320)
        on left: 325 326 327 328 329 330
        on right: 502
    expr_list <pExpression> (321)
        on left: 331 332
        on right: 77 251 280 287 288 332 402 404 417 420 428 430 471 522 846 852 864 868 871 885 886 887 888 889 890
    block_or_simple_block <pExpression> (322)
        on left: 333 334 335
        on right: 350 351
    block_or_lambda <i> (323)
        on left: 336 337 338
        on right: 350 351 353
    capture_entry <pCapt> (324)
        on left: 339 340 341 342 343
        on right: 344 345
    capture_list <pCaptList> (325)
        on left: 344 345
        on right: 345 347 348
    optional_capture_list <pCaptList> (326)
        on left: 346 347 348
        on right: 224 350 351 353 483 484
    expr_block <pExpression> (327)
        on left: 349 350
        on right: 264 265 266 267 380 381 382 808
    expr_full_block <pExpression> (328)
        on left: 351
        on right: 508
    expr_full_block_assumed_piped <pExpression> (329)
        on left: 353
        on right: 222 223 224
    $@21 (330)
        on left: 352
        on right: 353
    expr_numeric_const <pExpression> (331)
        on left: 354 355 356 357 358 359 360
        on right: 433
    expr_assign <pExpression> (332)
        on left: 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379
        on right: 229 264
    expr_assign_pipe_right <pExpression> (333)
        on left: 380 381 382 383
        on right: 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400
    expr_assign_pipe <pExpression> (334)
        on left: 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400
        on right: 228
    expr_named_call <pExpression> (335)
        on left: 401 402
        on right: 507
    expr_method_call <pExpression> (336)
        on left: 403 404
        on right: 506
    func_addr_name <pExpression> (337)
        on left: 405 406
        on right: 407 410 413
    func_addr_expr <pExpression> (338)
        on left: 407 410 413
        on right: 478
    $@22 (339)
        on left: 408
        on right: 410
    $@23 (340)
        on left: 409
        on right: 410
    $@24 (341)
        on left: 411
        on right: 413
    $@25 (342)
        on left: 412
        on right: 413
    expr_field <pExpression> (343)
        on left: 414 415 416 417 418 419 420 423
        on right: 439
    $@26 (344)
        on left: 421
        on right: 423
    $@27 (345)
        on left: 422
        on right: 423
    expr_call <pExpression> (346)
        on left: 424 425 426 427 428 429 430
        on right: 479
    expr <pExpression> (347)
        on left: 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 489 490 491 492 495 496 497 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514
        on right
    $@28 (348)
        on left: 487
        on right: 489
    $@29 (349)
        on left: 488
        on right: 489
    $@30 (350)
        on left: 493
        on right: 495
    $@31 (351)
        on left: 494
        on right: 495
    $@32 (352)
        on left: 498
        on right: 500
    $@33 (353)
        on left: 499
        on right: 500
    expr_mtag <pExpression> (354)
        on left: 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530
        on right: 440
    optional_field_annotation <aaList> (355)
        on left: 531 532 533
        on right: 544 553 595 603
    optional_override <i> (356)
        on left: 534 535 536
        on right: 544 551
    optional_constant <b> (357)
        on left: 537 538
        on right: 549 551
    optional_public_or_private_member_variable <b> (358)
        on left: 539 540 541
        on right: 544 549 551
    optional_static_member_variable <b> (359)
        on left: 542 543
        on right: 544 551
    structure_variable_declaration <pVarDecl> (360)
        on left: 544
        on right: 547
    struct_variable_declaration_list <pVarDeclList> (361)
        on left: 545 547 549 551 552
        on right: 547 549 551 552 639
    $@34 (362)
        on left: 546
        on right: 547
    $@35 (363)
        on left: 548
        on right: 549
    $@36 (364)
        on left: 550
        on right: 551
    function_argument_declaration <pVarDecl> (365)
        on left: 553 554
        on right: 555 556
    function_argument_list <pVarDeclList> (366)
        on left: 555 556
        on right: 125 556
    tuple_type <pVarDecl> (367)
        on left: 557 558
        on right: 559 560 563
    tuple_type_list <pVarDeclList> (368)
        on left: 559 560
        on right: 560 762
    tuple_alias_type_list <pVarDeclList> (369)
        on left: 561 562 563
        on right: 562 563 773
    variant_type <pVarDecl> (370)
        on left: 564
        on right: 565 566 569
    variant_type_list <pVarDeclList> (371)
        on left: 565 566
        on right: 566 765
    variant_alias_type_list <pVarDeclList> (372)
        on left: 567 568 569
        on right: 568 569 778
    copy_or_move <b> (373)
        on left: 570 571
        on right: 575 576 577 789 791 793 795
    variable_declaration <pVarDecl> (374)
        on left: 572 573 574 575 576 577
        on right: 544 553
    copy_or_move_or_clone <i> (375)
        on left: 578 579 580
        on right: 307 308 309 310 589 590 591 592
    optional_ref <b> (376)
        on left: 581 582
        on right: 309 310 591 592
    let_variable_name_with_pos_list <pNameWithPosList> (377)
        on left: 583 584 585 586 587
        on right: 586 587 588 589 590 591 592
    let_variable_declaration <pVarDecl> (378)
        on left: 588 589 590 591 592
        on right: 311 595 603
    global_variable_declaration_list <pVarDeclList> (379)
        on left: 593 595
        on right: 595 601
    $@37 (380)
        on left: 594
        on right: 595
    optional_shared <b> (381)
        on left: 596 597
        on right: 22 601 603
    optional_public_or_private_variable <b> (382)
        on left: 598 599 600
        on right: 601 603
    global_let (383)
        on left: 601 603
        on right: 5
    $@38 (384)
        on left: 602
        on right: 603
    enum_list <pEnum> (385)
        on left: 604 605 606 607
        on right: 605 606 607 624 627
    optional_public_or_private_alias <b> (386)
        on left: 608 609 610
        on right: 612 773 778 783
    single_alias (387)
        on left: 612
        on right: 613 614 617
    $@39 (388)
        on left: 611
        on right: 612
    alias_list (389)
        on left: 613 614
        on right: 614 615
    alias_declaration (390)
        on left: 615 617
        on right: 10
    $@40 (391)
        on left: 616
        on right: 617
    optional_public_or_private_enum <b> (392)
        on left: 618 619 620
        on right: 624 627
    enum_name <pEnum> (393)
        on left: 621
        on right: 624 627
    enum_declaration (394)
        on left: 624 627
        on right: 4
    $@41 (395)
        on left: 622
        on right: 624
    $@42 (396)
        on left: 623
        on right: 624
    $@43 (397)
        on left: 625
        on right: 627
    $@44 (398)
        on left: 626
        on right: 627
    optional_structure_parent <s> (399)
        on left: 628 629
        on right: 632
    optional_sealed <b> (400)
        on left: 630 631
        on right: 632
    structure_name <pStructure> (401)
        on left: 632
        on right: 642
    class_or_struct <b> (402)
        on left: 633 634
        on right: 642
    optional_public_or_private_structure <b> (403)
        on left: 635 636 637
        on right: 642
    optional_struct_variable_declaration_list <pVarDeclList> (404)
        on left: 638 639
        on right: 642
    structure_declaration (405)
        on left: 642
        on right: 3
    $@45 (406)
        on left: 640
        on right: 642
    $@46 (407)
        on left: 641
        on right: 642
    variable_name_with_pos_list <pNameWithPosList> (408)
        on left: 643 644 645 646 647
        on right: 77 572 573 574 575 576 577 646 647 885 886 887 888 889 890
    basic_type_declaration <type> (409)
        on left: 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674
        on right: 419 420 429 430 490 496 501 511 701
    enum_basic_type_declaration <type> (410)
        on left: 675 676 677 678 679 680 681 682
        on right: 627
    structure_type_declaration <pTypeDecl> (411)
        on left: 683
        on right: 277 704
    auto_type_declaration <pTypeDecl> (412)
        on left: 684 685 686
        on right: 702
    bitfield_bits <pNameList> (413)
        on left: 687 688
        on right: 688 694
    bitfield_alias_bits <pNameList> (414)
        on left: 689 690 691
        on right: 690 691 783
    bitfield_type_declaration <pTypeDecl> (415)
        on left: 694
        on right: 703
    $@47 (416)
        on left: 692
        on right: 694
    $@48 (417)
        on left: 693
        on right: 694
    c_or_s (418)
        on left: 695 696
        on right: 257 327 560 562 563 566 568 569 698 880
    table_type_pair <aTypePair> (419)
        on left: 697 698
        on right: 735
    dim_list <pTypeDecl> (420)
        on left: 699 700
        on right: 700 705
    type_declaration_no_options <pTypeDecl> (421)
        on left: 701 702 703 704 705 706 709 710 711 713 714 715 716 717 718 719 720 721 722 723 724 725 728 729 732 735 738 739 742 745 746 749 752 753 756 759 762 765
        on right: 224 307 308 315 318 321 410 483 484 489 588 589 590 705 706 714 715 716 717 718 719 720 721 722 723 724 725 729 766 767 823 824 825 826 827 828 831 834 837 840 849 853 854 857 860 863 867 871 879 880
    $@49 (422)
        on left: 707
        on right: 709
    $@50 (423)
        on left: 708
        on right: 709
    $@51 (424)
        on left: 712
        on right: 713
    $@52 (425)
        on left: 726
        on right: 728
    $@53 (426)
        on left: 727
        on right: 728
    $@54 (427)
        on left: 730
        on right: 732
    $@55 (428)
        on left: 731
        on right: 732
    $@56 (429)
        on left: 733
        on right: 735
    $@57 (430)
        on left: 734
        on right: 735
    $@58 (431)
        on left: 736
        on right: 738
    $@59 (432)
        on left: 737
        on right: 738
    $@60 (433)
        on left: 740
        on right: 742
    $@61 (434)
        on left: 741
        on right: 742
    $@62 (435)
        on left: 743
        on right: 745
    $@63 (436)
        on left: 744
        on right: 745
    $@64 (437)
        on left: 747
        on right: 749
    $@65 (438)
        on left: 748
        on right: 749
    $@66 (439)
        on left: 750
        on right: 752
    $@67 (440)
        on left: 751
        on right: 752
    $@68 (441)
        on left: 754
        on right: 756
    $@69 (442)
        on left: 755
        on right: 756
    $@70 (443)
        on left: 757
        on right: 759
    $@71 (444)
        on left: 758
        on right: 759
    $@72 (445)
        on left: 760
        on right: 762
    $@73 (446)
        on left: 761
        on right: 762
    $@74 (447)
        on left: 763
        on right: 765
    $@75 (448)
        on left: 764
        on right: 765
    type_declaration <pTypeDecl> (449)
        on left: 766 767 768
        on right: 127 256 257 276 324 495 500 557 558 564 574 575 612 697 698 709 728 732 738 742 749 756 767 768
    tuple_alias_declaration (450)
        on left: 773
        on right: 12
    $@76 (451)
        on left: 769
        on right: 773
    $@77 (452)
        on left: 770
        on right: 773
    $@78 (453)
        on left: 771
        on right: 773
    $@79 (454)
        on left: 772
        on right: 773
    variant_alias_declaration (455)
        on left: 778
        on right: 11
    $@80 (456)
        on left: 774
        on right: 778
    $@81 (457)
        on left: 775
        on right: 778
    $@82 (458)
        on left: 776
        on right: 778
    $@83 (459)
        on left: 777
        on right: 778
    bitfield_alias_declaration (460)
        on left: 783
        on right: 13
    $@84 (461)
        on left: 779
        on right: 783
    $@85 (462)
        on left: 780
        on right: 783
    $@86 (463)
        on left: 781
        on right: 783
    $@87 (464)
        on left: 782
        on right: 783
    make_decl <pExpression> (465)
        on left: 784 785 786 787 788
        on right: 283 436
    make_struct_fields <pMakeStruct> (466)
        on left: 789 790 791 792 793 794 795 796
        on right: 401 402 418 791 792 795 796 797 798 799 800 801 802 803
    make_variant_dim <pExpression> (467)
        on left: 797
        on right: 837 863
    make_struct_single <pExpression> (468)
        on left: 798
        on right: 281 282 426 427
    make_struct_dim <pExpression> (469)
        on left: 799 800
        on right: 800 823 826 827 828
    make_struct_dim_list <pExpression> (470)
        on left: 801 802
        on right: 802 804
    make_struct_dim_decl <pExpression> (471)
        on left: 803 804
        on right: 805
    optional_make_struct_dim_decl <pExpression> (472)
        on left: 805 806
        on right: 831 834 849 857 860
    optional_block <pExpression> (473)
        on left: 807 808
        on right: 823 824 825 826 827 828
    optional_trailing_semicolon_cur_cur (474)
        on left: 809 810
        on right: 877
    optional_trailing_semicolon_cur_sqr (475)
        on left: 811 812
        on right: 854
    optional_trailing_semicolon_sqr_sqr (476)
        on left: 813 814
        on right: 853
    optional_trailing_delim_sqr_sqr (477)
        on left: 815 816 817
        on right: 823 824 825 826
    optional_trailing_delim_cur_sqr (478)
        on left: 818 819 820
        on right: 827 828
    use_initializer <b> (479)
        on left: 821 822
        on right: 279 831 834 840 849 857 860
    make_struct_decl <pExpression> (480)
        on left: 823 824 825 826 827 828 831 834 837 840
        on right: 784
    $@88 (481)
        on left: 829
        on right: 831
    $@89 (482)
        on left: 830
        on right: 831
    $@90 (483)
        on left: 832
        on right: 834
    $@91 (484)
        on left: 833
        on right: 834
    $@92 (485)
        on left: 835
        on right: 837
    $@93 (486)
        on left: 836
        on right: 837
    $@94 (487)
        on left: 838
        on right: 840
    $@95 (488)
        on left: 839
        on right: 840
    make_tuple <pExpression> (489)
        on left: 841 842 843
        on right: 843 850 851
    make_map_tuple <pExpression> (490)
        on left: 844 845
        on right: 872 873 874 875 889 890
    make_tuple_call <pExpression> (491)
        on left: 846 849
        on right: 788
    $@96 (492)
        on left: 847
        on right: 849
    $@97 (493)
        on left: 848
        on right: 849
    make_dim <pExpression> (494)
        on left: 850 851
        on right: 851 853 854
    make_dim_decl <pExpression> (495)
        on left: 852 853 854 857 860 863 864 867 868 871
        on right: 785
    $@98 (496)
        on left: 855
        on right: 857
    $@99 (497)
        on left: 856
        on right: 857
    $@100 (498)
        on left: 858
        on right: 860
    $@101 (499)
        on left: 859
        on right: 860
    $@102 (500)
        on left: 861
        on right: 863
    $@103 (501)
        on left: 862
        on right: 863
    $@104 (502)
        on left: 865
        on right: 867
    $@105 (503)
        on left: 866
        on right: 867
    $@106 (504)
        on left: 869
        on right: 871
    $@107 (505)
        on left: 870
        on right: 871
    make_table <pExpression> (506)
        on left: 872 873
        on right: 873 877
    expr_map_tuple_list <pExpression> (507)
        on left: 874 875
        on right: 255 875 876
    make_table_decl <pExpression> (508)
        on left: 876 877 878 879 880
        on right: 786
    array_comprehension_where <pExpression> (509)
        on left: 881 882
        on right: 885 886 887 888 889 890
    optional_comma <b> (510)
        on left: 883 884
        on right: 251 253 255 471 804 846 852 864 868 871 876
    array_comprehension <pExpression> (511)
        on left: 885 886 887 888 889 890
        on right: 787


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 121 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  301 kwd_let: "let" .

    $default  reduce using rule 301 (kwd_let)


State 4

   37 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   50 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   38 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  615 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  617                  | "typedef" . $@40 single_alias "end of expression"

    "begin of code block"  shift, and go to state 48

    $default  reduce using rule 616 ($@40)

    $@40  go to state 49


State 8

  302 kwd_let: "var" .

    $default  reduce using rule 302 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  783 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 608 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  773 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 608 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  778 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 608 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   36 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  122 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  213 global_function_declaration: optional_annotation_list . "def" function_declaration
  624 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  627                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"
  642 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  601 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  603           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 596 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   92 annotation_argument_name: "type" .

    $default  reduce using rule 92 (annotation_argument_name)


State 33

   93 annotation_argument_name: "in" .

    $default  reduce using rule 93 (annotation_argument_name)


State 34

   91 annotation_argument_name: "name" .

    $default  reduce using rule 91 (annotation_argument_name)


State 35

   94 annotation_argument: annotation_argument_name . '=' string_constant
   95                    | annotation_argument_name . '=' "name"
   96                    | annotation_argument_name . '=' "integer constant"
   97                    | annotation_argument_name . '=' "floating point constant"
   98                    | annotation_argument_name . '=' "true"
   99                    | annotation_argument_name . '=' "false"
  100                    | annotation_argument_name .
  101                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 100 (annotation_argument)


State 36

  102 annotation_argument_list: annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 37

   37 options_declaration: "options" annotation_argument_list .
  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 37 (options_declaration)


State 38

   53 expect_error: "integer constant" .
   54             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 53 (expect_error)


State 39

   50 expect_declaration: "expect" expect_list .
   52 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 50 (expect_declaration)


State 40

   51 expect_list: expect_error .

    $default  reduce using rule 51 (expect_list)


State 41

   39 keyword_or_name: "name" .

    $default  reduce using rule 39 (keyword_or_name)


State 42

   40 keyword_or_name: "keyword" .

    $default  reduce using rule 40 (keyword_or_name)


State 43

   41 keyword_or_name: "type function" .

    $default  reduce using rule 41 (keyword_or_name)


State 44

   43 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   42 require_module_name: keyword_or_name .

    $default  reduce using rule 42 (require_module_name)


State 46

   44 require_module_name: require_module_name . '.' keyword_or_name
   45                    | require_module_name . '/' keyword_or_name
   46 require_module: require_module_name . is_public_module
   47               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 48 (is_public_module)

    is_public_module  go to state 88


State 47

   38 require_declaration: "require" require_module .

    $default  reduce using rule 38 (require_declaration)


State 48

  615 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 608 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  617 alias_declaration: "typedef" $@40 . single_alias "end of expression"

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 608 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 596 (optional_shared)

    optional_shared  go to state 93


State 53

  610 optional_public_or_private_alias: "public" .

    $default  reduce using rule 610 (optional_public_or_private_alias)


State 54

  609 optional_public_or_private_alias: "private" .

    $default  reduce using rule 609 (optional_public_or_private_alias)


State 55

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 779 ($@84)

    $@84  go to state 94


State 56

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 769 ($@76)

    $@76  go to state 95


State 57

  778 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 774 ($@80)

    $@80  go to state 96


State 58

  271 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  269 name_in_namespace: "name" .
  270                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 269 (name_in_namespace)]
    $default  reduce using rule 269 (name_in_namespace)


State 60

   36 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 35 ($@1)

    $@1  go to state 99


State 61

  108 annotation_declaration_name: "require" .

    $default  reduce using rule 108 (annotation_declaration_name)


State 62

  109 annotation_declaration_name: "private" .

    $default  reduce using rule 109 (annotation_declaration_name)


State 63

  118 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  113 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  117 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  110 annotation_declaration_basic: annotation_declaration_name .
  111                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 110 (annotation_declaration_basic)


State 67

  112 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 112 (annotation_declaration)


State 68

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  119 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 119 (annotation_list)


State 69

  120 annotation_list: annotation_list . ',' annotation_declaration
  122 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  107 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 107 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  634 class_or_struct: "struct" .

    $default  reduce using rule 634 (class_or_struct)


State 73

  633 class_or_struct: "class" .

    $default  reduce using rule 633 (class_or_struct)


State 74

  213 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 214 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  624 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  627                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 618 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  642 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 635 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  597 optional_shared: "shared" .

    $default  reduce using rule 597 (optional_shared)


State 78

  601 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  603           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 598 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   94 annotation_argument: annotation_argument_name '=' . string_constant
   95                    | annotation_argument_name '=' . "name"
   96                    | annotation_argument_name '=' . "integer constant"
   97                    | annotation_argument_name '=' . "floating point constant"
   98                    | annotation_argument_name '=' . "true"
   99                    | annotation_argument_name '=' . "false"
  101                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  103 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   54 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   52 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   43 require_module_name: '%' require_module_name .
   44                    | require_module_name . '.' keyword_or_name
   45                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 43 (require_module_name)


State 84

   47 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   49 is_public_module: "public" .

    $default  reduce using rule 49 (is_public_module)


State 86

   45 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   44 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   46 require_module: require_module_name is_public_module .

    $default  reduce using rule 46 (require_module)


State 89

  612 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  613 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  614 alias_list: alias_list . single_alias "end of expression"
  615 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 53
    "private"            shift, and go to state 54
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 608 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  617 alias_declaration: "typedef" $@40 single_alias . "end of expression"

    "end of expression"  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "name"  shift, and go to state 144


State 95

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "name"  shift, and go to state 145


State 96

  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "name"  shift, and go to state 146


State 97

  271 name_in_namespace: "::" "name" .

    $default  reduce using rule 271 (name_in_namespace)


State 98

  270 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   36 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  118                       | "|>" annotation_declaration .

    $default  reduce using rule 118 (annotation_declaration)


State 101

  113 annotation_declaration: '!' annotation_declaration .
  114                       | annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 113 (annotation_declaration)


State 102

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  117                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  111 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  114 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  115 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  116 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  120 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  122 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 122 (optional_annotation_list)


State 109

  216 optional_public_or_private_function: "public" .

    $default  reduce using rule 216 (optional_public_or_private_function)


State 110

  215 optional_public_or_private_function: "private" .

    $default  reduce using rule 215 (optional_public_or_private_function)


State 111

  219 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 218 ($@6)

    $@6  go to state 156


State 112

  213 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 213 (global_function_declaration)


State 113

  620 optional_public_or_private_enum: "public" .

    $default  reduce using rule 620 (optional_public_or_private_enum)


State 114

  619 optional_public_or_private_enum: "private" .

    $default  reduce using rule 619 (optional_public_or_private_enum)


State 115

  624 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name "begin of code block" $@41 enum_list $@42 "end of code block"
  627                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  637 optional_public_or_private_structure: "public" .

    $default  reduce using rule 637 (optional_public_or_private_structure)


State 117

  636 optional_public_or_private_structure: "private" .

    $default  reduce using rule 636 (optional_public_or_private_structure)


State 118

  642 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 640 ($@45)

    $@45  go to state 159


State 119

  600 optional_public_or_private_variable: "public" .

    $default  reduce using rule 600 (optional_public_or_private_variable)


State 120

  599 optional_public_or_private_variable: "private" .

    $default  reduce using rule 599 (optional_public_or_private_variable)


State 121

  601 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  603           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 602 ($@38)

    $@38  go to state 161


State 122

   98 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 98 (annotation_argument)


State 123

   99 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 99 (annotation_argument)


State 124

   96 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 96 (annotation_argument)


State 125

   97 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 97 (annotation_argument)


State 126

   95 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 95 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 164

    character_sequence  go to state 165


State 128

  101 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 166
    "false"                    shift, and go to state 167
    "integer constant"         shift, and go to state 168
    "floating point constant"  shift, and go to state 169
    "name"                     shift, and go to state 170
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 171
    annotation_argument_value       go to state 172
    annotation_argument_value_list  go to state 173


State 129

   94 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 94 (annotation_argument)


State 130

  103 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 103 (annotation_argument_list)


State 131

   54 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 54 (expect_error)


State 132

   52 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 52 (expect_list)


State 133

   47 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 48 (is_public_module)

    is_public_module  go to state 174


State 134

   45 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 45 (require_module_name)


State 135

   44 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 136

  612 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 611 ($@39)

    $@39  go to state 175


State 137

  613 alias_list: single_alias "end of expression" .

    $default  reduce using rule 613 (alias_list)


State 138

  615 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 615 (alias_declaration)


State 139

  614 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 176


State 140

  617 alias_declaration: "typedef" $@40 single_alias "end of expression" .

    $default  reduce using rule 617 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 780 ($@85)

    $@85  go to state 177


State 145

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 770 ($@77)

    $@77  go to state 178


State 146

  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 775 ($@81)

    $@81  go to state 179


State 147

  270 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 270 (name_in_namespace)


State 148

   33 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 149

   34 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 180

    $default  reduce using rule 36 (expr_reader)


State 150

  117 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 117 (annotation_declaration)


State 151

  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  111 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 181


State 152

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration "&&" annotation_declaration .
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 114 (annotation_declaration)


State 153

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration "||" annotation_declaration .
  116                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_declaration)


State 154

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  116                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 116 (annotation_declaration)


State 155

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  120 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 120 (annotation_list)


State 156

  219 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 182
    "bool"      shift, and go to state 183
    "string"    shift, and go to state 184
    "int"       shift, and go to state 185
    "int2"      shift, and go to state 186
    "int3"      shift, and go to state 187
    "int4"      shift, and go to state 188
    "uint"      shift, and go to state 189
    "uint2"     shift, and go to state 190
    "uint3"     shift, and go to state 191
    "uint4"     shift, and go to state 192
    "float"     shift, and go to state 193
    "float2"    shift, and go to state 194
    "float3"    shift, and go to state 195
    "float4"    shift, and go to state 196
    "range"     shift, and go to state 197
    "urange"    shift, and go to state 198
    "range64"   shift, and go to state 199
    "urange64"  shift, and go to state 200
    "int64"     shift, and go to state 201
    "uint64"    shift, and go to state 202
    "double"    shift, and go to state 203
    "int8"      shift, and go to state 204
    "uint8"     shift, and go to state 205
    "int16"     shift, and go to state 206
    "uint16"    shift, and go to state 207
    "++"        shift, and go to state 208
    "--"        shift, and go to state 209
    "name"      shift, and go to state 210

    function_name                go to state 211
    function_declaration_header  go to state 212


State 157

  621 enum_name: "name" .

    $default  reduce using rule 621 (enum_name)


State 158

  624 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . "begin of code block" $@41 enum_list $@42 "end of code block"
  627                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 213
    ':'                    shift, and go to state 214


State 159

  642 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 215

    $default  reduce using rule 630 (optional_sealed)

    optional_sealed  go to state 216
    structure_name   go to state 217


State 160

  601 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 593 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 218


State 161

  603 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 219
    '@'   shift, and go to state 220

    $default  reduce using rule 531 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 165

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 166

   87 annotation_argument_value: "true" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   88 annotation_argument_value: "false" .

    $default  reduce using rule 88 (annotation_argument_value)


State 168

   85 annotation_argument_value: "integer constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   86 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 86 (annotation_argument_value)


State 170

   84 annotation_argument_value: "name" .

    $default  reduce using rule 84 (annotation_argument_value)


State 171

   83 annotation_argument_value: string_constant .

    $default  reduce using rule 83 (annotation_argument_value)


State 172

   89 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 173

   90 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  101 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 174

   47 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 47 (require_module)


State 175

  612 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 228


State 176

  614 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 614 (alias_list)


State 177

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block"

    "begin of code block"  shift, and go to state 229


State 178

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block"

    "begin of code block"  shift, and go to state 230


State 179

  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . "begin of code block" $@82 variant_alias_type_list $@83 "end of code block"

    "begin of code block"  shift, and go to state 231


State 180

   34 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 34 (reader_character_sequence)


State 181

  111 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 111 (annotation_declaration_basic)


State 182

  129 function_name: "operator" . '!'
  130              | "operator" . '~'
  131              | "operator" . "+="
  132              | "operator" . "-="
  133              | "operator" . "*="
  134              | "operator" . "/="
  135              | "operator" . "%="
  136              | "operator" . "&="
  137              | "operator" . "|="
  138              | "operator" . "^="
  139              | "operator" . "&&="
  140              | "operator" . "||="
  141              | "operator" . "^^="
  142              | "operator" . "&&"
  143              | "operator" . "||"
  144              | "operator" . "^^"
  145              | "operator" . '+'
  146              | "operator" . '-'
  147              | "operator" . '*'
  148              | "operator" . '/'
  149              | "operator" . '%'
  150              | "operator" . '<'
  151              | "operator" . '>'
  152              | "operator" . ".."
  153              | "operator" . "=="
  154              | "operator" . "!="
  155              | "operator" . "<="
  156              | "operator" . ">="
  157              | "operator" . '&'
  158              | "operator" . '|'
  159              | "operator" . '^'
  162              | "operator" . "++"
  163              | "operator" . "--"
  164              | "operator" . "<<"
  165              | "operator" . ">>"
  166              | "operator" . "<<="
  167              | "operator" . ">>="
  168              | "operator" . "<<<"
  169              | "operator" . ">>>"
  170              | "operator" . "<<<="
  171              | "operator" . ">>>="
  172              | "operator" . '[' ']'
  173              | "operator" . "?[" ']'
  174              | "operator" . '.'
  175              | "operator" . "?."
  176              | "operator" . '.' "name"
  177              | "operator" . '.' "name" ":="
  178              | "operator" . "?." "name"
  179              | "operator" . ":="
  180              | "operator" . "delete"
  181              | "operator" . "??"
  182              | "operator" . "is"
  183              | "operator" . "as"
  184              | "operator" . "is" "name"
  185              | "operator" . "as" "name"
  186              | "operator" . '?' "as"
  187              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 232
    "as"      shift, and go to state 233
    "delete"  shift, and go to state 234
    "+="      shift, and go to state 235
    "-="      shift, and go to state 236
    "/="      shift, and go to state 237
    "*="      shift, and go to state 238
    "%="      shift, and go to state 239
    "&="      shift, and go to state 240
    "|="      shift, and go to state 241
    "^="      shift, and go to state 242
    "<<"      shift, and go to state 243
    ">>"      shift, and go to state 244
    "++"      shift, and go to state 245
    "--"      shift, and go to state 246
    "<="      shift, and go to state 247
    "<<="     shift, and go to state 248
    ">>="     shift, and go to state 249
    ">="      shift, and go to state 250
    "=="      shift, and go to state 251
    "!="      shift, and go to state 252
    "??"      shift, and go to state 253
    "?."      shift, and go to state 254
    "?["      shift, and go to state 255
    ":="      shift, and go to state 256
    "<<<"     shift, and go to state 257
    ">>>"     shift, and go to state 258
    "<<<="    shift, and go to state 259
    ">>>="    shift, and go to state 260
    "&&"      shift, and go to state 261
    "||"      shift, and go to state 262
    "^^"      shift, and go to state 263
    "&&="     shift, and go to state 264
    "||="     shift, and go to state 265
    "^^="     shift, and go to state 266
    ".."      shift, and go to state 267
    '?'       shift, and go to state 268
    '|'       shift, and go to state 269
    '^'       shift, and go to state 270
    '&'       shift, and go to state 271
    '<'       shift, and go to state 272
    '>'       shift, and go to state 273
    '-'       shift, and go to state 274
    '+'       shift, and go to state 275
    '*'       shift, and go to state 276
    '/'       shift, and go to state 277
    '%'       shift, and go to state 278
    '~'       shift, and go to state 279
    '!'       shift, and go to state 280
    '.'       shift, and go to state 281
    '['       shift, and go to state 282


State 183

  188 function_name: "bool" .

    $default  reduce using rule 188 (function_name)


State 184

  189 function_name: "string" .

    $default  reduce using rule 189 (function_name)


State 185

  190 function_name: "int" .

    $default  reduce using rule 190 (function_name)


State 186

  191 function_name: "int2" .

    $default  reduce using rule 191 (function_name)


State 187

  192 function_name: "int3" .

    $default  reduce using rule 192 (function_name)


State 188

  193 function_name: "int4" .

    $default  reduce using rule 193 (function_name)


State 189

  194 function_name: "uint" .

    $default  reduce using rule 194 (function_name)


State 190

  195 function_name: "uint2" .

    $default  reduce using rule 195 (function_name)


State 191

  196 function_name: "uint3" .

    $default  reduce using rule 196 (function_name)


State 192

  197 function_name: "uint4" .

    $default  reduce using rule 197 (function_name)


State 193

  198 function_name: "float" .

    $default  reduce using rule 198 (function_name)


State 194

  199 function_name: "float2" .

    $default  reduce using rule 199 (function_name)


State 195

  200 function_name: "float3" .

    $default  reduce using rule 200 (function_name)


State 196

  201 function_name: "float4" .

    $default  reduce using rule 201 (function_name)


State 197

  202 function_name: "range" .

    $default  reduce using rule 202 (function_name)


State 198

  203 function_name: "urange" .

    $default  reduce using rule 203 (function_name)


State 199

  204 function_name: "range64" .

    $default  reduce using rule 204 (function_name)


State 200

  205 function_name: "urange64" .

    $default  reduce using rule 205 (function_name)


State 201

  206 function_name: "int64" .

    $default  reduce using rule 206 (function_name)


State 202

  207 function_name: "uint64" .

    $default  reduce using rule 207 (function_name)


State 203

  208 function_name: "double" .

    $default  reduce using rule 208 (function_name)


State 204

  209 function_name: "int8" .

    $default  reduce using rule 209 (function_name)


State 205

  210 function_name: "uint8" .

    $default  reduce using rule 210 (function_name)


State 206

  211 function_name: "int16" .

    $default  reduce using rule 211 (function_name)


State 207

  212 function_name: "uint16" .

    $default  reduce using rule 212 (function_name)


State 208

  160 function_name: "++" . "operator"

    "operator"  shift, and go to state 283


State 209

  161 function_name: "--" . "operator"

    "operator"  shift, and go to state 284


State 210

  128 function_name: "name" .

    $default  reduce using rule 128 (function_name)


State 211

  217 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 285

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 286


State 212

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 287

    expression_block  go to state 288


State 213

  624 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" . $@41 enum_list $@42 "end of code block"

    $default  reduce using rule 622 ($@41)

    $@41  go to state 289


State 214

  627 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block"

    "int"     shift, and go to state 290
    "uint"    shift, and go to state 291
    "int64"   shift, and go to state 292
    "uint64"  shift, and go to state 293
    "int8"    shift, and go to state 294
    "uint8"   shift, and go to state 295
    "int16"   shift, and go to state 296
    "uint16"  shift, and go to state 297

    enum_basic_type_declaration  go to state 298


State 215

  631 optional_sealed: "sealed" .

    $default  reduce using rule 631 (optional_sealed)


State 216

  632 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 299


State 217

  642 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 641 ($@46)

    $@46  go to state 300


State 218

  595 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  601 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 301

    $default  reduce using rule 594 ($@37)

    $@37  go to state 302


State 219

  532 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 303


State 220

  104 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 304


State 221

  105 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  106                       | metadata_argument_list . "end of expression"
  533 optional_field_annotation: metadata_argument_list .

    "end of expression"  shift, and go to state 305
    '@'                  shift, and go to state 306

    $default  reduce using rule 533 (optional_field_annotation)


State 222

  603 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 307
    "name"  shift, and go to state 308

    let_variable_name_with_pos_list  go to state 309
    let_variable_declaration         go to state 310


State 223

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 224

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 225

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 226

   90 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 166
    "false"                    shift, and go to state 167
    "integer constant"         shift, and go to state 168
    "floating point constant"  shift, and go to state 169
    "name"                     shift, and go to state 170
    "start of the string"      shift, and go to state 127

    string_constant            go to state 171
    annotation_argument_value  go to state 311


State 227

  101 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 101 (annotation_argument)


State 228

  612 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 359


State 229

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" . $@86 bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 781 ($@86)

    $@86  go to state 360


State 230

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" . $@78 tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 771 ($@78)

    $@78  go to state 361


State 231

  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" . $@82 variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 776 ($@82)

    $@82  go to state 362


State 232

  182 function_name: "operator" "is" .
  184              | "operator" "is" . "name"

    "name"  shift, and go to state 363

    $default  reduce using rule 182 (function_name)


State 233

  183 function_name: "operator" "as" .
  185              | "operator" "as" . "name"

    "name"  shift, and go to state 364

    $default  reduce using rule 183 (function_name)


State 234

  180 function_name: "operator" "delete" .

    $default  reduce using rule 180 (function_name)


State 235

  131 function_name: "operator" "+=" .

    $default  reduce using rule 131 (function_name)


State 236

  132 function_name: "operator" "-=" .

    $default  reduce using rule 132 (function_name)


State 237

  134 function_name: "operator" "/=" .

    $default  reduce using rule 134 (function_name)


State 238

  133 function_name: "operator" "*=" .

    $default  reduce using rule 133 (function_name)


State 239

  135 function_name: "operator" "%=" .

    $default  reduce using rule 135 (function_name)


State 240

  136 function_name: "operator" "&=" .

    $default  reduce using rule 136 (function_name)


State 241

  137 function_name: "operator" "|=" .

    $default  reduce using rule 137 (function_name)


State 242

  138 function_name: "operator" "^=" .

    $default  reduce using rule 138 (function_name)


State 243

  164 function_name: "operator" "<<" .

    $default  reduce using rule 164 (function_name)


State 244

  165 function_name: "operator" ">>" .

    $default  reduce using rule 165 (function_name)


State 245

  162 function_name: "operator" "++" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" "--" .

    $default  reduce using rule 163 (function_name)


State 247

  155 function_name: "operator" "<=" .

    $default  reduce using rule 155 (function_name)


State 248

  166 function_name: "operator" "<<=" .

    $default  reduce using rule 166 (function_name)


State 249

  167 function_name: "operator" ">>=" .

    $default  reduce using rule 167 (function_name)


State 250

  156 function_name: "operator" ">=" .

    $default  reduce using rule 156 (function_name)


State 251

  153 function_name: "operator" "==" .

    $default  reduce using rule 153 (function_name)


State 252

  154 function_name: "operator" "!=" .

    $default  reduce using rule 154 (function_name)


State 253

  181 function_name: "operator" "??" .

    $default  reduce using rule 181 (function_name)


State 254

  175 function_name: "operator" "?." .
  178              | "operator" "?." . "name"

    "name"  shift, and go to state 365

    $default  reduce using rule 175 (function_name)


State 255

  173 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 366


State 256

  179 function_name: "operator" ":=" .

    $default  reduce using rule 179 (function_name)


State 257

  168 function_name: "operator" "<<<" .

    $default  reduce using rule 168 (function_name)


State 258

  169 function_name: "operator" ">>>" .

    $default  reduce using rule 169 (function_name)


State 259

  170 function_name: "operator" "<<<=" .

    $default  reduce using rule 170 (function_name)


State 260

  171 function_name: "operator" ">>>=" .

    $default  reduce using rule 171 (function_name)


State 261

  142 function_name: "operator" "&&" .

    $default  reduce using rule 142 (function_name)


State 262

  143 function_name: "operator" "||" .

    $default  reduce using rule 143 (function_name)


State 263

  144 function_name: "operator" "^^" .

    $default  reduce using rule 144 (function_name)


State 264

  139 function_name: "operator" "&&=" .

    $default  reduce using rule 139 (function_name)


State 265

  140 function_name: "operator" "||=" .

    $default  reduce using rule 140 (function_name)


State 266

  141 function_name: "operator" "^^=" .

    $default  reduce using rule 141 (function_name)


State 267

  152 function_name: "operator" ".." .

    $default  reduce using rule 152 (function_name)


State 268

  186 function_name: "operator" '?' . "as"
  187              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 367


State 269

  158 function_name: "operator" '|' .

    $default  reduce using rule 158 (function_name)


State 270

  159 function_name: "operator" '^' .

    $default  reduce using rule 159 (function_name)


State 271

  157 function_name: "operator" '&' .

    $default  reduce using rule 157 (function_name)


State 272

  150 function_name: "operator" '<' .

    $default  reduce using rule 150 (function_name)


State 273

  151 function_name: "operator" '>' .

    $default  reduce using rule 151 (function_name)


State 274

  146 function_name: "operator" '-' .

    $default  reduce using rule 146 (function_name)


State 275

  145 function_name: "operator" '+' .

    $default  reduce using rule 145 (function_name)


State 276

  147 function_name: "operator" '*' .

    $default  reduce using rule 147 (function_name)


State 277

  148 function_name: "operator" '/' .

    $default  reduce using rule 148 (function_name)


State 278

  149 function_name: "operator" '%' .

    $default  reduce using rule 149 (function_name)


State 279

  130 function_name: "operator" '~' .

    $default  reduce using rule 130 (function_name)


State 280

  129 function_name: "operator" '!' .

    $default  reduce using rule 129 (function_name)


State 281

  174 function_name: "operator" '.' .
  176              | "operator" '.' . "name"
  177              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 368

    $default  reduce using rule 174 (function_name)


State 282

  172 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 369


State 283

  160 function_name: "++" "operator" .

    $default  reduce using rule 160 (function_name)


State 284

  161 function_name: "--" "operator" .

    $default  reduce using rule 161 (function_name)


State 285

  124 optional_function_argument_list: '(' . ')'
  125                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 370
    "[["  shift, and go to state 219
    ')'   shift, and go to state 371
    '@'   shift, and go to state 220

    $default  reduce using rule 531 (optional_field_annotation)

    metadata_argument_list         go to state 221
    optional_field_annotation      go to state 372
    function_argument_declaration  go to state 373
    function_argument_list         go to state 374


State 286

  217 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 375

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 376


State 287

  220 expression_block: "begin of code block" . expressions "end of code block"
  221                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 246 (expressions)

    expressions  go to state 377


State 288

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 219 (function_declaration)


State 289

  624 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 . enum_list $@42 "end of code block"

    $default  reduce using rule 604 (enum_list)

    enum_list  go to state 378


State 290

  675 enum_basic_type_declaration: "int" .

    $default  reduce using rule 675 (enum_basic_type_declaration)


State 291

  678 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 678 (enum_basic_type_declaration)


State 292

  681 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 681 (enum_basic_type_declaration)


State 293

  682 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 682 (enum_basic_type_declaration)


State 294

  676 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 676 (enum_basic_type_declaration)


State 295

  679 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 679 (enum_basic_type_declaration)


State 296

  677 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 677 (enum_basic_type_declaration)


State 297

  680 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 680 (enum_basic_type_declaration)


State 298

  627 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . "begin of code block" $@43 enum_list $@44 "end of code block"

    "begin of code block"  shift, and go to state 379


State 299

  632 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 380

    $default  reduce using rule 628 (optional_structure_parent)

    optional_structure_parent  go to state 381


State 300

  642 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 382

    $default  reduce using rule 638 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 383


State 301

  601 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 601 (global_let)


State 302

  595 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 219
    '@'   shift, and go to state 220

    $default  reduce using rule 531 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 384


State 303

  103 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  532 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 385


State 304

  104 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 104 (metadata_argument_list)


State 305

  106 metadata_argument_list: metadata_argument_list "end of expression" .

    $default  reduce using rule 106 (metadata_argument_list)


State 306

  105 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 386


State 307

  584 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  583 let_variable_name_with_pos_list: "name" .
  585                                | "name" . "aka" "name"

    "aka"  shift, and go to state 388

    $default  reduce using rule 583 (let_variable_name_with_pos_list)


State 309

  586 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  587                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  588 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  589                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  590                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  591                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  592                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 389
    ':'  shift, and go to state 390
    '&'  shift, and go to state 391

    $default  reduce using rule 581 (optional_ref)

    optional_ref  go to state 392


State 310

  603 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 603 (global_let)


State 311

   90 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 90 (annotation_argument_value_list)


State 312

  709 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 393


State 313

  732 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 394


State 314

  735 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 395


State 315

  710 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 396


State 316

  738 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 397


State 317

  728 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 398


State 318

  648 basic_type_declaration: "bool" .

    $default  reduce using rule 648 (basic_type_declaration)


State 319

  668 basic_type_declaration: "void" .

    $default  reduce using rule 668 (basic_type_declaration)


State 320

  649 basic_type_declaration: "string" .

    $default  reduce using rule 649 (basic_type_declaration)


State 321

  684 auto_type_declaration: "auto" .
  685                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 399

    '('       [reduce using rule 684 (auto_type_declaration)]
    $default  reduce using rule 684 (auto_type_declaration)


State 322

  650 basic_type_declaration: "int" .

    $default  reduce using rule 650 (basic_type_declaration)


State 323

  654 basic_type_declaration: "int2" .

    $default  reduce using rule 654 (basic_type_declaration)


State 324

  655 basic_type_declaration: "int3" .

    $default  reduce using rule 655 (basic_type_declaration)


State 325

  656 basic_type_declaration: "int4" .

    $default  reduce using rule 656 (basic_type_declaration)


State 326

  657 basic_type_declaration: "uint" .

    $default  reduce using rule 657 (basic_type_declaration)


State 327

  674 basic_type_declaration: "bitfield" .
  694 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 400

    $default  reduce using rule 674 (basic_type_declaration)


State 328

  661 basic_type_declaration: "uint2" .

    $default  reduce using rule 661 (basic_type_declaration)


State 329

  662 basic_type_declaration: "uint3" .

    $default  reduce using rule 662 (basic_type_declaration)


State 330

  663 basic_type_declaration: "uint4" .

    $default  reduce using rule 663 (basic_type_declaration)


State 331

  664 basic_type_declaration: "float" .

    $default  reduce using rule 664 (basic_type_declaration)


State 332

  665 basic_type_declaration: "float2" .

    $default  reduce using rule 665 (basic_type_declaration)


State 333

  666 basic_type_declaration: "float3" .

    $default  reduce using rule 666 (basic_type_declaration)


State 334

  667 basic_type_declaration: "float4" .

    $default  reduce using rule 667 (basic_type_declaration)


State 335

  669 basic_type_declaration: "range" .

    $default  reduce using rule 669 (basic_type_declaration)


State 336

  670 basic_type_declaration: "urange" .

    $default  reduce using rule 670 (basic_type_declaration)


State 337

  671 basic_type_declaration: "range64" .

    $default  reduce using rule 671 (basic_type_declaration)


State 338

  672 basic_type_declaration: "urange64" .

    $default  reduce using rule 672 (basic_type_declaration)


State 339

  739 type_declaration_no_options: "block" .
  742                            | "block" . '<' $@60 type_declaration '>' $@61
  745                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 401

    $default  reduce using rule 739 (type_declaration_no_options)


State 340

  653 basic_type_declaration: "int64" .

    $default  reduce using rule 653 (basic_type_declaration)


State 341

  660 basic_type_declaration: "uint64" .

    $default  reduce using rule 660 (basic_type_declaration)


State 342

  673 basic_type_declaration: "double" .

    $default  reduce using rule 673 (basic_type_declaration)


State 343

  746 type_declaration_no_options: "function" .
  749                            | "function" . '<' $@64 type_declaration '>' $@65
  752                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 402

    $default  reduce using rule 746 (type_declaration_no_options)


State 344

  753 type_declaration_no_options: "lambda" .
  756                            | "lambda" . '<' $@68 type_declaration '>' $@69
  759                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 403

    $default  reduce using rule 753 (type_declaration_no_options)


State 345

  651 basic_type_declaration: "int8" .

    $default  reduce using rule 651 (basic_type_declaration)


State 346

  658 basic_type_declaration: "uint8" .

    $default  reduce using rule 658 (basic_type_declaration)


State 347

  652 basic_type_declaration: "int16" .

    $default  reduce using rule 652 (basic_type_declaration)


State 348

  659 basic_type_declaration: "uint16" .

    $default  reduce using rule 659 (basic_type_declaration)


State 349

  762 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 404


State 350

  765 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 405


State 351

  686 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 406


State 352

  711 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  713                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 407


State 353

  683 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 683 (structure_type_declaration)


State 354

  701 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 701 (type_declaration_no_options)


State 355

  704 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 704 (type_declaration_no_options)


State 356

  702 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 702 (type_declaration_no_options)


State 357

  703 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 703 (type_declaration_no_options)


State 358

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  766 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    $default  reduce using rule 766 (type_declaration)

    dim_list  go to state 418


State 359

  612 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419

    $default  reduce using rule 612 (single_alias)


State 360

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 . bitfield_alias_bits $@87 "end of code block"

    $default  reduce using rule 689 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 420


State 361

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 . tuple_alias_type_list $@79 "end of code block"

    $default  reduce using rule 561 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 421


State 362

  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 . variant_alias_type_list $@83 "end of code block"

    $default  reduce using rule 567 (variant_alias_type_list)

    variant_alias_type_list  go to state 422


State 363

  184 function_name: "operator" "is" "name" .

    $default  reduce using rule 184 (function_name)


State 364

  185 function_name: "operator" "as" "name" .

    $default  reduce using rule 185 (function_name)


State 365

  178 function_name: "operator" "?." "name" .

    $default  reduce using rule 178 (function_name)


State 366

  173 function_name: "operator" "?[" ']' .

    $default  reduce using rule 173 (function_name)


State 367

  186 function_name: "operator" '?' "as" .
  187              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 423

    $default  reduce using rule 186 (function_name)


State 368

  176 function_name: "operator" '.' "name" .
  177              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 424

    $default  reduce using rule 176 (function_name)


State 369

  172 function_name: "operator" '[' ']' .

    $default  reduce using rule 172 (function_name)


State 370

  554 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 425


State 371

  124 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 124 (optional_function_argument_list)


State 372

  553 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 426
    "var"  shift, and go to state 427

    $default  reduce using rule 300 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 428


State 373

  555 function_argument_list: function_argument_declaration .

    $default  reduce using rule 555 (function_argument_list)


State 374

  125 optional_function_argument_list: '(' function_argument_list . ')'
  556 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 429
    ')'                  shift, and go to state 430


State 375

  127 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 431


State 376

  217 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 217 (function_declaration_header)


State 377

  220 expression_block: "begin of code block" expressions . "end of code block"
  221                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  247 expressions: expressions . expression_any
  248            | expressions . error

    error                             shift, and go to state 432
    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 435
    "if"                              shift, and go to state 436
    "static_if"                       shift, and go to state 437
    "for"                             shift, and go to state 438
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "return"                          shift, and go to state 445
    "null"                            shift, and go to state 446
    "break"                           shift, and go to state 447
    "try"                             shift, and go to state 448
    "table"                           shift, and go to state 449
    "delete"                          shift, and go to state 450
    "deref"                           shift, and go to state 451
    "with"                            shift, and go to state 452
    "assume"                          shift, and go to state 453
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 456
    "continue"                        shift, and go to state 457
    "pass"                            shift, and go to state 458
    "reinterpret"                     shift, and go to state 459
    "label"                           shift, and go to state 460
    "goto"                            shift, and go to state 461
    "unsafe"                          shift, and go to state 462
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "yield"                           shift, and go to state 469
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 492
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    "end of code block"               shift, and go to state 496
    "end of expression"               shift, and go to state 497
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder             go to state 507
    expr_reader                go to state 508
    expression_label           go to state 509
    expression_goto            go to state 510
    if_or_static_if            go to state 511
    expression_if_one_liner    go to state 512
    expression_if_then_else    go to state 513
    expression_for_loop        go to state 514
    expression_unsafe          go to state 515
    expression_while_loop      go to state 516
    expression_with            go to state 517
    expression_with_alias      go to state 518
    expr_call_pipe             go to state 519
    expression_any             go to state 520
    expr_keyword               go to state 521
    expression_keyword         go to state 522
    expr_pipe                  go to state 523
    name_in_namespace          go to state 524
    expression_delete          go to state 525
    expr_new                   go to state 526
    expression_break           go to state 527
    expression_continue        go to state 528
    expression_return_no_pipe  go to state 529
    expression_return          go to state 530
    expression_yield_no_pipe   go to state 531
    expression_yield           go to state 532
    expression_try_catch       go to state 533
    kwd_let                    go to state 534
    expression_let             go to state 535
    expr_cast                  go to state 536
    expr_type_decl             go to state 537
    expr_type_info             go to state 538
    block_or_lambda            go to state 539
    expr_full_block            go to state 540
    expr_numeric_const         go to state 541
    expr_assign                go to state 542
    expr_assign_pipe           go to state 543
    expr_named_call            go to state 544
    expr_method_call           go to state 545
    func_addr_expr             go to state 546
    expr_field                 go to state 547
    expr_call                  go to state 548
    expr                       go to state 549
    expr_mtag                  go to state 550
    basic_type_declaration     go to state 551
    make_decl                  go to state 552
    make_struct_decl           go to state 553
    make_tuple_call            go to state 554
    make_dim_decl              go to state 555
    make_table_decl            go to state 556
    array_comprehension        go to state 557


State 378

  605 enum_list: enum_list . "end of expression"
  606          | enum_list . "name" "end of expression"
  607          | enum_list . "name" '=' expr "end of expression"
  624 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list . $@42 "end of code block"

    "name"               shift, and go to state 558
    "end of expression"  shift, and go to state 559

    $default  reduce using rule 623 ($@42)

    $@42  go to state 560


State 379

  627 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" . $@43 enum_list $@44 "end of code block"

    $default  reduce using rule 625 ($@43)

    $@43  go to state 561


State 380

  629 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 562


State 381

  632 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 632 (structure_name)


State 382

  639 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 545 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 563


State 383

  642 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 642 (structure_declaration)


State 384

  595 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 307
    "name"  shift, and go to state 308

    let_variable_name_with_pos_list  go to state 309
    let_variable_declaration         go to state 564


State 385

  532 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 565


State 386

  105 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 105 (metadata_argument_list)


State 387

  584 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 570
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 388

  585 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 571


State 389

  586 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  587                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 572


State 390

  588 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  589                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  590                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 573


State 391

  582 optional_ref: '&' .

    $default  reduce using rule 582 (optional_ref)


State 392

  591 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  592                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 575
    '='   shift, and go to state 576

    copy_or_move_or_clone  go to state 577


State 393

  709 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 707 ($@49)

    $@49  go to state 578


State 394

  732 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 730 ($@54)

    $@54  go to state 579


State 395

  735 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 733 ($@56)

    $@56  go to state 580


State 396

  710 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 581
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 397

  738 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 736 ($@58)

    $@58  go to state 582


State 398

  728 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 726 ($@52)

    $@52  go to state 583


State 399

  685 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 584


State 400

  694 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 692 ($@47)

    $@47  go to state 585


State 401

  742 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  745                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 743 ($@62)
    '>'       reduce using rule 743 ($@62)
    '('       reduce using rule 743 ($@62)
    $default  reduce using rule 740 ($@60)

    $@60  go to state 586
    $@62  go to state 587


State 402

  749 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  752                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 750 ($@66)
    '>'       reduce using rule 750 ($@66)
    '('       reduce using rule 750 ($@66)
    $default  reduce using rule 747 ($@64)

    $@64  go to state 588
    $@66  go to state 589


State 403

  756 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  759                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 757 ($@70)
    '>'       reduce using rule 757 ($@70)
    '('       reduce using rule 757 ($@70)
    $default  reduce using rule 754 ($@68)

    $@68  go to state 590
    $@70  go to state 591


State 404

  762 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 760 ($@72)

    $@72  go to state 592


State 405

  765 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 763 ($@74)

    $@74  go to state 593


State 406

  686 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 594
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 407

  711 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  713                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 595
    '('  shift, and go to state 596


State 408

  716 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 716 (type_declaration_no_options)


State 409

  721 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 721 (type_declaration_no_options)


State 410

  715 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 715 (type_declaration_no_options)


State 411

  723 type_declaration_no_options: type_declaration_no_options "==" . "const"
  724                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 597
    '&'      shift, and go to state 598


State 412

  729 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 729 (type_declaration_no_options)


State 413

  725 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 725 (type_declaration_no_options)


State 414

  718 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 718 (type_declaration_no_options)


State 415

  714 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  717                            | type_declaration_no_options '-' . "const"
  719                            | type_declaration_no_options '-' . '&'
  722                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 599
    '&'      shift, and go to state 600
    '['      shift, and go to state 601
    '#'      shift, and go to state 602


State 416

  699 dim_list: '[' . expr ']'
  706 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    ']'                               shift, and go to state 603
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 604
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 417

  720 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 720 (type_declaration_no_options)


State 418

  700 dim_list: dim_list . '[' expr ']'
  705 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 605

    '['       [reduce using rule 705 (type_declaration_no_options)]
    $default  reduce using rule 705 (type_declaration_no_options)


State 419

  767 type_declaration: type_declaration '|' . type_declaration_no_options
  768                 | type_declaration '|' . '#'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352
    '#'          shift, and go to state 606

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 607


State 420

  690 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  691                    | bitfield_alias_bits . "name" "end of expression"
  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits . $@87 "end of code block"

    "name"               shift, and go to state 608
    "end of expression"  shift, and go to state 609

    $default  reduce using rule 782 ($@87)

    $@87  go to state 610


State 421

  562 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  563                      | tuple_alias_type_list . tuple_type c_or_s
  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list . $@79 "end of code block"

    "type"               shift, and go to state 312
    "array"              shift, and go to state 313
    "table"              shift, and go to state 314
    "typedecl"           shift, and go to state 315
    "iterator"           shift, and go to state 316
    "smart_ptr"          shift, and go to state 317
    "bool"               shift, and go to state 318
    "void"               shift, and go to state 319
    "string"             shift, and go to state 320
    "auto"               shift, and go to state 321
    "int"                shift, and go to state 322
    "int2"               shift, and go to state 323
    "int3"               shift, and go to state 324
    "int4"               shift, and go to state 325
    "uint"               shift, and go to state 326
    "bitfield"           shift, and go to state 327
    "uint2"              shift, and go to state 328
    "uint3"              shift, and go to state 329
    "uint4"              shift, and go to state 330
    "float"              shift, and go to state 331
    "float2"             shift, and go to state 332
    "float3"             shift, and go to state 333
    "float4"             shift, and go to state 334
    "range"              shift, and go to state 335
    "urange"             shift, and go to state 336
    "range64"            shift, and go to state 337
    "urange64"           shift, and go to state 338
    "block"              shift, and go to state 339
    "int64"              shift, and go to state 340
    "uint64"             shift, and go to state 341
    "double"             shift, and go to state 342
    "function"           shift, and go to state 343
    "lambda"             shift, and go to state 344
    "int8"               shift, and go to state 345
    "uint8"              shift, and go to state 346
    "int16"              shift, and go to state 347
    "uint16"             shift, and go to state 348
    "tuple"              shift, and go to state 349
    "variant"            shift, and go to state 350
    "::"                 shift, and go to state 58
    "$t"                 shift, and go to state 351
    "name"               shift, and go to state 611
    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '$'                  shift, and go to state 352

    $default  reduce using rule 772 ($@79)

    name_in_namespace            go to state 353
    tuple_type                   go to state 614
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    c_or_s                       go to state 615
    type_declaration_no_options  go to state 358
    type_declaration             go to state 616
    $@79                         go to state 617


State 422

  568 variant_alias_type_list: variant_alias_type_list . c_or_s
  569                        | variant_alias_type_list . variant_type c_or_s
  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list . $@83 "end of code block"

    "name"               shift, and go to state 618
    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613

    $default  reduce using rule 777 ($@83)

    variant_type  go to state 619
    c_or_s        go to state 620
    $@83          go to state 621


State 423

  187 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 187 (function_name)


State 424

  177 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 177 (function_name)


State 425

  554 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 622
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 426

  298 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 298 (kwd_let_var_or_nothing)


State 427

  299 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 299 (kwd_let_var_or_nothing)


State 428

  553 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_declaration         go to state 625
    variable_name_with_pos_list  go to state 626


State 429

  556 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 370
    "[["  shift, and go to state 219
    '@'   shift, and go to state 220

    $default  reduce using rule 531 (optional_field_annotation)

    metadata_argument_list         go to state 221
    optional_field_annotation      go to state 372
    function_argument_declaration  go to state 627


State 430

  125 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 125 (optional_function_argument_list)


State 431

  127 optional_function_type: ':' type_declaration .
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419

    $default  reduce using rule 127 (optional_function_type)


State 432

  248 expressions: expressions error .

    $default  reduce using rule 248 (expressions)


State 433

  831 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 628


State 434

  834 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 629


State 435

   79 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 630
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 436

   63 if_or_static_if: "if" .

    $default  reduce using rule 63 (if_or_static_if)


State 437

   64 if_or_static_if: "static_if" .

    $default  reduce using rule 64 (if_or_static_if)


State 438

   77 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 76 ($@4)

    $@4  go to state 631


State 439

  437 expr: "true" .

    $default  reduce using rule 437 (expr)


State 440

  438 expr: "false" .

    $default  reduce using rule 438 (expr)


State 441

  278 expr_new: "new" . new_type_declaration
  279         | "new" . new_type_declaration '(' use_initializer ')'
  280         | "new" . new_type_declaration '(' expr_list ')'
  281         | "new" . new_type_declaration '(' make_struct_single ')'
  282         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  283         | "new" . make_decl

    "struct"               shift, and go to state 433
    "class"                shift, and go to state 434
    "array"                shift, and go to state 444
    "table"                shift, and go to state 449
    "fixed_array"          shift, and go to state 463
    "default"              shift, and go to state 464
    "tuple"                shift, and go to state 466
    "variant"              shift, and go to state 467
    "::"                   shift, and go to state 58
    "[["                   shift, and go to state 482
    "[{"                   shift, and go to state 483
    "{{"                   shift, and go to state 484
    "name"                 shift, and go to state 59
    "begin of code block"  shift, and go to state 495
    '<'                    shift, and go to state 632
    '['                    shift, and go to state 503

    name_in_namespace           go to state 353
    new_type_declaration        go to state 633
    structure_type_declaration  go to state 634
    make_decl                   go to state 635
    make_struct_decl            go to state 553
    make_tuple_call             go to state 554
    make_dim_decl               go to state 555
    make_table_decl             go to state 556
    array_comprehension         go to state 557


State 442

  325 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  326               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  327               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  328               | "typeinfo" . name_in_namespace '(' expr ')'
  329               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  330               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59
    '('     shift, and go to state 636

    name_in_namespace  go to state 637


State 443

  324 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 638


State 444

  857 make_dim_decl: "array" . "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'
  860              | "array" . "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  863              | "array" . "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'
  864              | "array" . '(' expr_list optional_comma ')'
  867              | "array" . '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "struct"   shift, and go to state 639
    "tuple"    shift, and go to state 640
    "variant"  shift, and go to state 641
    '<'        shift, and go to state 642
    '('        shift, and go to state 643


State 445

  286 expression_return_no_pipe: "return" .
  287                          | "return" . expr_list
  288                          | "return" . "<-" expr_list
  290 expression_return: "return" . expr_pipe
  291                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "<-"                              shift, and go to state 644
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 286 (expression_return_no_pipe)

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 519
    expression_keyword      go to state 522
    expr_pipe               go to state 645
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 646
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign             go to state 647
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 648
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 446

  431 expr: "null" .

    $default  reduce using rule 431 (expr)


State 447

  284 expression_break: "break" .

    $default  reduce using rule 284 (expression_break)


State 448

  297 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 287

    expression_block  go to state 649


State 449

  878 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  879                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  880                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 650
    '('  shift, and go to state 651


State 450

  272 expression_delete: "delete" . expr
  273                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "explicit"                        shift, and go to state 652
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 653
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 451

  481 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 654


State 452

   80 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 655
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 453

   82 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 656


State 454

  315 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 657


State 455

  318 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 658


State 456

  482 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 659


State 457

  285 expression_continue: "continue" .

    $default  reduce using rule 285 (expression_continue)


State 458

  245 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 660


State 459

  321 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 661


State 460

   55 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 662


State 461

   56 expression_goto: "goto" . "label" "integer constant"
   57                | "goto" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "label"                           shift, and go to state 663
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 664
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 462

   78 expression_unsafe: "unsafe" . expression_block
  513 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 287
    '('                    shift, and go to state 665

    expression_block  go to state 666


State 463

  868 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  871              | "fixed_array" . '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 667
    '('  shift, and go to state 668


State 464

  840 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95 use_initializer

    '<'  shift, and go to state 669


State 465

  674 basic_type_declaration: "bitfield" .

    $default  reduce using rule 674 (basic_type_declaration)


State 466

  846 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  849                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 670
    '('  shift, and go to state 671


State 467

  837 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    '<'  shift, and go to state 672


State 468

  224 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  483 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  484     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 673


State 469

  292 expression_yield_no_pipe: "yield" . expr
  293                         | "yield" . "<-" expr
  295 expression_yield: "yield" . expr_pipe
  296                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "<-"                              shift, and go to state 674
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 519
    expression_keyword      go to state 522
    expr_pipe               go to state 675
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign             go to state 647
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 676
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 470

  467 expr: "++" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 677
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 471

  468 expr: "--" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 678
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 472

  267 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 287
    '$'                    shift, and go to state 505
    '@'                    shift, and go to state 679

    expression_block  go to state 680
    block_or_lambda   go to state 681
    expr_block        go to state 682


State 473

  265 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 287
    '$'                    shift, and go to state 505
    '@'                    shift, and go to state 679

    expression_block  go to state 680
    block_or_lambda   go to state 681
    expr_block        go to state 683


State 474

  266 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 287
    '$'                    shift, and go to state 505
    '@'                    shift, and go to state 679

    expression_block  go to state 680
    block_or_lambda   go to state 681
    expr_block        go to state 684


State 475

  515 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 685


State 476

  516 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 686


State 477

  517 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 687


State 478

  518 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 688


State 479

  519 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 689


State 480

  521 expr_mtag: "$c" . '(' expr ')' '(' ')'
  522          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 690


State 481

  520 expr_mtag: "..." .

    $default  reduce using rule 520 (expr_mtag)


State 482

  823 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  824                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  825                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  826                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  853 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  887 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 691
    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 692


State 483

  827 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  828                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  854 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  888 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 693
    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 694


State 484

  877 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  890 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "for"                             shift, and go to state 695
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 696
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_map_tuple          go to state 697
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table              go to state 698
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 485

  354 expr_numeric_const: "integer constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 486

  356 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 356 (expr_numeric_const)


State 487

  355 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 355 (expr_numeric_const)


State 488

  357 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 357 (expr_numeric_const)


State 489

  358 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 358 (expr_numeric_const)


State 490

  359 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 359 (expr_numeric_const)


State 491

  360 expr_numeric_const: "double constant" .

    $default  reduce using rule 360 (expr_numeric_const)


State 492

  249 expr_keyword: "keyword" . expr expression_block
  260 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '<'                               shift, and go to state 699
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 700
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 493

  263 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 701


State 494

   32 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 29 (string_builder_body)

    string_builder_body  go to state 702


State 495

  876 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  889 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "for"                             shift, and go to state 703
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 696
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_map_tuple          go to state 704
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    expr_map_tuple_list     go to state 705
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 496

  220 expression_block: "begin of code block" expressions "end of code block" .
  221                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 706

    $default  reduce using rule 220 (expression_block)


State 497

  225 expression_any: "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 498

  444 expr: '-' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 707
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 499

  443 expr: '+' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 708
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 500

  480 expr: '*' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 709
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 501

  442 expr: '~' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 710
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 502

  441 expr: '!' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 711
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 503

  852 make_dim_decl: '[' . expr_list optional_comma ']'
  885 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "for"                             shift, and go to state 712
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "iterator"                        shift, and go to state 713
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 714
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 504

  471 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 716
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 505

  336 block_or_lambda: '$' .

    $default  reduce using rule 336 (block_or_lambda)


State 506

  337 block_or_lambda: '@' .
  338                | '@' . '@'
  407 func_addr_expr: '@' . '@' func_addr_name
  410               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  413               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  530 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 717

    $default  reduce using rule 337 (block_or_lambda)


State 507

  435 expr: string_builder .

    $default  reduce using rule 435 (expr)


State 508

  434 expr: expr_reader .

    $default  reduce using rule 434 (expr)


State 509

  243 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 718


State 510

  244 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 719


State 511

   73 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 720
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 512

   75 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 721


State 513

  241 expression_any: expression_if_then_else .

    $default  reduce using rule 241 (expression_any)


State 514

  236 expression_any: expression_for_loop .

    $default  reduce using rule 236 (expression_any)


State 515

  233 expression_any: expression_unsafe .

    $default  reduce using rule 233 (expression_any)


State 516

  232 expression_any: expression_while_loop .

    $default  reduce using rule 232 (expression_any)


State 517

  234 expression_any: expression_with .

    $default  reduce using rule 234 (expression_any)


State 518

  235 expression_any: expression_with_alias .

    $default  reduce using rule 235 (expression_any)


State 519

  268 expr_pipe: expr_call_pipe .

    $default  reduce using rule 268 (expr_pipe)


State 520

  247 expressions: expressions expression_any .

    $default  reduce using rule 247 (expressions)


State 521

  227 expression_any: expr_keyword .

    $default  reduce using rule 227 (expression_any)


State 522

  223 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  514 expr: expression_keyword .

    '$'  shift, and go to state 505
    '@'  shift, and go to state 679

    '$'       [reduce using rule 514 (expr)]
    '@'       [reduce using rule 514 (expr)]
    $default  reduce using rule 514 (expr)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 723


State 523

  226 expression_any: expr_pipe .

    $default  reduce using rule 226 (expression_any)


State 524

  401 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  402                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  424 expr_call: name_in_namespace . '(' ')'
  425          | name_in_namespace . '(' "uninitialized" ')'
  426          | name_in_namespace . '(' make_struct_single ')'
  427          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  428          | name_in_namespace . '(' expr_list ')'
  432 expr: name_in_namespace .
  512     | name_in_namespace . "name"

    "name"  shift, and go to state 724
    '('     shift, and go to state 725

    "name"    [reduce using rule 432 (expr)]
    '('       [reduce using rule 432 (expr)]
    $default  reduce using rule 432 (expr)


State 525

  230 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 726


State 526

  505 expr: expr_new .

    $default  reduce using rule 505 (expr)


State 527

   71 expression_if_one_liner: expression_break .
  237 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 727

    $default  reduce using rule 71 (expression_if_one_liner)


State 528

   72 expression_if_one_liner: expression_continue .
  238 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 728

    $default  reduce using rule 72 (expression_if_one_liner)


State 529

   69 expression_if_one_liner: expression_return_no_pipe .
  289 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 729

    $default  reduce using rule 69 (expression_if_one_liner)


State 530

  239 expression_any: expression_return .

    $default  reduce using rule 239 (expression_any)


State 531

   70 expression_if_one_liner: expression_yield_no_pipe .
  294 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 730

    $default  reduce using rule 70 (expression_if_one_liner)


State 532

  240 expression_any: expression_yield .

    $default  reduce using rule 240 (expression_any)


State 533

  242 expression_any: expression_try_catch .

    $default  reduce using rule 242 (expression_any)


State 534

  311 expression_let: kwd_let . optional_in_scope let_variable_declaration
  312               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 731

    $default  reduce using rule 304 (optional_in_scope)

    optional_in_scope  go to state 732


State 535

  231 expression_any: expression_let .

    $default  reduce using rule 231 (expression_any)


State 536

  504 expr: expr_cast .

    $default  reduce using rule 504 (expr)


State 537

  503 expr: expr_type_decl .

    $default  reduce using rule 503 (expr)


State 538

  502 expr: expr_type_info .

    $default  reduce using rule 502 (expr)


State 539

  351 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 121 (optional_annotation_list)

    optional_annotation_list  go to state 733


State 540

  508 expr: expr_full_block .

    $default  reduce using rule 508 (expr)


State 541

  433 expr: expr_numeric_const .

    $default  reduce using rule 433 (expr)


State 542

  229 expression_any: expr_assign . "end of expression"
  264 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 734
    "end of expression"  shift, and go to state 735


State 543

  228 expression_any: expr_assign_pipe .

    $default  reduce using rule 228 (expression_any)


State 544

  507 expr: expr_named_call .

    $default  reduce using rule 507 (expr)


State 545

  506 expr: expr_method_call .

    $default  reduce using rule 506 (expr)


State 546

  478 expr: func_addr_expr .

    $default  reduce using rule 478 (expr)


State 547

  439 expr: expr_field .

    $default  reduce using rule 439 (expr)


State 548

  479 expr: expr_call .

    $default  reduce using rule 479 (expr)


State 549

   68 expression_if_one_liner: expr .
  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr .
  362            | expr . '=' expr
  363            | expr . "<-" expr
  364            | expr . ":=" expr
  365            | expr . "&=" expr
  366            | expr . "|=" expr
  367            | expr . "^=" expr
  368            | expr . "&&=" expr
  369            | expr . "||=" expr
  370            | expr . "^^=" expr
  371            | expr . "+=" expr
  372            | expr . "-=" expr
  373            | expr . "*=" expr
  374            | expr . "/=" expr
  375            | expr . "%=" expr
  376            | expr . "<<=" expr
  377            | expr . ">>=" expr
  378            | expr . "<<<=" expr
  379            | expr . ">>>=" expr
  384 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  385                 | expr . "<-" expr_assign_pipe_right
  386                 | expr . "&=" expr_assign_pipe_right
  387                 | expr . "|=" expr_assign_pipe_right
  388                 | expr . "^=" expr_assign_pipe_right
  389                 | expr . "&&=" expr_assign_pipe_right
  390                 | expr . "||=" expr_assign_pipe_right
  391                 | expr . "^^=" expr_assign_pipe_right
  392                 | expr . "+=" expr_assign_pipe_right
  393                 | expr . "-=" expr_assign_pipe_right
  394                 | expr . "*=" expr_assign_pipe_right
  395                 | expr . "/=" expr_assign_pipe_right
  396                 | expr . "%=" expr_assign_pipe_right
  397                 | expr . "<<=" expr_assign_pipe_right
  398                 | expr . ">>=" expr_assign_pipe_right
  399                 | expr . "<<<=" expr_assign_pipe_right
  400                 | expr . ">>>=" expr_assign_pipe_right
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 736
    "as"    shift, and go to state 737
    "+="    shift, and go to state 738
    "-="    shift, and go to state 739
    "/="    shift, and go to state 740
    "*="    shift, and go to state 741
    "%="    shift, and go to state 742
    "&="    shift, and go to state 743
    "|="    shift, and go to state 744
    "^="    shift, and go to state 745
    "<<"    shift, and go to state 746
    ">>"    shift, and go to state 747
    "++"    shift, and go to state 748
    "--"    shift, and go to state 749
    "<="    shift, and go to state 750
    "<<="   shift, and go to state 751
    ">>="   shift, and go to state 752
    ">="    shift, and go to state 753
    "=="    shift, and go to state 754
    "!="    shift, and go to state 755
    "->"    shift, and go to state 756
    "<-"    shift, and go to state 757
    "??"    shift, and go to state 758
    "?."    shift, and go to state 759
    "?["    shift, and go to state 760
    "<|"    shift, and go to state 761
    "|>"    shift, and go to state 762
    ":="    shift, and go to state 763
    "<<<"   shift, and go to state 764
    ">>>"   shift, and go to state 765
    "<<<="  shift, and go to state 766
    ">>>="  shift, and go to state 767
    "&&"    shift, and go to state 768
    "||"    shift, and go to state 769
    "^^"    shift, and go to state 770
    "&&="   shift, and go to state 771
    "||="   shift, and go to state 772
    "^^="   shift, and go to state 773
    ".."    shift, and go to state 774
    '='     shift, and go to state 775
    '?'     shift, and go to state 776
    '|'     shift, and go to state 777
    '^'     shift, and go to state 778
    '&'     shift, and go to state 779
    '<'     shift, and go to state 780
    '>'     shift, and go to state 781
    '-'     shift, and go to state 782
    '+'     shift, and go to state 783
    '*'     shift, and go to state 784
    '/'     shift, and go to state 785
    '%'     shift, and go to state 786
    '.'     shift, and go to state 787
    '['     shift, and go to state 788
    '$'     shift, and go to state 505
    '@'     shift, and go to state 679

    "if"      reduce using rule 68 (expression_if_one_liner)
    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 550

  440 expr: expr_mtag .

    $default  reduce using rule 440 (expr)


State 551

  429 expr_call: basic_type_declaration . '(' ')'
  430          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 790


State 552

  436 expr: make_decl .

    $default  reduce using rule 436 (expr)


State 553

  784 make_decl: make_struct_decl .

    $default  reduce using rule 784 (make_decl)


State 554

  788 make_decl: make_tuple_call .

    $default  reduce using rule 788 (make_decl)


State 555

  785 make_decl: make_dim_decl .

    $default  reduce using rule 785 (make_decl)


State 556

  786 make_decl: make_table_decl .

    $default  reduce using rule 786 (make_decl)


State 557

  787 make_decl: array_comprehension .

    $default  reduce using rule 787 (make_decl)


State 558

  606 enum_list: enum_list "name" . "end of expression"
  607          | enum_list "name" . '=' expr "end of expression"

    "end of expression"  shift, and go to state 791
    '='                  shift, and go to state 792


State 559

  605 enum_list: enum_list "end of expression" .

    $default  reduce using rule 605 (enum_list)


State 560

  624 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 . "end of code block"

    "end of code block"  shift, and go to state 793


State 561

  627 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 . enum_list $@44 "end of code block"

    $default  reduce using rule 604 (enum_list)

    enum_list  go to state 794


State 562

  629 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 629 (optional_structure_parent)


State 563

  547 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration "end of expression"
  549                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  551                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  552                                 | struct_variable_declaration_list . '[' annotation_list ']' "end of expression"
  639 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 795
    '['                  shift, and go to state 796

    "def"     reduce using rule 121 (optional_annotation_list)
    $default  reduce using rule 546 ($@34)

    optional_annotation_list  go to state 797
    $@34                      go to state 798


State 564

  595 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 595 (global_variable_declaration_list)


State 565

  532 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 532 (optional_field_annotation)


State 566

  513 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 665


State 567

  483 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  484     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 799


State 568

  260 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 699


State 569

  514 expr: expression_keyword .

    $default  reduce using rule 514 (expr)


State 570

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  584 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 800


State 571

  585 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 585 (let_variable_name_with_pos_list)


State 572

  586 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  587                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 801

    $default  reduce using rule 586 (let_variable_name_with_pos_list)


State 573

  588 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  589                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  590                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 408
    "implicit"           shift, and go to state 409
    "explicit"           shift, and go to state 410
    "=="                 shift, and go to state 411
    "<-"                 shift, and go to state 574
    "??"                 shift, and go to state 412
    ":="                 shift, and go to state 575
    "end of expression"  shift, and go to state 802
    '='                  shift, and go to state 576
    '?'                  shift, and go to state 413
    '&'                  shift, and go to state 414
    '-'                  shift, and go to state 415
    '['                  shift, and go to state 416
    '#'                  shift, and go to state 417

    copy_or_move_or_clone  go to state 803
    dim_list               go to state 418


State 574

  579 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 579 (copy_or_move_or_clone)


State 575

  580 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 580 (copy_or_move_or_clone)


State 576

  578 copy_or_move_or_clone: '=' .

    $default  reduce using rule 578 (copy_or_move_or_clone)


State 577

  591 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  592                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 519
    expression_keyword      go to state 522
    expr_pipe               go to state 804
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign             go to state 647
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 805
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 578

  709 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 806


State 579

  732 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 807


State 580

  735 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    table_type_pair              go to state 808
    type_declaration_no_options  go to state 358
    type_declaration             go to state 809


State 581

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  710 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 810


State 582

  738 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 811


State 583

  728 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 812


State 584

  685 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 813


State 585

  694 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 814

    bitfield_bits  go to state 815


State 586

  742 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 816


State 587

  745 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 285

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 817


State 588

  749 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 818


State 589

  752 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 285

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 819


State 590

  756 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 820


State 591

  759 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 285

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 821


State 592

  762 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 611
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    tuple_type                   go to state 822
    tuple_type_list              go to state 823
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 616


State 593

  765 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 618

    variant_type       go to state 824
    variant_type_list  go to state 825


State 594

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  686 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 826


State 595

  713 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 712 ($@51)

    $@51  go to state 827


State 596

  711 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 507
    expr_reader             go to state 508
    optional_expr_list      go to state 828
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 829
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 597

  723 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 723 (type_declaration_no_options)


State 598

  724 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 724 (type_declaration_no_options)


State 599

  717 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 717 (type_declaration_no_options)


State 600

  719 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 719 (type_declaration_no_options)


State 601

  714 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 830


State 602

  722 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 722 (type_declaration_no_options)


State 603

  706 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 706 (type_declaration_no_options)


State 604

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  699 dim_list: '[' expr . ']'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ']'    shift, and go to state 831


State 605

  700 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 832
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 606

  768 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 768 (type_declaration)


State 607

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  767 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    $default  reduce using rule 767 (type_declaration)

    dim_list  go to state 418


State 608

  691 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 833


State 609

  690 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 690 (bitfield_alias_bits)


State 610

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 . "end of code block"

    "end of code block"  shift, and go to state 834


State 611

  269 name_in_namespace: "name" .
  270                  | "name" . "::" "name"
  558 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 835

    $default  reduce using rule 269 (name_in_namespace)


State 612

  696 c_or_s: "end of expression" .

    $default  reduce using rule 696 (c_or_s)


State 613

  695 c_or_s: ',' .

    $default  reduce using rule 695 (c_or_s)


State 614

  563 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613

    c_or_s  go to state 836


State 615

  562 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 562 (tuple_alias_type_list)


State 616

  557 tuple_type: type_declaration .
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419

    $default  reduce using rule 557 (tuple_type)


State 617

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 . "end of code block"

    "end of code block"  shift, and go to state 837


State 618

  564 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 838


State 619

  569 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613

    c_or_s  go to state 839


State 620

  568 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 568 (variant_alias_type_list)


State 621

  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 . "end of code block"

    "end of code block"  shift, and go to state 840


State 622

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  554 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 841


State 623

  644 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 842


State 624

  643 variable_name_with_pos_list: "name" .
  645                            | "name" . "aka" "name"

    "aka"  shift, and go to state 843

    $default  reduce using rule 643 (variable_name_with_pos_list)


State 625

  553 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 553 (function_argument_declaration)


State 626

  572 variable_declaration: variable_name_with_pos_list .
  573                     | variable_name_with_pos_list . '&'
  574                     | variable_name_with_pos_list . ':' type_declaration
  575                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  576                     | variable_name_with_pos_list . copy_or_move expr
  577                     | variable_name_with_pos_list . copy_or_move expr_pipe
  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 844
    ','   shift, and go to state 845
    '='   shift, and go to state 846
    ':'   shift, and go to state 847
    '&'   shift, and go to state 848

    $default  reduce using rule 572 (variable_declaration)

    copy_or_move  go to state 849


State 627

  556 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 556 (function_argument_list)


State 628

  831 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 829 ($@88)

    $@88  go to state 850


State 629

  834 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 832 ($@90)

    $@90  go to state 851


State 630

   79 expression_while_loop: "while" expr . expression_block
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 736
    "as"                   shift, and go to state 737
    "<<"                   shift, and go to state 746
    ">>"                   shift, and go to state 747
    "++"                   shift, and go to state 748
    "--"                   shift, and go to state 749
    "<="                   shift, and go to state 750
    ">="                   shift, and go to state 753
    "=="                   shift, and go to state 754
    "!="                   shift, and go to state 755
    "->"                   shift, and go to state 756
    "??"                   shift, and go to state 758
    "?."                   shift, and go to state 759
    "?["                   shift, and go to state 760
    "<|"                   shift, and go to state 761
    "|>"                   shift, and go to state 762
    "<<<"                  shift, and go to state 764
    ">>>"                  shift, and go to state 765
    "&&"                   shift, and go to state 768
    "||"                   shift, and go to state 769
    "^^"                   shift, and go to state 770
    ".."                   shift, and go to state 774
    "begin of code block"  shift, and go to state 287
    '?'                    shift, and go to state 776
    '|'                    shift, and go to state 777
    '^'                    shift, and go to state 778
    '&'                    shift, and go to state 779
    '<'                    shift, and go to state 780
    '>'                    shift, and go to state 781
    '-'                    shift, and go to state 782
    '+'                    shift, and go to state 783
    '*'                    shift, and go to state 784
    '/'                    shift, and go to state 785
    '%'                    shift, and go to state 786
    '.'                    shift, and go to state 787
    '['                    shift, and go to state 788

    expression_block  go to state 852


State 631

   77 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_name_with_pos_list  go to state 853


State 632

  276 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 274 ($@11)

    $@11  go to state 854


State 633

  278 expr_new: "new" new_type_declaration .
  279         | "new" new_type_declaration . '(' use_initializer ')'
  280         | "new" new_type_declaration . '(' expr_list ')'
  281         | "new" new_type_declaration . '(' make_struct_single ')'
  282         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 855

    '('       [reduce using rule 278 (expr_new)]
    $default  reduce using rule 278 (expr_new)


State 634

  277 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 277 (new_type_declaration)


State 635

  283 expr_new: "new" make_decl .

    $default  reduce using rule 283 (expr_new)


State 636

  325 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  326               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  327               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 856


State 637

  328 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  329               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  330               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 857
    '('  shift, and go to state 858


State 638

  324 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 322 ($@19)

    $@19  go to state 859


State 639

  857 make_dim_decl: "array" "struct" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 860


State 640

  860 make_dim_decl: "array" "tuple" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 861


State 641

  863 make_dim_decl: "array" "variant" . '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    '<'  shift, and go to state 862


State 642

  867 make_dim_decl: "array" '<' . $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    $default  reduce using rule 865 ($@104)

    $@104  go to state 863


State 643

  864 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 864
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 644

  288 expression_return_no_pipe: "return" "<-" . expr_list
  291 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 519
    expression_keyword      go to state 522
    expr_pipe               go to state 865
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 866
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign             go to state 647
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 648
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 645

  290 expression_return: "return" expr_pipe .

    $default  reduce using rule 290 (expression_return)


State 646

  287 expression_return_no_pipe: "return" expr_list .
  332 expr_list: expr_list . ',' expr

    ','  shift, and go to state 867

    $default  reduce using rule 287 (expression_return_no_pipe)


State 647

  264 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 734


State 648

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  331 expr_list: expr .
  361 expr_assign: expr .
  362            | expr . '=' expr
  363            | expr . "<-" expr
  364            | expr . ":=" expr
  365            | expr . "&=" expr
  366            | expr . "|=" expr
  367            | expr . "^=" expr
  368            | expr . "&&=" expr
  369            | expr . "||=" expr
  370            | expr . "^^=" expr
  371            | expr . "+=" expr
  372            | expr . "-=" expr
  373            | expr . "*=" expr
  374            | expr . "/=" expr
  375            | expr . "%=" expr
  376            | expr . "<<=" expr
  377            | expr . ">>=" expr
  378            | expr . "<<<=" expr
  379            | expr . ">>>=" expr
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 736
    "as"    shift, and go to state 737
    "+="    shift, and go to state 868
    "-="    shift, and go to state 869
    "/="    shift, and go to state 870
    "*="    shift, and go to state 871
    "%="    shift, and go to state 872
    "&="    shift, and go to state 873
    "|="    shift, and go to state 874
    "^="    shift, and go to state 875
    "<<"    shift, and go to state 746
    ">>"    shift, and go to state 747
    "++"    shift, and go to state 748
    "--"    shift, and go to state 749
    "<="    shift, and go to state 750
    "<<="   shift, and go to state 876
    ">>="   shift, and go to state 877
    ">="    shift, and go to state 753
    "=="    shift, and go to state 754
    "!="    shift, and go to state 755
    "->"    shift, and go to state 756
    "<-"    shift, and go to state 878
    "??"    shift, and go to state 758
    "?."    shift, and go to state 759
    "?["    shift, and go to state 760
    "<|"    shift, and go to state 761
    "|>"    shift, and go to state 762
    ":="    shift, and go to state 763
    "<<<"   shift, and go to state 764
    ">>>"   shift, and go to state 765
    "<<<="  shift, and go to state 879
    ">>>="  shift, and go to state 880
    "&&"    shift, and go to state 768
    "||"    shift, and go to state 769
    "^^"    shift, and go to state 770
    "&&="   shift, and go to state 881
    "||="   shift, and go to state 882
    "^^="   shift, and go to state 883
    ".."    shift, and go to state 774
    '='     shift, and go to state 884
    '?'     shift, and go to state 776
    '|'     shift, and go to state 777
    '^'     shift, and go to state 778
    '&'     shift, and go to state 779
    '<'     shift, and go to state 780
    '>'     shift, and go to state 781
    '-'     shift, and go to state 782
    '+'     shift, and go to state 783
    '*'     shift, and go to state 784
    '/'     shift, and go to state 785
    '%'     shift, and go to state 786
    '.'     shift, and go to state 787
    '['     shift, and go to state 788
    '$'     shift, and go to state 505
    '@'     shift, and go to state 679

    " <|"     reduce using rule 361 (expr_assign)
    $default  reduce using rule 331 (expr_list)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 649

  297 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 885


State 650

  879 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  880                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 886


State 651

  878 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 254 (optional_expr_map_tuple_list)

    string_builder                go to state 507
    expr_reader                   go to state 508
    optional_expr_map_tuple_list  go to state 887
    expression_keyword            go to state 569
    name_in_namespace             go to state 524
    expr_new                      go to state 526
    expr_cast                     go to state 536
    expr_type_decl                go to state 537
    expr_type_info                go to state 538
    block_or_lambda               go to state 539
    expr_full_block               go to state 540
    expr_numeric_const            go to state 541
    expr_named_call               go to state 544
    expr_method_call              go to state 545
    func_addr_expr                go to state 546
    expr_field                    go to state 547
    expr_call                     go to state 548
    expr                          go to state 696
    expr_mtag                     go to state 550
    basic_type_declaration        go to state 551
    make_decl                     go to state 552
    make_struct_decl              go to state 553
    make_map_tuple                go to state 704
    make_tuple_call               go to state 554
    make_dim_decl                 go to state 555
    expr_map_tuple_list           go to state 888
    make_table_decl               go to state 556
    array_comprehension           go to state 557


State 652

  273 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 889
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 653

  272 expression_delete: "delete" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 272 (expression_delete)


State 654

  481 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 890
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 655

   80 expression_with: "with" expr . expression_block
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 736
    "as"                   shift, and go to state 737
    "<<"                   shift, and go to state 746
    ">>"                   shift, and go to state 747
    "++"                   shift, and go to state 748
    "--"                   shift, and go to state 749
    "<="                   shift, and go to state 750
    ">="                   shift, and go to state 753
    "=="                   shift, and go to state 754
    "!="                   shift, and go to state 755
    "->"                   shift, and go to state 756
    "??"                   shift, and go to state 758
    "?."                   shift, and go to state 759
    "?["                   shift, and go to state 760
    "<|"                   shift, and go to state 761
    "|>"                   shift, and go to state 762
    "<<<"                  shift, and go to state 764
    ">>>"                  shift, and go to state 765
    "&&"                   shift, and go to state 768
    "||"                   shift, and go to state 769
    "^^"                   shift, and go to state 770
    ".."                   shift, and go to state 774
    "begin of code block"  shift, and go to state 287
    '?'                    shift, and go to state 776
    '|'                    shift, and go to state 777
    '^'                    shift, and go to state 778
    '&'                    shift, and go to state 779
    '<'                    shift, and go to state 780
    '>'                    shift, and go to state 781
    '-'                    shift, and go to state 782
    '+'                    shift, and go to state 783
    '*'                    shift, and go to state 784
    '/'                    shift, and go to state 785
    '%'                    shift, and go to state 786
    '.'                    shift, and go to state 787
    '['                    shift, and go to state 788

    expression_block  go to state 891


State 656

   82 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 892


State 657

  315 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 313 ($@13)

    $@13  go to state 893


State 658

  318 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 316 ($@15)

    $@15  go to state 894


State 659

  482 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 895
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 660

  245 expression_any: "pass" "end of expression" .

    $default  reduce using rule 245 (expression_any)


State 661

  321 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 319 ($@17)

    $@17  go to state 896


State 662

   55 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 897


State 663

   56 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 898


State 664

   57 expression_goto: "goto" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 57 (expression_goto)


State 665

  513 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 899
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 666

   78 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 78 (expression_unsafe)


State 667

  871 make_dim_decl: "fixed_array" '<' . $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 869 ($@106)

    $@106  go to state 900


State 668

  868 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 901
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 669

  840 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95 use_initializer

    $default  reduce using rule 838 ($@94)

    $@94  go to state 902


State 670

  849 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 847 ($@96)

    $@96  go to state 903


State 671

  846 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 904
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 672

  837 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    $default  reduce using rule 835 ($@92)

    $@92  go to state 905


State 673

  224 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  483 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  484     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 906


State 674

  293 expression_yield_no_pipe: "yield" "<-" . expr
  296 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 519
    expression_keyword      go to state 522
    expr_pipe               go to state 907
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign             go to state 647
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 908
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 675

  295 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 295 (expression_yield)


State 676

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  292 expression_yield_no_pipe: "yield" expr .
  361 expr_assign: expr .
  362            | expr . '=' expr
  363            | expr . "<-" expr
  364            | expr . ":=" expr
  365            | expr . "&=" expr
  366            | expr . "|=" expr
  367            | expr . "^=" expr
  368            | expr . "&&=" expr
  369            | expr . "||=" expr
  370            | expr . "^^=" expr
  371            | expr . "+=" expr
  372            | expr . "-=" expr
  373            | expr . "*=" expr
  374            | expr . "/=" expr
  375            | expr . "%=" expr
  376            | expr . "<<=" expr
  377            | expr . ">>=" expr
  378            | expr . "<<<=" expr
  379            | expr . ">>>=" expr
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 736
    "as"    shift, and go to state 737
    "+="    shift, and go to state 868
    "-="    shift, and go to state 869
    "/="    shift, and go to state 870
    "*="    shift, and go to state 871
    "%="    shift, and go to state 872
    "&="    shift, and go to state 873
    "|="    shift, and go to state 874
    "^="    shift, and go to state 875
    "<<"    shift, and go to state 746
    ">>"    shift, and go to state 747
    "++"    shift, and go to state 748
    "--"    shift, and go to state 749
    "<="    shift, and go to state 750
    "<<="   shift, and go to state 876
    ">>="   shift, and go to state 877
    ">="    shift, and go to state 753
    "=="    shift, and go to state 754
    "!="    shift, and go to state 755
    "->"    shift, and go to state 756
    "<-"    shift, and go to state 878
    "??"    shift, and go to state 758
    "?."    shift, and go to state 759
    "?["    shift, and go to state 760
    "<|"    shift, and go to state 761
    "|>"    shift, and go to state 762
    ":="    shift, and go to state 763
    "<<<"   shift, and go to state 764
    ">>>"   shift, and go to state 765
    "<<<="  shift, and go to state 879
    ">>>="  shift, and go to state 880
    "&&"    shift, and go to state 768
    "||"    shift, and go to state 769
    "^^"    shift, and go to state 770
    "&&="   shift, and go to state 881
    "||="   shift, and go to state 882
    "^^="   shift, and go to state 883
    ".."    shift, and go to state 774
    '='     shift, and go to state 884
    '?'     shift, and go to state 776
    '|'     shift, and go to state 777
    '^'     shift, and go to state 778
    '&'     shift, and go to state 779
    '<'     shift, and go to state 780
    '>'     shift, and go to state 781
    '-'     shift, and go to state 782
    '+'     shift, and go to state 783
    '*'     shift, and go to state 784
    '/'     shift, and go to state 785
    '%'     shift, and go to state 786
    '.'     shift, and go to state 787
    '['     shift, and go to state 788
    '$'     shift, and go to state 505
    '@'     shift, and go to state 679

    " <|"     reduce using rule 361 (expr_assign)
    $default  reduce using rule 292 (expression_yield_no_pipe)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 677

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  467     | "++" expr .
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 467 (expr)


State 678

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  468     | "--" expr .
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 468 (expr)


State 679

  337 block_or_lambda: '@' .
  338                | '@' . '@'

    '@'  shift, and go to state 909

    $default  reduce using rule 337 (block_or_lambda)


State 680

  349 expr_block: expression_block .

    $default  reduce using rule 349 (expr_block)


State 681

  350 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 121 (optional_annotation_list)

    optional_annotation_list  go to state 910


State 682

  267 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 267 (expr_pipe)


State 683

  265 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 265 (expr_pipe)


State 684

  266 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 266 (expr_pipe)


State 685

  515 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 911
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 686

  516 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 912
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 687

  517 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 913
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 688

  518 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 914
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 689

  519 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 915
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 690

  521 expr_mtag: "$c" '(' . expr ')' '(' ')'
  522          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 916
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 691

  887 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_name_with_pos_list  go to state 917


State 692

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  823 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  824                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  825                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  826                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  853 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "const"                           shift, and go to state 408
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "where"                           shift, and go to state 918
    "reinterpret"                     shift, and go to state 459
    "implicit"                        shift, and go to state 409
    "explicit"                        shift, and go to state 410
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "=="                              shift, and go to state 411
    "??"                              shift, and go to state 412
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "$f"                              shift, and go to state 919
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 920
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '?'                               shift, and go to state 413
    '&'                               shift, and go to state 414
    '-'                               shift, and go to state 921
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 922
    '('                               shift, and go to state 923
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506
    '#'                               shift, and go to state 417

    $default  reduce using rule 807 (optional_block)

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 924
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    dim_list                go to state 418
    make_decl               go to state 552
    make_struct_fields      go to state 925
    make_struct_dim         go to state 926
    optional_block          go to state 927
    make_struct_decl        go to state 553
    make_tuple              go to state 928
    make_tuple_call         go to state 554
    make_dim                go to state 929
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 693

  888 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_name_with_pos_list  go to state 930


State 694

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  827 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  828                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  854 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "const"                           shift, and go to state 408
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "implicit"                        shift, and go to state 409
    "explicit"                        shift, and go to state 410
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "=="                              shift, and go to state 411
    "??"                              shift, and go to state 412
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "$f"                              shift, and go to state 919
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 920
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '?'                               shift, and go to state 413
    '&'                               shift, and go to state 414
    '-'                               shift, and go to state 921
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 922
    '('                               shift, and go to state 931
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506
    '#'                               shift, and go to state 417

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 924
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    dim_list                go to state 418
    make_decl               go to state 552
    make_struct_fields      go to state 925
    make_struct_dim         go to state 932
    make_struct_decl        go to state 553
    make_tuple              go to state 928
    make_tuple_call         go to state 554
    make_dim                go to state 933
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 695

  890 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_name_with_pos_list  go to state 934


State 696

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  844 make_map_tuple: expr . "=>" expr
  845               | expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "=>"   shift, and go to state 935
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 845 (make_map_tuple)


State 697

  872 make_table: make_map_tuple .

    $default  reduce using rule 872 (make_table)


State 698

  873 make_table: make_table . "end of expression" make_map_tuple
  877 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 936
    "end of expression"  shift, and go to state 937
    ";}}"                shift, and go to state 938

    optional_trailing_semicolon_cur_cur  go to state 939


State 699

  260 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 258 ($@7)

    $@7  go to state 940


State 700

  249 expr_keyword: "keyword" expr . expression_block
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 736
    "as"                   shift, and go to state 737
    "<<"                   shift, and go to state 746
    ">>"                   shift, and go to state 747
    "++"                   shift, and go to state 748
    "--"                   shift, and go to state 749
    "<="                   shift, and go to state 750
    ">="                   shift, and go to state 753
    "=="                   shift, and go to state 754
    "!="                   shift, and go to state 755
    "->"                   shift, and go to state 756
    "??"                   shift, and go to state 758
    "?."                   shift, and go to state 759
    "?["                   shift, and go to state 760
    "<|"                   shift, and go to state 761
    "|>"                   shift, and go to state 762
    "<<<"                  shift, and go to state 764
    ">>>"                  shift, and go to state 765
    "&&"                   shift, and go to state 768
    "||"                   shift, and go to state 769
    "^^"                   shift, and go to state 770
    ".."                   shift, and go to state 774
    "begin of code block"  shift, and go to state 287
    '?'                    shift, and go to state 776
    '|'                    shift, and go to state 777
    '^'                    shift, and go to state 778
    '&'                    shift, and go to state 779
    '<'                    shift, and go to state 780
    '>'                    shift, and go to state 781
    '-'                    shift, and go to state 782
    '+'                    shift, and go to state 783
    '*'                    shift, and go to state 784
    '/'                    shift, and go to state 785
    '%'                    shift, and go to state 786
    '.'                    shift, and go to state 787
    '['                    shift, and go to state 788

    expression_block  go to state 941


State 701

  263 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 261 ($@9)

    $@9  go to state 942


State 702

   30 string_builder_body: string_builder_body . character_sequence
   31                    | string_builder_body . "{" expr "}"
   32 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 943
    "{"                   shift, and go to state 944

    character_sequence  go to state 945


State 703

  889 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_name_with_pos_list  go to state 946


State 704

  874 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 874 (expr_map_tuple_list)


State 705

  875 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  876 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 947

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 948


State 706

  221 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 949


State 707

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  444 expr: '-' expr .
  445     | expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 444 (expr)


State 708

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  443 expr: '+' expr .
  445     | expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 443 (expr)


State 709

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  480     | '*' expr .
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 480 (expr)


State 710

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  442 expr: '~' expr .
  445     | expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 442 (expr)


State 711

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  441 expr: '!' expr .
  445     | expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 441 (expr)


State 712

  885 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_name_with_pos_list  go to state 950


State 713

  886 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 951


State 714

  332 expr_list: expr_list . ',' expr
  852 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 952

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 953


State 715

  331 expr_list: expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 331 (expr_list)


State 716

  332 expr_list: expr_list . ',' expr
  471 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 952

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 954


State 717

  338 block_or_lambda: '@' '@' .
  407 func_addr_expr: '@' '@' . func_addr_name
  410               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  413               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  530 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 955
    "$c"    shift, and go to state 956
    "name"  shift, and go to state 59
    '<'     shift, and go to state 957

    $default  reduce using rule 338 (block_or_lambda)

    name_in_namespace  go to state 958
    func_addr_name     go to state 959


State 718

  243 expression_any: expression_label "end of expression" .

    $default  reduce using rule 243 (expression_any)


State 719

  244 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 244 (expression_any)


State 720

   73 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 736
    "as"                   shift, and go to state 737
    "<<"                   shift, and go to state 746
    ">>"                   shift, and go to state 747
    "++"                   shift, and go to state 748
    "--"                   shift, and go to state 749
    "<="                   shift, and go to state 750
    ">="                   shift, and go to state 753
    "=="                   shift, and go to state 754
    "!="                   shift, and go to state 755
    "->"                   shift, and go to state 756
    "??"                   shift, and go to state 758
    "?."                   shift, and go to state 759
    "?["                   shift, and go to state 760
    "<|"                   shift, and go to state 761
    "|>"                   shift, and go to state 762
    "<<<"                  shift, and go to state 764
    ">>>"                  shift, and go to state 765
    "&&"                   shift, and go to state 768
    "||"                   shift, and go to state 769
    "^^"                   shift, and go to state 770
    ".."                   shift, and go to state 774
    "begin of code block"  shift, and go to state 287
    '?'                    shift, and go to state 776
    '|'                    shift, and go to state 777
    '^'                    shift, and go to state 778
    '&'                    shift, and go to state 779
    '<'                    shift, and go to state 780
    '>'                    shift, and go to state 781
    '-'                    shift, and go to state 782
    '+'                    shift, and go to state 783
    '*'                    shift, and go to state 784
    '/'                    shift, and go to state 785
    '%'                    shift, and go to state 786
    '.'                    shift, and go to state 787
    '['                    shift, and go to state 788

    expression_block  go to state 960


State 721

   75 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner "end of expression"

    $default  reduce using rule 74 ($@3)

    $@3  go to state 961


State 722

  353 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 352 ($@21)

    $@21  go to state 962


State 723

  223 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 223 (expr_call_pipe)


State 724

  512 expr: name_in_namespace "name" .

    $default  reduce using rule 512 (expr)


State 725

  401 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  402                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  424 expr_call: name_in_namespace '(' . ')'
  425          | name_in_namespace '(' . "uninitialized" ')'
  426          | name_in_namespace '(' . make_struct_single ')'
  427          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  428          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "uninitialized"                   shift, and go to state 963
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "$f"                              shift, and go to state 919
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 920
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 964
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 965
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 966
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_fields      go to state 967
    make_struct_single      go to state 968
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 726

  230 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 727

  237 expression_any: expression_break "end of expression" .

    $default  reduce using rule 237 (expression_any)


State 728

  238 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 729

  289 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 289 (expression_return)


State 730

  294 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 294 (expression_yield)


State 731

  303 optional_in_scope: "inscope" .

    $default  reduce using rule 303 (optional_in_scope)


State 732

  311 expression_let: kwd_let optional_in_scope . let_variable_declaration
  312               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 307
    "[["    shift, and go to state 969
    "name"  shift, and go to state 308
    '('     shift, and go to state 970

    tuple_expansion_variable_declaration  go to state 971
    let_variable_name_with_pos_list       go to state 309
    let_variable_declaration              go to state 972


State 733

  351 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 973
    "[["       shift, and go to state 974

    $default  reduce using rule 346 (optional_capture_list)

    optional_capture_list  go to state 975


State 734

  264 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 287
    '$'                    shift, and go to state 505
    '@'                    shift, and go to state 679

    expression_block  go to state 680
    block_or_lambda   go to state 681
    expr_block        go to state 976


State 735

  229 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 736

  489 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr "is" . basic_type_declaration
  491     | expr "is" . "name"
  529 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 977
    "bool"      shift, and go to state 318
    "void"      shift, and go to state 319
    "string"    shift, and go to state 320
    "int"       shift, and go to state 322
    "int2"      shift, and go to state 323
    "int3"      shift, and go to state 324
    "int4"      shift, and go to state 325
    "uint"      shift, and go to state 326
    "bitfield"  shift, and go to state 465
    "uint2"     shift, and go to state 328
    "uint3"     shift, and go to state 329
    "uint4"     shift, and go to state 330
    "float"     shift, and go to state 331
    "float2"    shift, and go to state 332
    "float3"    shift, and go to state 333
    "float4"    shift, and go to state 334
    "range"     shift, and go to state 335
    "urange"    shift, and go to state 336
    "range64"   shift, and go to state 337
    "urange64"  shift, and go to state 338
    "int64"     shift, and go to state 340
    "uint64"    shift, and go to state 341
    "double"    shift, and go to state 342
    "int8"      shift, and go to state 345
    "uint8"     shift, and go to state 346
    "int16"     shift, and go to state 347
    "uint16"    shift, and go to state 348
    "$f"        shift, and go to state 978
    "name"      shift, and go to state 979

    basic_type_declaration  go to state 980


State 737

  492 expr: expr "as" . "name"
  495     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  496     | expr "as" . basic_type_declaration
  527 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 981
    "bool"      shift, and go to state 318
    "void"      shift, and go to state 319
    "string"    shift, and go to state 320
    "int"       shift, and go to state 322
    "int2"      shift, and go to state 323
    "int3"      shift, and go to state 324
    "int4"      shift, and go to state 325
    "uint"      shift, and go to state 326
    "bitfield"  shift, and go to state 465
    "uint2"     shift, and go to state 328
    "uint3"     shift, and go to state 329
    "uint4"     shift, and go to state 330
    "float"     shift, and go to state 331
    "float2"    shift, and go to state 332
    "float3"    shift, and go to state 333
    "float4"    shift, and go to state 334
    "range"     shift, and go to state 335
    "urange"    shift, and go to state 336
    "range64"   shift, and go to state 337
    "urange64"  shift, and go to state 338
    "int64"     shift, and go to state 340
    "uint64"    shift, and go to state 341
    "double"    shift, and go to state 342
    "int8"      shift, and go to state 345
    "uint8"     shift, and go to state 346
    "int16"     shift, and go to state 347
    "uint16"    shift, and go to state 348
    "$f"        shift, and go to state 982
    "name"      shift, and go to state 983

    basic_type_declaration  go to state 984


State 738

  371 expr_assign: expr "+=" . expr
  392 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 989
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 990
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 739

  372 expr_assign: expr "-=" . expr
  393 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 991
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 992
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 740

  374 expr_assign: expr "/=" . expr
  395 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 993
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 994
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 741

  373 expr_assign: expr "*=" . expr
  394 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 995
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 996
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 742

  375 expr_assign: expr "%=" . expr
  396 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 997
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 998
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 743

  365 expr_assign: expr "&=" . expr
  386 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 999
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1000
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 744

  366 expr_assign: expr "|=" . expr
  387 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1001
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1002
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 745

  367 expr_assign: expr "^=" . expr
  388 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1003
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1004
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 746

  445 expr: expr "<<" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1005
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 747

  446 expr: expr ">>" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1006
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 748

  469 expr: expr "++" .

    $default  reduce using rule 469 (expr)


State 749

  470 expr: expr "--" .

    $default  reduce using rule 470 (expr)


State 750

  458 expr: expr "<=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1007
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 751

  376 expr_assign: expr "<<=" . expr
  397 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1008
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1009
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 752

  377 expr_assign: expr ">>=" . expr
  398 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1010
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1011
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 753

  459 expr: expr ">=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1012
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 754

  456 expr: expr "==" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1013
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 755

  457 expr: expr "!=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1014
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 756

  403 expr_method_call: expr "->" . "name" '(' ')'
  404                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1015


State 757

  363 expr_assign: expr "<-" . expr
  385 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1017
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 758

  485 expr: expr "??" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1018
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 759

  476 expr: expr "?." . "name"
  524 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1019
    "name"  shift, and go to state 1020


State 760

  474 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1021
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 761

  509 expr: expr "<|" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1022
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 762

  510 expr: expr "|>" . expr
  511     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1023
    expr_mtag               go to state 550
    basic_type_declaration  go to state 1024
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 763

  364 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1025
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 764

  447 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1026
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 765

  448 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1027
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 766

  378 expr_assign: expr "<<<=" . expr
  399 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1028
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1029
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 767

  379 expr_assign: expr ">>>=" . expr
  400 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1030
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1031
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 768

  463 expr: expr "&&" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1032
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 769

  464 expr: expr "||" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1033
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 770

  465 expr: expr "^^" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1034
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 771

  368 expr_assign: expr "&&=" . expr
  389 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1035
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1036
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 772

  369 expr_assign: expr "||=" . expr
  390 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1037
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1038
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 773

  370 expr_assign: expr "^^=" . expr
  391 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1039
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1040
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 774

  466 expr: expr ".." . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1041
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 775

  362 expr_assign: expr '=' . expr
  384 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 985
    "@ <|"                            shift, and go to state 986
    "@@ <|"                           shift, and go to state 987
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 988
    expression_keyword      go to state 522
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign_pipe_right  go to state 1042
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1043
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 776

  486 expr: expr '?' . expr ':' expr
  497     | expr '?' . "as" "name"
  500     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr '?' . "as" basic_type_declaration
  528 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "as"                              shift, and go to state 1044
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1045
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 777

  461 expr: expr '|' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1046
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 778

  462 expr: expr '^' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1047
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 779

  460 expr: expr '&' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1048
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 780

  454 expr: expr '<' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1049
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 781

  455 expr: expr '>' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1050
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 782

  450 expr: expr '-' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1051
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 783

  449 expr: expr '+' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1052
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 784

  451 expr: expr '*' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1053
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 785

  452 expr: expr '/' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1054
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 786

  453 expr: expr '%' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1055
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 787

  414 expr_field: expr '.' . "name"
  415           | expr '.' . '.' "name"
  416           | expr '.' . "name" '(' ')'
  417           | expr '.' . "name" '(' expr_list ')'
  418           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  419           | expr '.' . basic_type_declaration '(' ')'
  420           | expr '.' . basic_type_declaration '(' expr_list ')'
  423           | expr '.' . $@26 error $@27
  473 expr: expr '.' . '[' expr ']'
  475     | expr '.' . "?[" expr ']'
  477     | expr '.' . "?." "name"
  523 expr_mtag: expr '.' . "$f" '(' expr ')'
  525          | expr '.' . '.' "$f" '(' expr ')'
  526          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 318
    "void"      shift, and go to state 319
    "string"    shift, and go to state 320
    "int"       shift, and go to state 322
    "int2"      shift, and go to state 323
    "int3"      shift, and go to state 324
    "int4"      shift, and go to state 325
    "uint"      shift, and go to state 326
    "bitfield"  shift, and go to state 465
    "uint2"     shift, and go to state 328
    "uint3"     shift, and go to state 329
    "uint4"     shift, and go to state 330
    "float"     shift, and go to state 331
    "float2"    shift, and go to state 332
    "float3"    shift, and go to state 333
    "float4"    shift, and go to state 334
    "range"     shift, and go to state 335
    "urange"    shift, and go to state 336
    "range64"   shift, and go to state 337
    "urange64"  shift, and go to state 338
    "int64"     shift, and go to state 340
    "uint64"    shift, and go to state 341
    "double"    shift, and go to state 342
    "int8"      shift, and go to state 345
    "uint8"     shift, and go to state 346
    "int16"     shift, and go to state 347
    "uint16"    shift, and go to state 348
    "?."        shift, and go to state 1056
    "?["        shift, and go to state 1057
    "$f"        shift, and go to state 1058
    "name"      shift, and go to state 1059
    '.'         shift, and go to state 1060
    '['         shift, and go to state 1061

    $default  reduce using rule 421 ($@26)

    $@26                    go to state 1062
    basic_type_declaration  go to state 1063


State 788

  472 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1064
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 789

  222 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 222 (expr_call_pipe)


State 790

  429 expr_call: basic_type_declaration '(' . ')'
  430          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 1065
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1066
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 791

  606 enum_list: enum_list "name" "end of expression" .

    $default  reduce using rule 606 (enum_list)


State 792

  607 enum_list: enum_list "name" '=' . expr "end of expression"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1067
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 793

  624 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name "begin of code block" $@41 enum_list $@42 "end of code block" .

    $default  reduce using rule 624 (enum_declaration)


State 794

  605 enum_list: enum_list . "end of expression"
  606          | enum_list . "name" "end of expression"
  607          | enum_list . "name" '=' expr "end of expression"
  627 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list . $@44 "end of code block"

    "name"               shift, and go to state 558
    "end of expression"  shift, and go to state 559

    $default  reduce using rule 626 ($@44)

    $@44  go to state 1068


State 795

  639 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 639 (optional_struct_variable_declaration_list)


State 796

  122 optional_annotation_list: '[' . annotation_list ']'
  552 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' "end of expression"

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1069
    name_in_namespace             go to state 70


State 797

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  551                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1070


State 798

  547 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration "end of expression"

    "[["  shift, and go to state 219
    '@'   shift, and go to state 220

    $default  reduce using rule 531 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1071
    structure_variable_declaration  go to state 1072


State 799

  483 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  484     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1073


State 800

  584 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 584 (let_variable_name_with_pos_list)


State 801

  587 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1074


State 802

  588 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 588 (let_variable_declaration)


State 803

  589 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  590                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 519
    expression_keyword      go to state 522
    expr_pipe               go to state 1075
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign             go to state 647
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1076
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 804

  592 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 592 (let_variable_declaration)


State 805

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr .
  362            | expr . '=' expr
  363            | expr . "<-" expr
  364            | expr . ":=" expr
  365            | expr . "&=" expr
  366            | expr . "|=" expr
  367            | expr . "^=" expr
  368            | expr . "&&=" expr
  369            | expr . "||=" expr
  370            | expr . "^^=" expr
  371            | expr . "+=" expr
  372            | expr . "-=" expr
  373            | expr . "*=" expr
  374            | expr . "/=" expr
  375            | expr . "%=" expr
  376            | expr . "<<=" expr
  377            | expr . ">>=" expr
  378            | expr . "<<<=" expr
  379            | expr . ">>>=" expr
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  591 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "+="                 shift, and go to state 868
    "-="                 shift, and go to state 869
    "/="                 shift, and go to state 870
    "*="                 shift, and go to state 871
    "%="                 shift, and go to state 872
    "&="                 shift, and go to state 873
    "|="                 shift, and go to state 874
    "^="                 shift, and go to state 875
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    "<<="                shift, and go to state 876
    ">>="                shift, and go to state 877
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "<-"                 shift, and go to state 878
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    ":="                 shift, and go to state 763
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "<<<="               shift, and go to state 879
    ">>>="               shift, and go to state 880
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    "&&="                shift, and go to state 881
    "||="                shift, and go to state 882
    "^^="                shift, and go to state 883
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1077
    '='                  shift, and go to state 884
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788
    '$'                  shift, and go to state 505
    '@'                  shift, and go to state 679

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 806

  709 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1078


State 807

  732 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1079


State 808

  735 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1080


State 809

  697 table_type_pair: type_declaration .
  698                | type_declaration . c_or_s type_declaration
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '|'                  shift, and go to state 419

    $default  reduce using rule 697 (table_type_pair)

    c_or_s  go to state 1081


State 810

  710 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 710 (type_declaration_no_options)


State 811

  738 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1082


State 812

  728 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1083


State 813

  685 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 685 (auto_type_declaration)


State 814

  687 bitfield_bits: "name" .

    $default  reduce using rule 687 (bitfield_bits)


State 815

  688 bitfield_bits: bitfield_bits . "end of expression" "name"
  694 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    "end of expression"  shift, and go to state 1084
    '>'                  shift, and go to state 1085


State 816

  742 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1086


State 817

  745 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 375

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1087


State 818

  749 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1088


State 819

  752 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 375

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1089


State 820

  756 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1090


State 821

  759 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 375

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1091


State 822

  559 tuple_type_list: tuple_type .

    $default  reduce using rule 559 (tuple_type_list)


State 823

  560 tuple_type_list: tuple_type_list . c_or_s tuple_type
  762 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '>'                  shift, and go to state 1092

    c_or_s  go to state 1093


State 824

  565 variant_type_list: variant_type .

    $default  reduce using rule 565 (variant_type_list)


State 825

  566 variant_type_list: variant_type_list . c_or_s variant_type
  765 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '>'                  shift, and go to state 1094

    c_or_s  go to state 1095


State 826

  686 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 686 (auto_type_declaration)


State 827

  713 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    type_declaration_no_options_list  go to state 1096
    name_in_namespace                 go to state 353
    basic_type_declaration            go to state 354
    structure_type_declaration        go to state 355
    auto_type_declaration             go to state 356
    bitfield_type_declaration         go to state 357
    type_declaration_no_options       go to state 358
    type_declaration                  go to state 1097


State 828

  711 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1098


State 829

  251 optional_expr_list: expr_list . optional_comma
  332 expr_list: expr_list . ',' expr

    ','  shift, and go to state 952

    ','       [reduce using rule 883 (optional_comma)]
    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1099


State 830

  714 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 714 (type_declaration_no_options)


State 831

  699 dim_list: '[' expr ']' .

    $default  reduce using rule 699 (dim_list)


State 832

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  700 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ']'    shift, and go to state 1100


State 833

  691 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 691 (bitfield_alias_bits)


State 834

  783 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 "begin of code block" $@86 bitfield_alias_bits $@87 "end of code block" .

    $default  reduce using rule 783 (bitfield_alias_declaration)


State 835

  558 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1101


State 836

  563 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 563 (tuple_alias_type_list)


State 837

  773 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 "begin of code block" $@78 tuple_alias_type_list $@79 "end of code block" .

    $default  reduce using rule 773 (tuple_alias_declaration)


State 838

  564 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1102


State 839

  569 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 569 (variant_alias_type_list)


State 840

  778 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 "begin of code block" $@82 variant_alias_type_list $@83 "end of code block" .

    $default  reduce using rule 778 (variant_alias_declaration)


State 841

  554 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 554 (function_argument_declaration)


State 842

  644 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1103
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 843

  645 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1104


State 844

  571 copy_or_move: "<-" .

    $default  reduce using rule 571 (copy_or_move)


State 845

  646 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  647                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1105


State 846

  570 copy_or_move: '=' .

    $default  reduce using rule 570 (copy_or_move)


State 847

  574 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  575                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1106


State 848

  573 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 573 (variable_declaration)


State 849

  576 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  577                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expr_call_pipe          go to state 519
    expression_keyword      go to state 522
    expr_pipe               go to state 1107
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_assign             go to state 647
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1108
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 850

  831 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1109


State 851

  834 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1110


State 852

   79 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 79 (expression_while_loop)


State 853

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1111
    ','   shift, and go to state 845


State 854

  276 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1112


State 855

  279 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  280         | "new" new_type_declaration '(' . expr_list ')'
  281         | "new" new_type_declaration '(' . make_struct_single ')'
  282         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "uninitialized"                   shift, and go to state 1113
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "$f"                              shift, and go to state 919
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 920
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 821 (use_initializer)

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1114
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_fields      go to state 967
    make_struct_single      go to state 1115
    use_initializer         go to state 1116
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 856

  325 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  326               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  327               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '<'                               shift, and go to state 1117
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1118
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 857

  329 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  330               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1119


State 858

  328 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1120
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 859

  324 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1121


State 860

  857 make_dim_decl: "array" "struct" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 855 ($@98)

    $@98  go to state 1122


State 861

  860 make_dim_decl: "array" "tuple" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 858 ($@100)

    $@100  go to state 1123


State 862

  863 make_dim_decl: "array" "variant" '<' . $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    $default  reduce using rule 861 ($@102)

    $@102  go to state 1124


State 863

  867 make_dim_decl: "array" '<' $@104 . type_declaration_no_options '>' $@105 '(' optional_expr_list ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1125


State 864

  332 expr_list: expr_list . ',' expr
  864 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 952

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1126


State 865

  291 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 291 (expression_return)


State 866

  288 expression_return_no_pipe: "return" "<-" expr_list .
  332 expr_list: expr_list . ',' expr

    ','  shift, and go to state 867

    $default  reduce using rule 288 (expression_return_no_pipe)


State 867

  332 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1127
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 868

  371 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1128
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 869

  372 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1129
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 870

  374 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1130
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 871

  373 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1131
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 872

  375 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1132
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 873

  365 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1133
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 874

  366 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1134
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 875

  367 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1135
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 876

  376 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1136
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 877

  377 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1137
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 878

  363 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1138
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 879

  378 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1139
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 880

  379 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1140
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 881

  368 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1141
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 882

  369 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1142
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 883

  370 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1143
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 884

  362 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1144
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 885

  297 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 287

    expression_block  go to state 1145


State 886

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  879 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  880                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 408
    "implicit"           shift, and go to state 409
    "explicit"           shift, and go to state 410
    "=="                 shift, and go to state 411
    "??"                 shift, and go to state 412
    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '?'                  shift, and go to state 413
    '&'                  shift, and go to state 414
    '>'                  shift, and go to state 1146
    '-'                  shift, and go to state 415
    '['                  shift, and go to state 416
    '#'                  shift, and go to state 417

    c_or_s    go to state 1147
    dim_list  go to state 418


State 887

  878 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1148


State 888

  255 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  875 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 947

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1149


State 889

  273 expression_delete: "delete" "explicit" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 273 (expression_delete)


State 890

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  481     | "deref" '(' expr . ')'
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1150


State 891

   80 expression_with: "with" expr expression_block .

    $default  reduce using rule 80 (expression_with)


State 892

   82 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 81 ($@5)

    $@5  go to state 1151


State 893

  315 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1152


State 894

  318 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1153


State 895

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  482     | "addr" '(' expr . ')'
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1154


State 896

  321 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1155


State 897

   55 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 55 (expression_label)


State 898

   56 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 56 (expression_goto)


State 899

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  513     | "unsafe" '(' expr . ')'
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1156


State 900

  871 make_dim_decl: "fixed_array" '<' $@106 . type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1157


State 901

  332 expr_list: expr_list . ',' expr
  868 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 952

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1158


State 902

  840 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95 use_initializer

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1159


State 903

  849 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1160


State 904

  332 expr_list: expr_list . ',' expr
  846 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 952

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1161


State 905

  837 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_variant_dim ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1162


State 906

  224 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  483 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  484     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1163
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 907

  296 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 296 (expression_yield)


State 908

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  293 expression_yield_no_pipe: "yield" "<-" expr .
  361 expr_assign: expr .
  362            | expr . '=' expr
  363            | expr . "<-" expr
  364            | expr . ":=" expr
  365            | expr . "&=" expr
  366            | expr . "|=" expr
  367            | expr . "^=" expr
  368            | expr . "&&=" expr
  369            | expr . "||=" expr
  370            | expr . "^^=" expr
  371            | expr . "+=" expr
  372            | expr . "-=" expr
  373            | expr . "*=" expr
  374            | expr . "/=" expr
  375            | expr . "%=" expr
  376            | expr . "<<=" expr
  377            | expr . ">>=" expr
  378            | expr . "<<<=" expr
  379            | expr . ">>>=" expr
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 736
    "as"    shift, and go to state 737
    "+="    shift, and go to state 868
    "-="    shift, and go to state 869
    "/="    shift, and go to state 870
    "*="    shift, and go to state 871
    "%="    shift, and go to state 872
    "&="    shift, and go to state 873
    "|="    shift, and go to state 874
    "^="    shift, and go to state 875
    "<<"    shift, and go to state 746
    ">>"    shift, and go to state 747
    "++"    shift, and go to state 748
    "--"    shift, and go to state 749
    "<="    shift, and go to state 750
    "<<="   shift, and go to state 876
    ">>="   shift, and go to state 877
    ">="    shift, and go to state 753
    "=="    shift, and go to state 754
    "!="    shift, and go to state 755
    "->"    shift, and go to state 756
    "<-"    shift, and go to state 878
    "??"    shift, and go to state 758
    "?."    shift, and go to state 759
    "?["    shift, and go to state 760
    "<|"    shift, and go to state 761
    "|>"    shift, and go to state 762
    ":="    shift, and go to state 763
    "<<<"   shift, and go to state 764
    ">>>"   shift, and go to state 765
    "<<<="  shift, and go to state 879
    ">>>="  shift, and go to state 880
    "&&"    shift, and go to state 768
    "||"    shift, and go to state 769
    "^^"    shift, and go to state 770
    "&&="   shift, and go to state 881
    "||="   shift, and go to state 882
    "^^="   shift, and go to state 883
    ".."    shift, and go to state 774
    '='     shift, and go to state 884
    '?'     shift, and go to state 776
    '|'     shift, and go to state 777
    '^'     shift, and go to state 778
    '&'     shift, and go to state 779
    '<'     shift, and go to state 780
    '>'     shift, and go to state 781
    '-'     shift, and go to state 782
    '+'     shift, and go to state 783
    '*'     shift, and go to state 784
    '/'     shift, and go to state 785
    '%'     shift, and go to state 786
    '.'     shift, and go to state 787
    '['     shift, and go to state 788
    '$'     shift, and go to state 505
    '@'     shift, and go to state 679

    " <|"     reduce using rule 361 (expr_assign)
    $default  reduce using rule 293 (expression_yield_no_pipe)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 909

  338 block_or_lambda: '@' '@' .

    $default  reduce using rule 338 (block_or_lambda)


State 910

  350 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 973
    "[["       shift, and go to state 974

    $default  reduce using rule 346 (optional_capture_list)

    optional_capture_list  go to state 1164


State 911

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  515 expr_mtag: "$$" '(' expr . ')'
  523          | expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1165


State 912

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  516 expr_mtag: "$i" '(' expr . ')'
  523          | expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1166


State 913

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  517 expr_mtag: "$v" '(' expr . ')'
  523          | expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1167


State 914

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  518 expr_mtag: "$b" '(' expr . ')'
  523          | expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1168


State 915

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  519 expr_mtag: "$a" '(' expr . ')'
  523          | expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1169


State 916

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  521 expr_mtag: "$c" '(' expr . ')' '(' ')'
  522          | "$c" '(' expr . ')' '(' expr_list ')'
  523          | expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1170


State 917

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  887 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1171
    ','   shift, and go to state 845


State 918

  808 optional_block: "where" . expr_block

    "begin of code block"  shift, and go to state 287
    '$'                    shift, and go to state 505
    '@'                    shift, and go to state 679

    expression_block  go to state 680
    block_or_lambda   go to state 681
    expr_block        go to state 1172


State 919

  793 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  794                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1173


State 920

  269 name_in_namespace: "name" .
  270                  | "name" . "::" "name"
  789 make_struct_fields: "name" . copy_or_move expr
  790                   | "name" . ":=" expr

    "<-"  shift, and go to state 844
    ":="  shift, and go to state 1174
    "::"  shift, and go to state 98
    '='   shift, and go to state 846

    $default  reduce using rule 269 (name_in_namespace)

    copy_or_move  go to state 1175


State 921

  444 expr: '-' . expr
  714 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  717                            | type_declaration_no_options '-' . "const"
  719                            | type_declaration_no_options '-' . '&'
  722                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "const"                           shift, and go to state 599
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '&'                               shift, and go to state 600
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 1176
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506
    '#'                               shift, and go to state 602

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 707
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 922

  699 dim_list: '[' . expr ']'
  706 type_declaration_no_options: type_declaration_no_options '[' . ']'
  852 make_dim_decl: '[' . expr_list optional_comma ']'
  885 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "for"                             shift, and go to state 712
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "iterator"                        shift, and go to state 713
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    ']'                               shift, and go to state 603
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 714
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1177
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 923

  471 expr: '(' . expr_list optional_comma ')'
  825 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  826                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 1178
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 716
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 924

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  841 make_tuple: expr .
  842           | expr . "=>" expr

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "=>"   shift, and go to state 1179
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 841 (make_tuple)


State 925

  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  799 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1180

    $default  reduce using rule 799 (make_struct_dim)


State 926

  800 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  823 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 918
    "end of expression"  shift, and go to state 1181

    $default  reduce using rule 807 (optional_block)

    optional_block  go to state 1182


State 927

  824 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1183
    ",]]"  shift, and go to state 1184
    ']'    shift, and go to state 1185

    optional_trailing_delim_sqr_sqr  go to state 1186


State 928

  843 make_tuple: make_tuple . ',' expr
  850 make_dim: make_tuple .

    ','  shift, and go to state 1187

    $default  reduce using rule 850 (make_dim)


State 929

  851 make_dim: make_dim . "end of expression" make_tuple
  853 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1188
    ";]]"                shift, and go to state 1189
    ']'                  shift, and go to state 1190

    optional_trailing_semicolon_sqr_sqr  go to state 1191


State 930

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  888 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1192
    ','   shift, and go to state 845


State 931

  471 expr: '(' . expr_list optional_comma ')'
  828 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 1193
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 716
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 932

  800 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  827 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 918
    "end of expression"  shift, and go to state 1181

    $default  reduce using rule 807 (optional_block)

    optional_block  go to state 1194


State 933

  851 make_dim: make_dim . "end of expression" make_tuple
  854 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1195
    "end of expression"  shift, and go to state 1188
    ";}]"                shift, and go to state 1196

    optional_trailing_semicolon_cur_sqr  go to state 1197


State 934

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  890 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1198
    ','   shift, and go to state 845


State 935

  844 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1199
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 936

  809 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1200


State 937

  873 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 696
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_map_tuple          go to state 1201
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 938

  810 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 810 (optional_trailing_semicolon_cur_cur)


State 939

  877 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 877 (make_table_decl)


State 940

  260 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    type_declaration_no_options_list  go to state 1202
    name_in_namespace                 go to state 353
    basic_type_declaration            go to state 354
    structure_type_declaration        go to state 355
    auto_type_declaration             go to state 356
    bitfield_type_declaration         go to state 357
    type_declaration_no_options       go to state 358
    type_declaration                  go to state 1097


State 941

  249 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 249 (expr_keyword)


State 942

  263 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    type_declaration_no_options_list  go to state 1203
    name_in_namespace                 go to state 353
    basic_type_declaration            go to state 354
    structure_type_declaration        go to state 355
    auto_type_declaration             go to state 356
    bitfield_type_declaration         go to state 357
    type_declaration_no_options       go to state 358
    type_declaration                  go to state 1097


State 943

   32 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 32 (string_builder)


State 944

   31 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1204
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 945

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   30 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 30 (string_builder_body)


State 946

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  889 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1205
    ','   shift, and go to state 845


State 947

  875 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  884 optional_comma: ',' .

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 884 (optional_comma)

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 696
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_map_tuple          go to state 1206
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 948

  876 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1207


State 949

  221 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 246 (expressions)

    expressions  go to state 1208


State 950

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  885 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1209
    ','   shift, and go to state 845


State 951

  886 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_name_with_pos_list  go to state 1210


State 952

  332 expr_list: expr_list ',' . expr
  884 optional_comma: ',' .

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 884 (optional_comma)

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1127
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 953

  852 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1211


State 954

  471 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1212


State 955

  406 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1213


State 956

  530 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1214


State 957

  410 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  413               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 411 ($@24)
    '>'       reduce using rule 411 ($@24)
    '('       reduce using rule 411 ($@24)
    $default  reduce using rule 408 ($@22)

    $@22  go to state 1215
    $@24  go to state 1216


State 958

  405 func_addr_name: name_in_namespace .

    $default  reduce using rule 405 (func_addr_name)


State 959

  407 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 407 (func_addr_expr)


State 960

   73 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1217
    "elif"         shift, and go to state 1218
    "static_elif"  shift, and go to state 1219

    $default  reduce using rule 60 (expression_else)

    elif_or_static_elif  go to state 1220
    expression_else      go to state 1221


State 961

   75 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1222
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 962

  353 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 121 (optional_annotation_list)

    optional_annotation_list  go to state 1223


State 963

  425 expr_call: name_in_namespace '(' "uninitialized" . ')'
  427          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224
    ')'     shift, and go to state 1225

    make_struct_fields  go to state 967
    make_struct_single  go to state 1226


State 964

  401 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  852 make_dim_decl: '[' . expr_list optional_comma ']'
  885 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "for"                             shift, and go to state 712
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "iterator"                        shift, and go to state 713
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "$f"                              shift, and go to state 919
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 920
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 714
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_fields      go to state 1227
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 965

  424 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 424 (expr_call)


State 966

  332 expr_list: expr_list . ',' expr
  402 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  428 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1228
    ')'  shift, and go to state 1229


State 967

  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  798 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1180

    $default  reduce using rule 798 (make_struct_single)


State 968

  426 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1230


State 969

  307 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1231

    tuple_expansion  go to state 1232


State 970

  308 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  310                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1231

    tuple_expansion  go to state 1233


State 971

  312 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 312 (expression_let)


State 972

  311 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 311 (expression_let)


State 973

  348 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1234


State 974

  347 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1235
    ":="    shift, and go to state 1236
    "name"  shift, and go to state 1237
    '='     shift, and go to state 1238
    '&'     shift, and go to state 1239

    capture_entry  go to state 1240
    capture_list   go to state 1241


State 975

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 285

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1242


State 976

  264 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 264 (expr_pipe)


State 977

  489 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1243


State 978

  529 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1244


State 979

  491 expr: expr "is" "name" .

    $default  reduce using rule 491 (expr)


State 980

  490 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 490 (expr)


State 981

  495 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1245


State 982

  527 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1246


State 983

  492 expr: expr "as" "name" .

    $default  reduce using rule 492 (expr)


State 984

  496 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 496 (expr)


State 985

  382 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 287
    '$'                    shift, and go to state 505
    '@'                    shift, and go to state 679

    expression_block  go to state 680
    block_or_lambda   go to state 681
    expr_block        go to state 1247


State 986

  380 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 287
    '$'                    shift, and go to state 505
    '@'                    shift, and go to state 679

    expression_block  go to state 680
    block_or_lambda   go to state 681
    expr_block        go to state 1248


State 987

  381 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 287
    '$'                    shift, and go to state 505
    '@'                    shift, and go to state 679

    expression_block  go to state 680
    block_or_lambda   go to state 681
    expr_block        go to state 1249


State 988

  383 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 383 (expr_assign_pipe_right)


State 989

  392 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 392 (expr_assign_pipe)


State 990

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  371 expr_assign: expr "+=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 371 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 991

  393 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 393 (expr_assign_pipe)


State 992

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  372 expr_assign: expr "-=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 372 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 993

  395 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 395 (expr_assign_pipe)


State 994

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  374 expr_assign: expr "/=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 374 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 995

  394 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 394 (expr_assign_pipe)


State 996

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  373 expr_assign: expr "*=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 373 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 997

  396 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 396 (expr_assign_pipe)


State 998

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  375 expr_assign: expr "%=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 375 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 999

  386 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 386 (expr_assign_pipe)


State 1000

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  365 expr_assign: expr "&=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 365 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1001

  387 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 387 (expr_assign_pipe)


State 1002

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  366 expr_assign: expr "|=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 366 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1003

  388 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 388 (expr_assign_pipe)


State 1004

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  367 expr_assign: expr "^=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 367 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1005

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  445     | expr "<<" expr .
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '-'   shift, and go to state 782
    '+'   shift, and go to state 783
    '*'   shift, and go to state 784
    '/'   shift, and go to state 785
    '%'   shift, and go to state 786
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 445 (expr)


State 1006

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  446     | expr ">>" expr .
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '-'   shift, and go to state 782
    '+'   shift, and go to state 783
    '*'   shift, and go to state 784
    '/'   shift, and go to state 785
    '%'   shift, and go to state 786
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 446 (expr)


State 1007

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  458     | expr "<=" expr .
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 458 (expr)


State 1008

  397 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 397 (expr_assign_pipe)


State 1009

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  376 expr_assign: expr "<<=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 376 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1010

  398 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 398 (expr_assign_pipe)


State 1011

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  377 expr_assign: expr ">>=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 377 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1012

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  459     | expr ">=" expr .
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 459 (expr)


State 1013

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  456     | expr "==" expr .
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 456 (expr)


State 1014

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  457     | expr "!=" expr .
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 457 (expr)


State 1015

  403 expr_method_call: expr "->" "name" . '(' ')'
  404                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1250


State 1016

  385 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 385 (expr_assign_pipe)


State 1017

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  363 expr_assign: expr "<-" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 363 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1018

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  485     | expr "??" expr .
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 485 (expr)


State 1019

  524 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1251


State 1020

  476 expr: expr "?." "name" .

    $default  reduce using rule 476 (expr)


State 1021

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  474     | expr "?[" expr . ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ']'    shift, and go to state 1252


State 1022

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  509     | expr "<|" expr .
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 756
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 509 (expr)


State 1023

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  510     | expr "|>" expr .
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 756
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 510 (expr)


State 1024

  429 expr_call: basic_type_declaration . '(' ')'
  430          | basic_type_declaration . '(' expr_list ')'
  511 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 790

    $default  reduce using rule 511 (expr)


State 1025

  364 expr_assign: expr ":=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 364 (expr_assign)


State 1026

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  447     | expr "<<<" expr .
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '-'   shift, and go to state 782
    '+'   shift, and go to state 783
    '*'   shift, and go to state 784
    '/'   shift, and go to state 785
    '%'   shift, and go to state 786
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 447 (expr)


State 1027

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  448     | expr ">>>" expr .
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '-'   shift, and go to state 782
    '+'   shift, and go to state 783
    '*'   shift, and go to state 784
    '/'   shift, and go to state 785
    '%'   shift, and go to state 786
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 448 (expr)


State 1028

  399 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 399 (expr_assign_pipe)


State 1029

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr "<<<=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 378 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1030

  400 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 400 (expr_assign_pipe)


State 1031

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr ">>>=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 379 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1032

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  463     | expr "&&" expr .
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 463 (expr)


State 1033

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  464     | expr "||" expr .
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "^^"   shift, and go to state 770
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 464 (expr)


State 1034

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  465     | expr "^^" expr .
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 465 (expr)


State 1035

  389 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 389 (expr_assign_pipe)


State 1036

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  368 expr_assign: expr "&&=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 368 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1037

  390 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 390 (expr_assign_pipe)


State 1038

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  369 expr_assign: expr "||=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 369 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1039

  391 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 391 (expr_assign_pipe)


State 1040

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  370 expr_assign: expr "^^=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 370 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1041

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  466     | expr ".." expr .
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    ".."  error (nonassociative)

    $default  reduce using rule 466 (expr)


State 1042

  384 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 384 (expr_assign_pipe)


State 1043

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  362 expr_assign: expr '=' expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    '$'    shift, and go to state 505
    '@'    shift, and go to state 679

    $default  reduce using rule 362 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1044

  497 expr: expr '?' "as" . "name"
  500     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  501     | expr '?' "as" . basic_type_declaration
  528 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1253
    "bool"      shift, and go to state 318
    "void"      shift, and go to state 319
    "string"    shift, and go to state 320
    "int"       shift, and go to state 322
    "int2"      shift, and go to state 323
    "int3"      shift, and go to state 324
    "int4"      shift, and go to state 325
    "uint"      shift, and go to state 326
    "bitfield"  shift, and go to state 465
    "uint2"     shift, and go to state 328
    "uint3"     shift, and go to state 329
    "uint4"     shift, and go to state 330
    "float"     shift, and go to state 331
    "float2"    shift, and go to state 332
    "float3"    shift, and go to state 333
    "float4"    shift, and go to state 334
    "range"     shift, and go to state 335
    "urange"    shift, and go to state 336
    "range64"   shift, and go to state 337
    "urange64"  shift, and go to state 338
    "int64"     shift, and go to state 340
    "uint64"    shift, and go to state 341
    "double"    shift, and go to state 342
    "int8"      shift, and go to state 345
    "uint8"     shift, and go to state 346
    "int16"     shift, and go to state 347
    "uint16"    shift, and go to state 348
    "$f"        shift, and go to state 1254
    "name"      shift, and go to state 1255

    basic_type_declaration  go to state 1256


State 1045

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  486     | expr '?' expr . ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    ':'    shift, and go to state 1257
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788


State 1046

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  461     | expr '|' expr .
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 461 (expr)


State 1047

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  462     | expr '^' expr .
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 462 (expr)


State 1048

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  460     | expr '&' expr .
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 460 (expr)


State 1049

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  454     | expr '<' expr .
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 454 (expr)


State 1050

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  455     | expr '>' expr .
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 455 (expr)


State 1051

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  450     | expr '-' expr .
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '*'   shift, and go to state 784
    '/'   shift, and go to state 785
    '%'   shift, and go to state 786
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 450 (expr)


State 1052

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  449     | expr '+' expr .
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '*'   shift, and go to state 784
    '/'   shift, and go to state 785
    '%'   shift, and go to state 786
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 449 (expr)


State 1053

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  451     | expr '*' expr .
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 451 (expr)


State 1054

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  452     | expr '/' expr .
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 452 (expr)


State 1055

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  453     | expr '%' expr .
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 736
    "as"  shift, and go to state 737
    "++"  shift, and go to state 748
    "--"  shift, and go to state 749
    "->"  shift, and go to state 756
    "??"  shift, and go to state 758
    "?."  shift, and go to state 759
    "?["  shift, and go to state 760
    "<|"  shift, and go to state 761
    "|>"  shift, and go to state 762
    '.'   shift, and go to state 787
    '['   shift, and go to state 788

    $default  reduce using rule 453 (expr)


State 1056

  477 expr: expr '.' "?." . "name"
  526 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1258
    "name"  shift, and go to state 1259


State 1057

  475 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1260
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1058

  523 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1261


State 1059

  414 expr_field: expr '.' "name" .
  416           | expr '.' "name" . '(' ')'
  417           | expr '.' "name" . '(' expr_list ')'
  418           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1262

    '('       [reduce using rule 414 (expr_field)]
    $default  reduce using rule 414 (expr_field)


State 1060

  415 expr_field: expr '.' '.' . "name"
  525 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1263
    "name"  shift, and go to state 1264


State 1061

  473 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1265
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1062

  423 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1266


State 1063

  419 expr_field: expr '.' basic_type_declaration . '(' ')'
  420           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1267


State 1064

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  472     | expr '[' expr . ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ']'    shift, and go to state 1268


State 1065

  429 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 429 (expr_call)


State 1066

  332 expr_list: expr_list . ',' expr
  430 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 867
    ')'  shift, and go to state 1269


State 1067

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  607 enum_list: enum_list "name" '=' expr . "end of expression"

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1270
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788


State 1068

  627 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 . "end of code block"

    "end of code block"  shift, and go to state 1271


State 1069

  120 annotation_list: annotation_list . ',' annotation_declaration
  122 optional_annotation_list: '[' annotation_list . ']'
  552 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' "end of expression"

    ','  shift, and go to state 107
    ']'  shift, and go to state 1272


State 1070

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression"
  551                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1273
    "private"  shift, and go to state 1274

    $default  reduce using rule 539 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1275


State 1071

  544 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1276

    $default  reduce using rule 542 (optional_static_member_variable)

    optional_static_member_variable  go to state 1277


State 1072

  547 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1278


State 1073

  483 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  484     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1279
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1074

  587 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 587 (let_variable_name_with_pos_list)


State 1075

  590 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 590 (let_variable_declaration)


State 1076

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr .
  362            | expr . '=' expr
  363            | expr . "<-" expr
  364            | expr . ":=" expr
  365            | expr . "&=" expr
  366            | expr . "|=" expr
  367            | expr . "^=" expr
  368            | expr . "&&=" expr
  369            | expr . "||=" expr
  370            | expr . "^^=" expr
  371            | expr . "+=" expr
  372            | expr . "-=" expr
  373            | expr . "*=" expr
  374            | expr . "/=" expr
  375            | expr . "%=" expr
  376            | expr . "<<=" expr
  377            | expr . ">>=" expr
  378            | expr . "<<<=" expr
  379            | expr . ">>>=" expr
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  589 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "+="                 shift, and go to state 868
    "-="                 shift, and go to state 869
    "/="                 shift, and go to state 870
    "*="                 shift, and go to state 871
    "%="                 shift, and go to state 872
    "&="                 shift, and go to state 873
    "|="                 shift, and go to state 874
    "^="                 shift, and go to state 875
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    "<<="                shift, and go to state 876
    ">>="                shift, and go to state 877
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "<-"                 shift, and go to state 878
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    ":="                 shift, and go to state 763
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "<<<="               shift, and go to state 879
    ">>>="               shift, and go to state 880
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    "&&="                shift, and go to state 881
    "||="                shift, and go to state 882
    "^^="                shift, and go to state 883
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1280
    '='                  shift, and go to state 884
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788
    '$'                  shift, and go to state 505
    '@'                  shift, and go to state 679

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1077

  591 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 591 (let_variable_declaration)


State 1078

  709 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 708 ($@50)

    $@50  go to state 1281


State 1079

  732 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 731 ($@55)

    $@55  go to state 1282


State 1080

  735 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 734 ($@57)

    $@57  go to state 1283


State 1081

  698 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1284


State 1082

  738 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 737 ($@59)

    $@59  go to state 1285


State 1083

  728 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 727 ($@53)

    $@53  go to state 1286


State 1084

  688 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1287


State 1085

  694 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 693 ($@48)

    $@48  go to state 1288


State 1086

  742 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 741 ($@61)

    $@61  go to state 1289


State 1087

  745 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1290


State 1088

  749 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 748 ($@65)

    $@65  go to state 1291


State 1089

  752 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1292


State 1090

  756 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 755 ($@69)

    $@69  go to state 1293


State 1091

  759 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1294


State 1092

  762 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 761 ($@73)

    $@73  go to state 1295


State 1093

  560 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 611
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    tuple_type                   go to state 1296
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 616


State 1094

  765 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 764 ($@75)

    $@75  go to state 1297


State 1095

  566 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 618

    variant_type  go to state 1298


State 1096

  257 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  713 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '>'                  shift, and go to state 1299

    c_or_s  go to state 1300


State 1097

  256 type_declaration_no_options_list: type_declaration .
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419

    $default  reduce using rule 256 (type_declaration_no_options_list)


State 1098

  711 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 711 (type_declaration_no_options)


State 1099

  251 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 251 (optional_expr_list)


State 1100

  700 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 700 (dim_list)


State 1101

  558 tuple_type: "name" ':' type_declaration .
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419

    $default  reduce using rule 558 (tuple_type)


State 1102

  564 variant_type: "name" ':' type_declaration .
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419

    $default  reduce using rule 564 (variant_type)


State 1103

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  644 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1301


State 1104

  645 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 645 (variable_name_with_pos_list)


State 1105

  646 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  647                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1302

    $default  reduce using rule 646 (variable_name_with_pos_list)


State 1106

  574 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  575                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 844
    '='   shift, and go to state 846
    '|'   shift, and go to state 419

    $default  reduce using rule 574 (variable_declaration)

    copy_or_move  go to state 1303


State 1107

  577 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 577 (variable_declaration)


State 1108

  222 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr .
  362            | expr . '=' expr
  363            | expr . "<-" expr
  364            | expr . ":=" expr
  365            | expr . "&=" expr
  366            | expr . "|=" expr
  367            | expr . "^=" expr
  368            | expr . "&&=" expr
  369            | expr . "||=" expr
  370            | expr . "^^=" expr
  371            | expr . "+=" expr
  372            | expr . "-=" expr
  373            | expr . "*=" expr
  374            | expr . "/=" expr
  375            | expr . "%=" expr
  376            | expr . "<<=" expr
  377            | expr . ">>=" expr
  378            | expr . "<<<=" expr
  379            | expr . ">>>=" expr
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  576 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 736
    "as"    shift, and go to state 737
    "+="    shift, and go to state 868
    "-="    shift, and go to state 869
    "/="    shift, and go to state 870
    "*="    shift, and go to state 871
    "%="    shift, and go to state 872
    "&="    shift, and go to state 873
    "|="    shift, and go to state 874
    "^="    shift, and go to state 875
    "<<"    shift, and go to state 746
    ">>"    shift, and go to state 747
    "++"    shift, and go to state 748
    "--"    shift, and go to state 749
    "<="    shift, and go to state 750
    "<<="   shift, and go to state 876
    ">>="   shift, and go to state 877
    ">="    shift, and go to state 753
    "=="    shift, and go to state 754
    "!="    shift, and go to state 755
    "->"    shift, and go to state 756
    "<-"    shift, and go to state 878
    "??"    shift, and go to state 758
    "?."    shift, and go to state 759
    "?["    shift, and go to state 760
    "<|"    shift, and go to state 761
    "|>"    shift, and go to state 762
    ":="    shift, and go to state 763
    "<<<"   shift, and go to state 764
    ">>>"   shift, and go to state 765
    "<<<="  shift, and go to state 879
    ">>>="  shift, and go to state 880
    "&&"    shift, and go to state 768
    "||"    shift, and go to state 769
    "^^"    shift, and go to state 770
    "&&="   shift, and go to state 881
    "||="   shift, and go to state 882
    "^^="   shift, and go to state 883
    ".."    shift, and go to state 774
    '='     shift, and go to state 884
    '?'     shift, and go to state 776
    '|'     shift, and go to state 777
    '^'     shift, and go to state 778
    '&'     shift, and go to state 779
    '<'     shift, and go to state 780
    '>'     shift, and go to state 781
    '-'     shift, and go to state 782
    '+'     shift, and go to state 783
    '*'     shift, and go to state 784
    '/'     shift, and go to state 785
    '%'     shift, and go to state 786
    '.'     shift, and go to state 787
    '['     shift, and go to state 788
    '$'     shift, and go to state 505
    '@'     shift, and go to state 679

    " <|"     reduce using rule 361 (expr_assign)
    $default  reduce using rule 576 (variable_declaration)

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 789


State 1109

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  831 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1304
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1110

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  834 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1305
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1111

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1306
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1112

  276 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1307


State 1113

  282 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  822 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224

    $default  reduce using rule 822 (use_initializer)

    make_struct_fields  go to state 967
    make_struct_single  go to state 1308


State 1114

  280 expr_new: "new" new_type_declaration '(' expr_list . ')'
  332 expr_list: expr_list . ',' expr

    ','  shift, and go to state 867
    ')'  shift, and go to state 1309


State 1115

  281 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1310


State 1116

  279 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1311


State 1117

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  327               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1312


State 1118

  325 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1313


State 1119

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  330               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1314
    '>'                  shift, and go to state 1315


State 1120

  328 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1316


State 1121

  324 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1317


State 1122

  857 make_dim_decl: "array" "struct" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1318


State 1123

  860 make_dim_decl: "array" "tuple" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1319


State 1124

  863 make_dim_decl: "array" "variant" '<' $@102 . type_declaration_no_options '>' $@103 '(' make_variant_dim ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1320


State 1125

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  867 make_dim_decl: "array" '<' $@104 type_declaration_no_options . '>' $@105 '(' optional_expr_list ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1321
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1126

  864 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1322


State 1127

  332 expr_list: expr_list ',' expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 332 (expr_list)


State 1128

  371 expr_assign: expr "+=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 371 (expr_assign)


State 1129

  372 expr_assign: expr "-=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 372 (expr_assign)


State 1130

  374 expr_assign: expr "/=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 374 (expr_assign)


State 1131

  373 expr_assign: expr "*=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 373 (expr_assign)


State 1132

  375 expr_assign: expr "%=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 375 (expr_assign)


State 1133

  365 expr_assign: expr "&=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 365 (expr_assign)


State 1134

  366 expr_assign: expr "|=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 366 (expr_assign)


State 1135

  367 expr_assign: expr "^=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 367 (expr_assign)


State 1136

  376 expr_assign: expr "<<=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 376 (expr_assign)


State 1137

  377 expr_assign: expr ">>=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 377 (expr_assign)


State 1138

  363 expr_assign: expr "<-" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 363 (expr_assign)


State 1139

  378 expr_assign: expr "<<<=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 378 (expr_assign)


State 1140

  379 expr_assign: expr ">>>=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 379 (expr_assign)


State 1141

  368 expr_assign: expr "&&=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 368 (expr_assign)


State 1142

  369 expr_assign: expr "||=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 369 (expr_assign)


State 1143

  370 expr_assign: expr "^^=" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 370 (expr_assign)


State 1144

  362 expr_assign: expr '=' expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 362 (expr_assign)


State 1145

  297 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 297 (expression_try_catch)


State 1146

  879 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1323


State 1147

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1324


State 1148

  878 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 878 (make_table_decl)


State 1149

  255 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 255 (optional_expr_map_tuple_list)


State 1150

  481 expr: "deref" '(' expr ')' .

    $default  reduce using rule 481 (expr)


State 1151

   82 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1325
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1152

  315 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1326
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1153

  318 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1327
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1154

  482 expr: "addr" '(' expr ')' .

    $default  reduce using rule 482 (expr)


State 1155

  321 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1328
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1156

  513 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 513 (expr)


State 1157

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  871 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options . '>' $@107 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1329
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1158

  868 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1330


State 1159

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  840 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95 use_initializer

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1331
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1160

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  849 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1332
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1161

  846 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1333


State 1162

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  837 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_variant_dim ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1334
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1163

  224 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  483 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  484     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 973
    "[["       shift, and go to state 974

    $default  reduce using rule 346 (optional_capture_list)

    optional_capture_list  go to state 1335


State 1164

  350 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 285

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1336


State 1165

  515 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1166

  516 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 1167

  517 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 1168

  518 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 1169

  519 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 1170

  521 expr_mtag: "$c" '(' expr ')' . '(' ')'
  522          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1337


State 1171

  887 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1338
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1172

  808 optional_block: "where" expr_block .

    $default  reduce using rule 808 (optional_block)


State 1173

  793 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  794                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1339
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1174

  790 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1340
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1175

  789 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1341
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1176

  714 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  852 make_dim_decl: '[' . expr_list optional_comma ']'
  885 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "for"                             shift, and go to state 712
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "iterator"                        shift, and go to state 713
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    ']'                               shift, and go to state 830
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 714
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1177

  331 expr_list: expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  699 dim_list: '[' expr . ']'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ']'    shift, and go to state 831

    ']'       [reduce using rule 331 (expr_list)]
    $default  reduce using rule 331 (expr_list)


State 1178

  825 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  826                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 918
    "$f"     shift, and go to state 919
    "name"   shift, and go to state 1224

    $default  reduce using rule 807 (optional_block)

    make_struct_fields  go to state 925
    make_struct_dim     go to state 1342
    optional_block      go to state 1343


State 1179

  842 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1344
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1180

  791 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  792                   | make_struct_fields ',' . "name" ":=" expr
  795                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1345
    "name"  shift, and go to state 1346


State 1181

  800 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224

    make_struct_fields  go to state 1347


State 1182

  823 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1183
    ",]]"  shift, and go to state 1184
    ']'    shift, and go to state 1185

    optional_trailing_delim_sqr_sqr  go to state 1348


State 1183

  816 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 816 (optional_trailing_delim_sqr_sqr)


State 1184

  817 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 817 (optional_trailing_delim_sqr_sqr)


State 1185

  815 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1349


State 1186

  824 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 824 (make_struct_decl)


State 1187

  843 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1350
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1188

  851 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 924
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple              go to state 1351
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1189

  814 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 814 (optional_trailing_semicolon_sqr_sqr)


State 1190

  813 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1352


State 1191

  853 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 853 (make_dim_decl)


State 1192

  888 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1353
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1193

  828 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224

    make_struct_fields  go to state 925
    make_struct_dim     go to state 1354


State 1194

  827 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1355
    ";}]"                shift, and go to state 1356
    ",}]"                shift, and go to state 1357

    optional_trailing_delim_cur_sqr  go to state 1358


State 1195

  811 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1359


State 1196

  812 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 812 (optional_trailing_semicolon_cur_sqr)


State 1197

  854 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 854 (make_dim_decl)


State 1198

  890 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1360
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1199

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  844 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 844 (make_map_tuple)


State 1200

  809 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 809 (optional_trailing_semicolon_cur_cur)


State 1201

  873 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 873 (make_table)


State 1202

  257 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  260 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '>'                  shift, and go to state 1361

    c_or_s  go to state 1300


State 1203

  257 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  263 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '>'                  shift, and go to state 1362

    c_or_s  go to state 1300


State 1204

   31 string_builder_body: string_builder_body "{" expr . "}"
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    "}"    shift, and go to state 1363
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788


State 1205

  889 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1364
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1206

  875 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 875 (expr_map_tuple_list)


State 1207

  876 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 876 (make_table_decl)


State 1208

  221 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  247 expressions: expressions . expression_any
  248            | expressions . error

    error                             shift, and go to state 432
    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 435
    "if"                              shift, and go to state 436
    "static_if"                       shift, and go to state 437
    "for"                             shift, and go to state 438
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "return"                          shift, and go to state 445
    "null"                            shift, and go to state 446
    "break"                           shift, and go to state 447
    "try"                             shift, and go to state 448
    "table"                           shift, and go to state 449
    "delete"                          shift, and go to state 450
    "deref"                           shift, and go to state 451
    "with"                            shift, and go to state 452
    "assume"                          shift, and go to state 453
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 456
    "continue"                        shift, and go to state 457
    "pass"                            shift, and go to state 458
    "reinterpret"                     shift, and go to state 459
    "label"                           shift, and go to state 460
    "goto"                            shift, and go to state 461
    "unsafe"                          shift, and go to state 462
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 468
    "yield"                           shift, and go to state 469
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "$ <|"                            shift, and go to state 472
    "@ <|"                            shift, and go to state 473
    "@@ <|"                           shift, and go to state 474
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 492
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    "end of code block"               shift, and go to state 1365
    "end of expression"               shift, and go to state 497
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder             go to state 507
    expr_reader                go to state 508
    expression_label           go to state 509
    expression_goto            go to state 510
    if_or_static_if            go to state 511
    expression_if_one_liner    go to state 512
    expression_if_then_else    go to state 513
    expression_for_loop        go to state 514
    expression_unsafe          go to state 515
    expression_while_loop      go to state 516
    expression_with            go to state 517
    expression_with_alias      go to state 518
    expr_call_pipe             go to state 519
    expression_any             go to state 520
    expr_keyword               go to state 521
    expression_keyword         go to state 522
    expr_pipe                  go to state 523
    name_in_namespace          go to state 524
    expression_delete          go to state 525
    expr_new                   go to state 526
    expression_break           go to state 527
    expression_continue        go to state 528
    expression_return_no_pipe  go to state 529
    expression_return          go to state 530
    expression_yield_no_pipe   go to state 531
    expression_yield           go to state 532
    expression_try_catch       go to state 533
    kwd_let                    go to state 534
    expression_let             go to state 535
    expr_cast                  go to state 536
    expr_type_decl             go to state 537
    expr_type_info             go to state 538
    block_or_lambda            go to state 539
    expr_full_block            go to state 540
    expr_numeric_const         go to state 541
    expr_assign                go to state 542
    expr_assign_pipe           go to state 543
    expr_named_call            go to state 544
    expr_method_call           go to state 545
    func_addr_expr             go to state 546
    expr_field                 go to state 547
    expr_call                  go to state 548
    expr                       go to state 549
    expr_mtag                  go to state 550
    basic_type_declaration     go to state 551
    make_decl                  go to state 552
    make_struct_decl           go to state 553
    make_tuple_call            go to state 554
    make_dim_decl              go to state 555
    make_table_decl            go to state 556
    array_comprehension        go to state 557


State 1209

  885 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1366
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1210

  646 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  647                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  886 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1367
    ','   shift, and go to state 845


State 1211

  852 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 852 (make_dim_decl)


State 1212

  471 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 471 (expr)


State 1213

  406 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1368
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1214

  530 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1369
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1215

  410 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1370


State 1216

  413 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 285

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1371


State 1217

   61 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 287

    expression_block  go to state 1372


State 1218

   58 elif_or_static_elif: "elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1219

   59 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 59 (elif_or_static_elif)


State 1220

   62 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1373
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1221

   73 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 73 (expression_if_then_else)


State 1222

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner "end of expression"
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1374
    "is"    shift, and go to state 736
    "as"    shift, and go to state 737
    "<<"    shift, and go to state 746
    ">>"    shift, and go to state 747
    "++"    shift, and go to state 748
    "--"    shift, and go to state 749
    "<="    shift, and go to state 750
    ">="    shift, and go to state 753
    "=="    shift, and go to state 754
    "!="    shift, and go to state 755
    "->"    shift, and go to state 756
    "??"    shift, and go to state 758
    "?."    shift, and go to state 759
    "?["    shift, and go to state 760
    "<|"    shift, and go to state 761
    "|>"    shift, and go to state 762
    "<<<"   shift, and go to state 764
    ">>>"   shift, and go to state 765
    "&&"    shift, and go to state 768
    "||"    shift, and go to state 769
    "^^"    shift, and go to state 770
    ".."    shift, and go to state 774
    '?'     shift, and go to state 776
    '|'     shift, and go to state 777
    '^'     shift, and go to state 778
    '&'     shift, and go to state 779
    '<'     shift, and go to state 780
    '>'     shift, and go to state 781
    '-'     shift, and go to state 782
    '+'     shift, and go to state 783
    '*'     shift, and go to state 784
    '/'     shift, and go to state 785
    '%'     shift, and go to state 786
    '.'     shift, and go to state 787
    '['     shift, and go to state 788

    $default  reduce using rule 65 (expression_else_one_liner)

    expression_else_one_liner  go to state 1375


State 1223

  353 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 973
    "[["       shift, and go to state 974

    $default  reduce using rule 346 (optional_capture_list)

    optional_capture_list  go to state 1376


State 1224

  789 make_struct_fields: "name" . copy_or_move expr
  790                   | "name" . ":=" expr

    "<-"  shift, and go to state 844
    ":="  shift, and go to state 1174
    '='   shift, and go to state 846

    copy_or_move  go to state 1175


State 1225

  425 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 425 (expr_call)


State 1226

  427 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1377


State 1227

  401 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1180
    ']'  shift, and go to state 1378


State 1228

  332 expr_list: expr_list ',' . expr
  402 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 1379
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1127
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1229

  428 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 428 (expr_call)


State 1230

  426 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 426 (expr_call)


State 1231

  305 tuple_expansion: "name" .

    $default  reduce using rule 305 (tuple_expansion)


State 1232

  306 tuple_expansion: tuple_expansion . ',' "name"
  307 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1380
    ']'  shift, and go to state 1381


State 1233

  306 tuple_expansion: tuple_expansion . ',' "name"
  308 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  310                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1380
    ')'  shift, and go to state 1382


State 1234

  348 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1235
    ":="    shift, and go to state 1236
    "name"  shift, and go to state 1237
    '='     shift, and go to state 1238
    '&'     shift, and go to state 1239

    capture_entry  go to state 1240
    capture_list   go to state 1383


State 1235

  341 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1384


State 1236

  342 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1385


State 1237

  343 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1386


State 1238

  340 capture_entry: '=' . "name"

    "name"  shift, and go to state 1387


State 1239

  339 capture_entry: '&' . "name"

    "name"  shift, and go to state 1388


State 1240

  344 capture_list: capture_entry .

    $default  reduce using rule 344 (capture_list)


State 1241

  345 capture_list: capture_list . ',' capture_entry
  347 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1389
    ']'  shift, and go to state 1390


State 1242

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 375

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1391


State 1243

  489 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 487 ($@28)

    $@28  go to state 1392


State 1244

  529 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1393
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1245

  495 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 493 ($@30)

    $@30  go to state 1394


State 1246

  527 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1395
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1247

  382 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 382 (expr_assign_pipe_right)


State 1248

  380 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 380 (expr_assign_pipe_right)


State 1249

  381 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 381 (expr_assign_pipe_right)


State 1250

  403 expr_method_call: expr "->" "name" '(' . ')'
  404                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 1396
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1397
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1251

  524 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1398
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1252

  474 expr: expr "?[" expr ']' .

    $default  reduce using rule 474 (expr)


State 1253

  500 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1399


State 1254

  528 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1400


State 1255

  497 expr: expr '?' "as" "name" .

    $default  reduce using rule 497 (expr)


State 1256

  501 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 501 (expr)


State 1257

  486 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1401
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1258

  526 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1402


State 1259

  477 expr: expr '.' "?." "name" .

    $default  reduce using rule 477 (expr)


State 1260

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  475     | expr '.' "?[" expr . ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ']'    shift, and go to state 1403


State 1261

  523 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1404
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1262

  416 expr_field: expr '.' "name" '(' . ')'
  417           | expr '.' "name" '(' . expr_list ')'
  418           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 1405
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 1406
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1407
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1263

  525 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1408


State 1264

  415 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 415 (expr_field)


State 1265

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  473     | expr '.' '[' expr . ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ']'    shift, and go to state 1409


State 1266

  423 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 422 ($@27)

    $@27  go to state 1410


State 1267

  419 expr_field: expr '.' basic_type_declaration '(' . ')'
  420           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 1411
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1412
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1268

  472 expr: expr '[' expr ']' .

    $default  reduce using rule 472 (expr)


State 1269

  430 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 430 (expr_call)


State 1270

  607 enum_list: enum_list "name" '=' expr "end of expression" .

    $default  reduce using rule 607 (enum_list)


State 1271

  627 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration "begin of code block" $@43 enum_list $@44 "end of code block" .

    $default  reduce using rule 627 (enum_declaration)


State 1272

  122 optional_annotation_list: '[' annotation_list ']' .
  552 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . "end of expression"

    "end of expression"  shift, and go to state 1413

    $default  reduce using rule 122 (optional_annotation_list)


State 1273

  540 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 540 (optional_public_or_private_member_variable)


State 1274

  541 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 541 (optional_public_or_private_member_variable)


State 1275

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header "end of expression"
  551                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1414
    "static"    shift, and go to state 1276

    $default  reduce using rule 542 (optional_static_member_variable)

    optional_static_member_variable  go to state 1415


State 1276

  543 optional_static_member_variable: "static" .

    $default  reduce using rule 543 (optional_static_member_variable)


State 1277

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1416
    "sealed"    shift, and go to state 1417

    $default  reduce using rule 534 (optional_override)

    optional_override  go to state 1418


State 1278

  547 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration "end of expression" .

    $default  reduce using rule 547 (struct_variable_declaration_list)


State 1279

  483 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  484     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 973
    "[["       shift, and go to state 974

    $default  reduce using rule 346 (optional_capture_list)

    optional_capture_list  go to state 1419


State 1280

  589 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 589 (let_variable_declaration)


State 1281

  709 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 709 (type_declaration_no_options)


State 1282

  732 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 732 (type_declaration_no_options)


State 1283

  735 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 735 (type_declaration_no_options)


State 1284

  698 table_type_pair: type_declaration c_or_s type_declaration .
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419

    $default  reduce using rule 698 (table_type_pair)


State 1285

  738 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 738 (type_declaration_no_options)


State 1286

  728 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 728 (type_declaration_no_options)


State 1287

  688 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 688 (bitfield_bits)


State 1288

  694 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 694 (bitfield_type_declaration)


State 1289

  742 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 742 (type_declaration_no_options)


State 1290

  745 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 744 ($@63)

    $@63  go to state 1420


State 1291

  749 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 749 (type_declaration_no_options)


State 1292

  752 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 751 ($@67)

    $@67  go to state 1421


State 1293

  756 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 756 (type_declaration_no_options)


State 1294

  759 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 758 ($@71)

    $@71  go to state 1422


State 1295

  762 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 762 (type_declaration_no_options)


State 1296

  560 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 560 (tuple_type_list)


State 1297

  765 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 765 (type_declaration_no_options)


State 1298

  566 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 566 (variant_type_list)


State 1299

  713 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1423


State 1300

  257 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1424


State 1301

  644 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 644 (variable_name_with_pos_list)


State 1302

  647 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1425


State 1303

  575 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1426
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1304

  831 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 830 ($@89)

    $@89  go to state 1427


State 1305

  834 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 833 ($@91)

    $@91  go to state 1428


State 1306

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  332 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 287
    ','                    shift, and go to state 867

    expression_block  go to state 1429


State 1307

  276 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 275 ($@12)

    $@12  go to state 1430


State 1308

  282 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1431


State 1309

  280 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 280 (expr_new)


State 1310

  281 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 281 (expr_new)


State 1311

  279 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 279 (expr_new)


State 1312

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  327               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of expression"  shift, and go to state 612
    ','                  shift, and go to state 613
    '>'                  shift, and go to state 1432

    c_or_s  go to state 1433


State 1313

  325 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 325 (expr_type_info)


State 1314

  330 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1434


State 1315

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1435


State 1316

  328 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 328 (expr_type_info)


State 1317

  324 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 323 ($@20)

    $@20  go to state 1436


State 1318

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  857 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1437
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1319

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  860 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1438
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1320

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  863 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options . '>' $@103 '(' make_variant_dim ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1439
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1321

  867 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' . $@105 '(' optional_expr_list ')'

    $default  reduce using rule 866 ($@105)

    $@105  go to state 1440


State 1322

  864 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 864 (make_dim_decl)


State 1323

  879 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 254 (optional_expr_map_tuple_list)

    string_builder                go to state 507
    expr_reader                   go to state 508
    optional_expr_map_tuple_list  go to state 1441
    expression_keyword            go to state 569
    name_in_namespace             go to state 524
    expr_new                      go to state 526
    expr_cast                     go to state 536
    expr_type_decl                go to state 537
    expr_type_info                go to state 538
    block_or_lambda               go to state 539
    expr_full_block               go to state 540
    expr_numeric_const            go to state 541
    expr_named_call               go to state 544
    expr_method_call              go to state 545
    func_addr_expr                go to state 546
    expr_field                    go to state 547
    expr_call                     go to state 548
    expr                          go to state 696
    expr_mtag                     go to state 550
    basic_type_declaration        go to state 551
    make_decl                     go to state 552
    make_struct_decl              go to state 553
    make_map_tuple                go to state 704
    make_tuple_call               go to state 554
    make_dim_decl                 go to state 555
    expr_map_tuple_list           go to state 888
    make_table_decl               go to state 556
    array_comprehension           go to state 557


State 1324

  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"
  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1442
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1325

   82 expression_with_alias: "assume" "name" '=' $@5 expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 82 (expression_with_alias)


State 1326

  315 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 314 ($@14)

    $@14  go to state 1443


State 1327

  318 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 317 ($@16)

    $@16  go to state 1444


State 1328

  321 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 320 ($@18)

    $@18  go to state 1445


State 1329

  871 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' . $@107 '(' expr_list optional_comma ')'

    $default  reduce using rule 870 ($@107)

    $@107  go to state 1446


State 1330

  868 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 868 (make_dim_decl)


State 1331

  840 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95 use_initializer

    $default  reduce using rule 839 ($@95)

    $@95  go to state 1447


State 1332

  849 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 848 ($@97)

    $@97  go to state 1448


State 1333

  846 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 846 (make_tuple_call)


State 1334

  837 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_variant_dim ')'

    $default  reduce using rule 836 ($@93)

    $@93  go to state 1449


State 1335

  224 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  483 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  484     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1450
    '$'  shift, and go to state 505
    '@'  shift, and go to state 679

    block_or_lambda                go to state 722
    expr_full_block_assumed_piped  go to state 1451


State 1336

  350 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 375

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1452


State 1337

  521 expr_mtag: "$c" '(' expr ')' '(' . ')'
  522          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 1453
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1454
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1338

  332 expr_list: expr_list . ',' expr
  887 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1455
    ','                  shift, and go to state 867


State 1339

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  793 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  794                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1456


State 1340

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  790 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 790 (make_struct_fields)


State 1341

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  789 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 789 (make_struct_fields)


State 1342

  800 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  826 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 918
    "end of expression"  shift, and go to state 1181

    $default  reduce using rule 807 (optional_block)

    optional_block  go to state 1457


State 1343

  825 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1183
    ",]]"  shift, and go to state 1184
    ']'    shift, and go to state 1185

    optional_trailing_delim_sqr_sqr  go to state 1458


State 1344

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  842 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 842 (make_tuple)


State 1345

  795 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  796                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1459


State 1346

  791 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  792                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 844
    ":="  shift, and go to state 1460
    '='   shift, and go to state 846

    copy_or_move  go to state 1461


State 1347

  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  800 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1180

    $default  reduce using rule 800 (make_struct_dim)


State 1348

  823 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 823 (make_struct_decl)


State 1349

  815 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 815 (optional_trailing_delim_sqr_sqr)


State 1350

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  843 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 843 (make_tuple)


State 1351

  843 make_tuple: make_tuple . ',' expr
  851 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1187

    $default  reduce using rule 851 (make_dim)


State 1352

  813 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 813 (optional_trailing_semicolon_sqr_sqr)


State 1353

  332 expr_list: expr_list . ',' expr
  888 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1462
    ','                  shift, and go to state 867


State 1354

  800 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  828 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 918
    "end of expression"  shift, and go to state 1181

    $default  reduce using rule 807 (optional_block)

    optional_block  go to state 1463


State 1355

  818 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1464


State 1356

  819 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 819 (optional_trailing_delim_cur_sqr)


State 1357

  820 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 820 (optional_trailing_delim_cur_sqr)


State 1358

  827 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 827 (make_struct_decl)


State 1359

  811 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 811 (optional_trailing_semicolon_cur_sqr)


State 1360

  332 expr_list: expr_list . ',' expr
  890 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1465
    ','                  shift, and go to state 867


State 1361

  260 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 259 ($@8)

    $@8  go to state 1466


State 1362

  263 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 262 ($@10)

    $@10  go to state 1467


State 1363

   31 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 31 (string_builder_body)


State 1364

  332 expr_list: expr_list . ',' expr
  889 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1468
    ','                  shift, and go to state 867


State 1365

  221 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 221 (expression_block)


State 1366

  332 expr_list: expr_list . ',' expr
  885 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1469
    ','                  shift, and go to state 867


State 1367

  886 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1470
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1368

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  406 func_addr_name: "$i" '(' expr . ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1471


State 1369

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  530          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1472


State 1370

  410 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1473
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1371

  413 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 375

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1474


State 1372

   61 expression_else: "else" expression_block .

    $default  reduce using rule 61 (expression_else)


State 1373

   62 expression_else: elif_or_static_elif expr . expression_block expression_else
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 736
    "as"                   shift, and go to state 737
    "<<"                   shift, and go to state 746
    ">>"                   shift, and go to state 747
    "++"                   shift, and go to state 748
    "--"                   shift, and go to state 749
    "<="                   shift, and go to state 750
    ">="                   shift, and go to state 753
    "=="                   shift, and go to state 754
    "!="                   shift, and go to state 755
    "->"                   shift, and go to state 756
    "??"                   shift, and go to state 758
    "?."                   shift, and go to state 759
    "?["                   shift, and go to state 760
    "<|"                   shift, and go to state 761
    "|>"                   shift, and go to state 762
    "<<<"                  shift, and go to state 764
    ">>>"                  shift, and go to state 765
    "&&"                   shift, and go to state 768
    "||"                   shift, and go to state 769
    "^^"                   shift, and go to state 770
    ".."                   shift, and go to state 774
    "begin of code block"  shift, and go to state 287
    '?'                    shift, and go to state 776
    '|'                    shift, and go to state 777
    '^'                    shift, and go to state 778
    '&'                    shift, and go to state 779
    '<'                    shift, and go to state 780
    '>'                    shift, and go to state 781
    '-'                    shift, and go to state 782
    '+'                    shift, and go to state 783
    '*'                    shift, and go to state 784
    '/'                    shift, and go to state 785
    '%'                    shift, and go to state 786
    '.'                    shift, and go to state 787
    '['                    shift, and go to state 788

    expression_block  go to state 1475


State 1374

   67 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 66 ($@2)

    $@2  go to state 1476


State 1375

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1477


State 1376

  353 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 285

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1478


State 1377

  427 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 427 (expr_call)


State 1378

  401 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1479


State 1379

  402 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  852 make_dim_decl: '[' . expr_list optional_comma ']'
  885 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "for"                             shift, and go to state 712
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "iterator"                        shift, and go to state 713
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "$f"                              shift, and go to state 919
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 920
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 714
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_fields      go to state 1480
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1380

  306 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1481


State 1381

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr "end of expression"

    ']'  shift, and go to state 1482


State 1382

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  310                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1483
    '&'  shift, and go to state 391

    $default  reduce using rule 581 (optional_ref)

    optional_ref  go to state 1484


State 1383

  345 capture_list: capture_list . ',' capture_entry
  348 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1389
    ')'  shift, and go to state 1485


State 1384

  341 capture_entry: "<-" "name" .

    $default  reduce using rule 341 (capture_entry)


State 1385

  342 capture_entry: ":=" "name" .

    $default  reduce using rule 342 (capture_entry)


State 1386

  343 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1486


State 1387

  340 capture_entry: '=' "name" .

    $default  reduce using rule 340 (capture_entry)


State 1388

  339 capture_entry: '&' "name" .

    $default  reduce using rule 339 (capture_entry)


State 1389

  345 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1235
    ":="    shift, and go to state 1236
    "name"  shift, and go to state 1237
    '='     shift, and go to state 1238
    '&'     shift, and go to state 1239

    capture_entry  go to state 1487


State 1390

  347 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1488


State 1391

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1489
    "begin of code block"  shift, and go to state 287

    expression_block       go to state 1490
    block_or_simple_block  go to state 1491


State 1392

  489 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1492


State 1393

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  529          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1493


State 1394

  495 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1494


State 1395

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  527          | expr "as" "$f" '(' expr . ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1495


State 1396

  403 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 403 (expr_method_call)


State 1397

  332 expr_list: expr_list . ',' expr
  404 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 867
    ')'  shift, and go to state 1496


State 1398

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  524          | expr "?." "$f" '(' expr . ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1497


State 1399

  500 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 498 ($@32)

    $@32  go to state 1498


State 1400

  528 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1499
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1401

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  486     | expr '?' expr ':' expr .
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 486 (expr)


State 1402

  526 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1500
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1403

  475 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 475 (expr)


State 1404

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  523          | expr '.' "$f" '(' expr . ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1501


State 1405

  418 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  852 make_dim_decl: '[' . expr_list optional_comma ']'
  885 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  886                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "for"                             shift, and go to state 712
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "iterator"                        shift, and go to state 713
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "$f"                              shift, and go to state 919
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 920
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 714
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_fields      go to state 1502
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1406

  416 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 416 (expr_field)


State 1407

  332 expr_list: expr_list . ',' expr
  417 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 867
    ')'  shift, and go to state 1503


State 1408

  525 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1504
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1409

  473 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 473 (expr)


State 1410

  423 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 423 (expr_field)


State 1411

  419 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 419 (expr_field)


State 1412

  332 expr_list: expr_list . ',' expr
  420 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 867
    ')'  shift, and go to state 1505


State 1413

  552 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' "end of expression" .

    $default  reduce using rule 552 (struct_variable_declaration_list)


State 1414

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header "end of expression"

    "const"  shift, and go to state 1506

    $default  reduce using rule 537 (optional_constant)

    optional_constant  go to state 1507


State 1415

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1416
    "sealed"    shift, and go to state 1417

    $default  reduce using rule 534 (optional_override)

    optional_override  go to state 1508


State 1416

  535 optional_override: "override" .

    $default  reduce using rule 535 (optional_override)


State 1417

  536 optional_override: "sealed" .

    $default  reduce using rule 536 (optional_override)


State 1418

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1273
    "private"  shift, and go to state 1274

    $default  reduce using rule 539 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1509


State 1419

  483 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  484     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1450


State 1420

  745 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 745 (type_declaration_no_options)


State 1421

  752 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 752 (type_declaration_no_options)


State 1422

  759 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 759 (type_declaration_no_options)


State 1423

  713 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 507
    expr_reader             go to state 508
    optional_expr_list      go to state 1510
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 829
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1424

  257 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419

    $default  reduce using rule 257 (type_declaration_no_options_list)


State 1425

  647 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 647 (variable_name_with_pos_list)


State 1426

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  575 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 575 (variable_declaration)


State 1427

  831 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1511


State 1428

  834 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1512


State 1429

   77 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 77 (expression_for_loop)


State 1430

  276 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 276 (new_type_declaration)


State 1431

  282 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 282 (expr_new)


State 1432

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1513
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1433

  327 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1514


State 1434

  330 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1515


State 1435

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1516
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1436

  324 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 324 (expr_type_decl)


State 1437

  857 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 856 ($@99)

    $@99  go to state 1517


State 1438

  860 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 859 ($@101)

    $@101  go to state 1518


State 1439

  863 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' . $@103 '(' make_variant_dim ')'

    $default  reduce using rule 862 ($@103)

    $@103  go to state 1519


State 1440

  867 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 . '(' optional_expr_list ')'

    '('  shift, and go to state 1520


State 1441

  879 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1521


State 1442

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1522


State 1443

  315 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1523
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1444

  318 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1524
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1445

  321 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1525
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1446

  871 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1526


State 1447

  840 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 . use_initializer

    "uninitialized"  shift, and go to state 1527

    $default  reduce using rule 821 (use_initializer)

    use_initializer  go to state 1528


State 1448

  849 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1529


State 1449

  837 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_variant_dim ')'

    '('  shift, and go to state 1530


State 1450

  483 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  484     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    ')'                               shift, and go to state 1531
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1532
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1451

  224 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 224 (expr_call_pipe)


State 1452

  350 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1489
    "begin of code block"  shift, and go to state 287

    expression_block       go to state 1490
    block_or_simple_block  go to state 1533


State 1453

  521 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 521 (expr_mtag)


State 1454

  332 expr_list: expr_list . ',' expr
  522 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 867
    ')'  shift, and go to state 1534


State 1455

  887 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1535
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1456

  793 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  794                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 844
    ":="  shift, and go to state 1536
    '='   shift, and go to state 846

    copy_or_move  go to state 1537


State 1457

  826 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1183
    ",]]"  shift, and go to state 1184
    ']'    shift, and go to state 1185

    optional_trailing_delim_sqr_sqr  go to state 1538


State 1458

  825 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 825 (make_struct_decl)


State 1459

  795 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  796                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1539
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1460

  792 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1540
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1461

  791 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1541
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1462

  888 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1542
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1463

  828 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1355
    ";}]"                shift, and go to state 1356
    ",}]"                shift, and go to state 1357

    optional_trailing_delim_cur_sqr  go to state 1543


State 1464

  818 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 818 (optional_trailing_delim_cur_sqr)


State 1465

  890 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 696
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_map_tuple          go to state 1544
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1466

  260 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1545
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1467

  263 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1546

    '('       [reduce using rule 252 (optional_expr_list_in_braces)]
    $default  reduce using rule 252 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1547


State 1468

  889 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 696
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_map_tuple          go to state 1548
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1469

  885 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1549
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1470

  332 expr_list: expr_list . ',' expr
  886 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1550
    ','                  shift, and go to state 867


State 1471

  406 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 406 (func_addr_name)


State 1472

  530 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 530 (expr_mtag)


State 1473

  410 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 409 ($@23)

    $@23  go to state 1551


State 1474

  413 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1552


State 1475

   62 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1217
    "elif"         shift, and go to state 1218
    "static_elif"  shift, and go to state 1219

    $default  reduce using rule 60 (expression_else)

    elif_or_static_elif  go to state 1220
    expression_else      go to state 1553


State 1476

   67 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "return"                          shift, and go to state 1554
    "null"                            shift, and go to state 446
    "break"                           shift, and go to state 447
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "continue"                        shift, and go to state 457
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "yield"                           shift, and go to state 1555
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder             go to state 507
    expr_reader                go to state 508
    expression_if_one_liner    go to state 1556
    expression_keyword         go to state 569
    name_in_namespace          go to state 524
    expr_new                   go to state 526
    expression_break           go to state 1557
    expression_continue        go to state 1558
    expression_return_no_pipe  go to state 1559
    expression_yield_no_pipe   go to state 1560
    expr_cast                  go to state 536
    expr_type_decl             go to state 537
    expr_type_info             go to state 538
    block_or_lambda            go to state 539
    expr_full_block            go to state 540
    expr_numeric_const         go to state 541
    expr_named_call            go to state 544
    expr_method_call           go to state 545
    func_addr_expr             go to state 546
    expr_field                 go to state 547
    expr_call                  go to state 548
    expr                       go to state 1561
    expr_mtag                  go to state 550
    basic_type_declaration     go to state 551
    make_decl                  go to state 552
    make_struct_decl           go to state 553
    make_tuple_call            go to state 554
    make_dim_decl              go to state 555
    make_table_decl            go to state 556
    array_comprehension        go to state 557


State 1477

   75 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 75 (expression_if_then_else)


State 1478

  353 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 375

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1562


State 1479

  401 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 401 (expr_named_call)


State 1480

  402 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1180
    ']'  shift, and go to state 1563


State 1481

  306 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 306 (tuple_expansion)


State 1482

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  309                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1564
    '&'  shift, and go to state 391

    $default  reduce using rule 581 (optional_ref)

    optional_ref  go to state 1565


State 1483

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1566


State 1484

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 575
    '='   shift, and go to state 576

    copy_or_move_or_clone  go to state 1567


State 1485

  348 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 348 (optional_capture_list)


State 1486

  343 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1568


State 1487

  345 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 345 (capture_list)


State 1488

  347 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 347 (optional_capture_list)


State 1489

  334 block_or_simple_block: "=>" . expr
  335                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "<-"                              shift, and go to state 1569
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1570
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1490

  333 block_or_simple_block: expression_block .

    $default  reduce using rule 333 (block_or_simple_block)


State 1491

  351 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 351 (expr_full_block)


State 1492

  489 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "??"        shift, and go to state 412
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '>'         shift, and go to state 1571
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    dim_list  go to state 418


State 1493

  529 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 529 (expr_mtag)


State 1494

  495 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1572


State 1495

  527 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 527 (expr_mtag)


State 1496

  404 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 404 (expr_method_call)


State 1497

  524 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 524 (expr_mtag)


State 1498

  500 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 358
    type_declaration             go to state 1573


State 1499

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  528          | expr '?' "as" "$f" '(' expr . ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1574


State 1500

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  526          | expr '.' "?." "$f" '(' expr . ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1575


State 1501

  523 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 523 (expr_mtag)


State 1502

  418 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1180
    ']'  shift, and go to state 1576


State 1503

  417 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 417 (expr_field)


State 1504

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  525          | expr '.' '.' "$f" '(' expr . ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1577


State 1505

  420 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 420 (expr_field)


State 1506

  538 optional_constant: "const" .

    $default  reduce using rule 538 (optional_constant)


State 1507

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header "end of expression"

    $default  reduce using rule 548 ($@35)

    $@35  go to state 1578


State 1508

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1506

    $default  reduce using rule 537 (optional_constant)

    optional_constant  go to state 1579


State 1509

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 623
    "name"  shift, and go to state 624

    variable_declaration         go to state 1580
    variable_name_with_pos_list  go to state 626


State 1510

  713 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1581


State 1511

  831 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1527

    $default  reduce using rule 821 (use_initializer)

    use_initializer  go to state 1582


State 1512

  834 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1527

    $default  reduce using rule 821 (use_initializer)

    use_initializer  go to state 1583


State 1513

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1584


State 1514

  327 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1585


State 1515

  330 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1586


State 1516

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1587


State 1517

  857 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1588


State 1518

  860 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1589


State 1519

  863 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 . '(' make_variant_dim ')'

    '('  shift, and go to state 1590


State 1520

  867 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 507
    expr_reader             go to state 508
    optional_expr_list      go to state 1591
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 829
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1521

  879 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 879 (make_table_decl)


State 1522

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 254 (optional_expr_map_tuple_list)

    string_builder                go to state 507
    expr_reader                   go to state 508
    optional_expr_map_tuple_list  go to state 1592
    expression_keyword            go to state 569
    name_in_namespace             go to state 524
    expr_new                      go to state 526
    expr_cast                     go to state 536
    expr_type_decl                go to state 537
    expr_type_info                go to state 538
    block_or_lambda               go to state 539
    expr_full_block               go to state 540
    expr_numeric_const            go to state 541
    expr_named_call               go to state 544
    expr_method_call              go to state 545
    func_addr_expr                go to state 546
    expr_field                    go to state 547
    expr_call                     go to state 548
    expr                          go to state 696
    expr_mtag                     go to state 550
    basic_type_declaration        go to state 551
    make_decl                     go to state 552
    make_struct_decl              go to state 553
    make_map_tuple                go to state 704
    make_tuple_call               go to state 554
    make_dim_decl                 go to state 555
    expr_map_tuple_list           go to state 888
    make_table_decl               go to state 556
    array_comprehension           go to state 557


State 1523

  315 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 315 (expr_cast)


State 1524

  318 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 318 (expr_cast)


State 1525

  321 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 321 (expr_cast)


State 1526

  871 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 1593
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1527

  822 use_initializer: "uninitialized" .

    $default  reduce using rule 822 (use_initializer)


State 1528

  840 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 use_initializer .

    $default  reduce using rule 840 (make_struct_decl)


State 1529

  849 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1527

    $default  reduce using rule 821 (use_initializer)

    use_initializer  go to state 1594


State 1530

  837 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224

    make_struct_fields  go to state 1595
    make_variant_dim    go to state 1596


State 1531

  483 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 483 (expr)


State 1532

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1597


State 1533

  350 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 350 (expr_block)


State 1534

  522 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 522 (expr_mtag)


State 1535

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  887 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1598
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1599


State 1536

  794 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1600
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1537

  793 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1601
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1538

  826 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 826 (make_struct_decl)


State 1539

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  795 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  796                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1602


State 1540

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  792 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 792 (make_struct_fields)


State 1541

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  791 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 791 (make_struct_fields)


State 1542

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  888 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1598
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1603


State 1543

  828 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 828 (make_struct_decl)


State 1544

  890 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1598

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1604


State 1545

  260 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 260 (expression_keyword)


State 1546

  253 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 507
    expr_reader             go to state 508
    optional_expr_list      go to state 1605
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 829
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1547

  263 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 263 (expression_keyword)


State 1548

  889 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1598

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1606


State 1549

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  885 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1598
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1607


State 1550

  886 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1608
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1551

  410 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 955
    "name"  shift, and go to state 59

    name_in_namespace  go to state 958
    func_addr_name     go to state 1609


State 1552

  413 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 412 ($@25)

    $@25  go to state 1610


State 1553

   62 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 62 (expression_else)


State 1554

  286 expression_return_no_pipe: "return" .
  287                          | "return" . expr_list
  288                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "<-"                              shift, and go to state 1611
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    $default  reduce using rule 286 (expression_return_no_pipe)

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 646
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1555

  292 expression_yield_no_pipe: "yield" . expr
  293                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "<-"                              shift, and go to state 1612
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1613
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1556

   67 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 67 (expression_else_one_liner)


State 1557

   71 expression_if_one_liner: expression_break .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1558

   72 expression_if_one_liner: expression_continue .

    $default  reduce using rule 72 (expression_if_one_liner)


State 1559

   69 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1560

   70 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1561

   68 expression_if_one_liner: expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 68 (expression_if_one_liner)


State 1562

  353 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 287

    expression_block  go to state 1614


State 1563

  402 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1615


State 1564

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 312
    "array"      shift, and go to state 313
    "table"      shift, and go to state 314
    "typedecl"   shift, and go to state 315
    "iterator"   shift, and go to state 316
    "smart_ptr"  shift, and go to state 317
    "bool"       shift, and go to state 318
    "void"       shift, and go to state 319
    "string"     shift, and go to state 320
    "auto"       shift, and go to state 321
    "int"        shift, and go to state 322
    "int2"       shift, and go to state 323
    "int3"       shift, and go to state 324
    "int4"       shift, and go to state 325
    "uint"       shift, and go to state 326
    "bitfield"   shift, and go to state 327
    "uint2"      shift, and go to state 328
    "uint3"      shift, and go to state 329
    "uint4"      shift, and go to state 330
    "float"      shift, and go to state 331
    "float2"     shift, and go to state 332
    "float3"     shift, and go to state 333
    "float4"     shift, and go to state 334
    "range"      shift, and go to state 335
    "urange"     shift, and go to state 336
    "range64"    shift, and go to state 337
    "urange64"   shift, and go to state 338
    "block"      shift, and go to state 339
    "int64"      shift, and go to state 340
    "uint64"     shift, and go to state 341
    "double"     shift, and go to state 342
    "function"   shift, and go to state 343
    "lambda"     shift, and go to state 344
    "int8"       shift, and go to state 345
    "uint8"      shift, and go to state 346
    "int16"      shift, and go to state 347
    "uint16"     shift, and go to state 348
    "tuple"      shift, and go to state 349
    "variant"    shift, and go to state 350
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 351
    "name"       shift, and go to state 59
    '$'          shift, and go to state 352

    name_in_namespace            go to state 353
    basic_type_declaration       go to state 354
    structure_type_declaration   go to state 355
    auto_type_declaration        go to state 356
    bitfield_type_declaration    go to state 357
    type_declaration_no_options  go to state 1616


State 1565

  309 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 574
    ":="  shift, and go to state 575
    '='   shift, and go to state 576

    copy_or_move_or_clone  go to state 1617


State 1566

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "<-"        shift, and go to state 574
    "??"        shift, and go to state 412
    ":="        shift, and go to state 575
    '='         shift, and go to state 576
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    copy_or_move_or_clone  go to state 1618
    dim_list               go to state 418


State 1567

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1619
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1568

  343 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 343 (capture_entry)


State 1569

  335 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1620
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1570

  334 block_or_simple_block: "=>" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    ".."  error (nonassociative)

    $default  reduce using rule 334 (block_or_simple_block)


State 1571

  489 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 488 ($@29)

    $@29  go to state 1621


State 1572

  495 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 494 ($@31)

    $@31  go to state 1622


State 1573

  500 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  767 type_declaration: type_declaration . '|' type_declaration_no_options
  768                 | type_declaration . '|' '#'

    '|'  shift, and go to state 419
    '>'  shift, and go to state 1623


State 1574

  528 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 528 (expr_mtag)


State 1575

  526 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 526 (expr_mtag)


State 1576

  418 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1624


State 1577

  525 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 525 (expr_mtag)


State 1578

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 182
    "bool"      shift, and go to state 183
    "string"    shift, and go to state 184
    "int"       shift, and go to state 185
    "int2"      shift, and go to state 186
    "int3"      shift, and go to state 187
    "int4"      shift, and go to state 188
    "uint"      shift, and go to state 189
    "uint2"     shift, and go to state 190
    "uint3"     shift, and go to state 191
    "uint4"     shift, and go to state 192
    "float"     shift, and go to state 193
    "float2"    shift, and go to state 194
    "float3"    shift, and go to state 195
    "float4"    shift, and go to state 196
    "range"     shift, and go to state 197
    "urange"    shift, and go to state 198
    "range64"   shift, and go to state 199
    "urange64"  shift, and go to state 200
    "int64"     shift, and go to state 201
    "uint64"    shift, and go to state 202
    "double"    shift, and go to state 203
    "int8"      shift, and go to state 204
    "uint8"     shift, and go to state 205
    "int16"     shift, and go to state 206
    "uint16"    shift, and go to state 207
    "++"        shift, and go to state 208
    "--"        shift, and go to state 209
    "name"      shift, and go to state 210

    function_name                go to state 211
    function_declaration_header  go to state 1625


State 1579

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 550 ($@36)

    $@36  go to state 1626


State 1580

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 544 (structure_variable_declaration)


State 1581

  713 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 713 (type_declaration_no_options)


State 1582

  831 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224
    '('     shift, and go to state 1627

    $default  reduce using rule 806 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1628
    make_struct_dim_list           go to state 1629
    make_struct_dim_decl           go to state 1630
    optional_make_struct_dim_decl  go to state 1631


State 1583

  834 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224
    '('     shift, and go to state 1627

    $default  reduce using rule 806 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1628
    make_struct_dim_list           go to state 1629
    make_struct_dim_decl           go to state 1630
    optional_make_struct_dim_decl  go to state 1632


State 1584

  326 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 326 (expr_type_info)


State 1585

  327 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1633
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1586

  330 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1634
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1587

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 329 (expr_type_info)


State 1588

  857 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1527

    $default  reduce using rule 821 (use_initializer)

    use_initializer  go to state 1635


State 1589

  860 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1527

    $default  reduce using rule 821 (use_initializer)

    use_initializer  go to state 1636


State 1590

  863 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224

    make_struct_fields  go to state 1595
    make_variant_dim    go to state 1637


State 1591

  867 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1638


State 1592

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1639


State 1593

  332 expr_list: expr_list . ',' expr
  871 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 952

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1640


State 1594

  849 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224
    '('     shift, and go to state 1627

    $default  reduce using rule 806 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1628
    make_struct_dim_list           go to state 1629
    make_struct_dim_decl           go to state 1630
    optional_make_struct_dim_decl  go to state 1641


State 1595

  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  797 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1180

    $default  reduce using rule 797 (make_variant_dim)


State 1596

  837 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1642


State 1597

  484 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 484 (expr)


State 1598

  882 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1643


State 1599

  887 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1644


State 1600

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  794 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 794 (make_struct_fields)


State 1601

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  793 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 793 (make_struct_fields)


State 1602

  795 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  796                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 844
    ":="  shift, and go to state 1645
    '='   shift, and go to state 846

    copy_or_move  go to state 1646


State 1603

  888 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1647


State 1604

  890 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1648


State 1605

  253 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1649

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1650


State 1606

  889 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1651


State 1607

  885 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1652


State 1608

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  886 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1598
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788

    $default  reduce using rule 881 (array_comprehension_where)

    array_comprehension_where  go to state 1653


State 1609

  410 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 410 (func_addr_expr)


State 1610

  413 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 955
    "name"  shift, and go to state 59

    name_in_namespace  go to state 958
    func_addr_name     go to state 1654


State 1611

  288 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    expr_list               go to state 866
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 715
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1612

  293 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1655
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1613

  292 expression_yield_no_pipe: "yield" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 292 (expression_yield_no_pipe)


State 1614

  353 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 353 (expr_full_block_assumed_piped)


State 1615

  402 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 402 (expr_named_call)


State 1616

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  705 type_declaration_no_options: type_declaration_no_options . dim_list
  706                            | type_declaration_no_options . '[' ']'
  714                            | type_declaration_no_options . '-' '[' ']'
  715                            | type_declaration_no_options . "explicit"
  716                            | type_declaration_no_options . "const"
  717                            | type_declaration_no_options . '-' "const"
  718                            | type_declaration_no_options . '&'
  719                            | type_declaration_no_options . '-' '&'
  720                            | type_declaration_no_options . '#'
  721                            | type_declaration_no_options . "implicit"
  722                            | type_declaration_no_options . '-' '#'
  723                            | type_declaration_no_options . "==" "const"
  724                            | type_declaration_no_options . "==" '&'
  725                            | type_declaration_no_options . '?'
  729                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 408
    "implicit"  shift, and go to state 409
    "explicit"  shift, and go to state 410
    "=="        shift, and go to state 411
    "<-"        shift, and go to state 574
    "??"        shift, and go to state 412
    ":="        shift, and go to state 575
    '='         shift, and go to state 576
    '?'         shift, and go to state 413
    '&'         shift, and go to state 414
    '-'         shift, and go to state 415
    '['         shift, and go to state 416
    '#'         shift, and go to state 417

    copy_or_move_or_clone  go to state 1656
    dim_list               go to state 418


State 1617

  309 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1657
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1618

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1658
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1619

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1659
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788


State 1620

  335 block_or_simple_block: "=>" "<-" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 335 (block_or_simple_block)


State 1621

  489 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 489 (expr)


State 1622

  495 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 495 (expr)


State 1623

  500 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 499 ($@33)

    $@33  go to state 1660


State 1624

  418 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 418 (expr_field)


State 1625

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1661


State 1626

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 182
    "bool"      shift, and go to state 183
    "string"    shift, and go to state 184
    "int"       shift, and go to state 185
    "int2"      shift, and go to state 186
    "int3"      shift, and go to state 187
    "int4"      shift, and go to state 188
    "uint"      shift, and go to state 189
    "uint2"     shift, and go to state 190
    "uint3"     shift, and go to state 191
    "uint4"     shift, and go to state 192
    "float"     shift, and go to state 193
    "float2"    shift, and go to state 194
    "float3"    shift, and go to state 195
    "float4"    shift, and go to state 196
    "range"     shift, and go to state 197
    "urange"    shift, and go to state 198
    "range64"   shift, and go to state 199
    "urange64"  shift, and go to state 200
    "int64"     shift, and go to state 201
    "uint64"    shift, and go to state 202
    "double"    shift, and go to state 203
    "int8"      shift, and go to state 204
    "uint8"     shift, and go to state 205
    "int16"     shift, and go to state 206
    "uint16"    shift, and go to state 207
    "++"        shift, and go to state 208
    "--"        shift, and go to state 209
    "name"      shift, and go to state 210

    function_name                go to state 211
    function_declaration_header  go to state 1662


State 1627

  801 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224

    make_struct_fields  go to state 1663


State 1628

  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  803 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1180

    $default  reduce using rule 803 (make_struct_dim_decl)


State 1629

  802 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  804 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1664

    $default  reduce using rule 883 (optional_comma)

    optional_comma  go to state 1665


State 1630

  805 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 805 (optional_make_struct_dim_decl)


State 1631

  831 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1666


State 1632

  834 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1667


State 1633

  327 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1668


State 1634

  330 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788
    ')'    shift, and go to state 1669


State 1635

  857 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224
    '('     shift, and go to state 1627

    $default  reduce using rule 806 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1628
    make_struct_dim_list           go to state 1629
    make_struct_dim_decl           go to state 1630
    optional_make_struct_dim_decl  go to state 1670


State 1636

  860 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224
    '('     shift, and go to state 1627

    $default  reduce using rule 806 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1628
    make_struct_dim_list           go to state 1629
    make_struct_dim_decl           go to state 1630
    optional_make_struct_dim_decl  go to state 1671


State 1637

  863 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1672


State 1638

  867 make_dim_decl: "array" '<' $@104 type_declaration_no_options '>' $@105 '(' optional_expr_list ')' .

    $default  reduce using rule 867 (make_dim_decl)


State 1639

  880 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 880 (make_table_decl)


State 1640

  871 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1673


State 1641

  849 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1674


State 1642

  837 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_variant_dim ')' .

    $default  reduce using rule 837 (make_struct_decl)


State 1643

  882 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1675
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1644

  887 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1676


State 1645

  796 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1677
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1646

  795 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1678
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1647

  888 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1679


State 1648

  890 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1680


State 1649

  884 optional_comma: ',' .

    $default  reduce using rule 884 (optional_comma)


State 1650

  253 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1681


State 1651

  889 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 889 (array_comprehension)


State 1652

  885 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 885 (array_comprehension)


State 1653

  886 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1682


State 1654

  413 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 413 (func_addr_expr)


State 1655

  293 expression_yield_no_pipe: "yield" "<-" expr .
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 293 (expression_yield_no_pipe)


State 1656

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 433
    "class"                           shift, and go to state 434
    "true"                            shift, and go to state 439
    "false"                           shift, and go to state 440
    "new"                             shift, and go to state 441
    "typeinfo"                        shift, and go to state 442
    "type"                            shift, and go to state 443
    "array"                           shift, and go to state 444
    "null"                            shift, and go to state 446
    "table"                           shift, and go to state 449
    "deref"                           shift, and go to state 451
    "cast"                            shift, and go to state 454
    "upcast"                          shift, and go to state 455
    "addr"                            shift, and go to state 456
    "reinterpret"                     shift, and go to state 459
    "unsafe"                          shift, and go to state 566
    "fixed_array"                     shift, and go to state 463
    "default"                         shift, and go to state 464
    "bool"                            shift, and go to state 318
    "void"                            shift, and go to state 319
    "string"                          shift, and go to state 320
    "int"                             shift, and go to state 322
    "int2"                            shift, and go to state 323
    "int3"                            shift, and go to state 324
    "int4"                            shift, and go to state 325
    "uint"                            shift, and go to state 326
    "bitfield"                        shift, and go to state 465
    "uint2"                           shift, and go to state 328
    "uint3"                           shift, and go to state 329
    "uint4"                           shift, and go to state 330
    "float"                           shift, and go to state 331
    "float2"                          shift, and go to state 332
    "float3"                          shift, and go to state 333
    "float4"                          shift, and go to state 334
    "range"                           shift, and go to state 335
    "urange"                          shift, and go to state 336
    "range64"                         shift, and go to state 337
    "urange64"                        shift, and go to state 338
    "int64"                           shift, and go to state 340
    "uint64"                          shift, and go to state 341
    "double"                          shift, and go to state 342
    "int8"                            shift, and go to state 345
    "uint8"                           shift, and go to state 346
    "int16"                           shift, and go to state 347
    "uint16"                          shift, and go to state 348
    "tuple"                           shift, and go to state 466
    "variant"                         shift, and go to state 467
    "generator"                       shift, and go to state 567
    "++"                              shift, and go to state 470
    "--"                              shift, and go to state 471
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 475
    "$i"                              shift, and go to state 476
    "$v"                              shift, and go to state 477
    "$b"                              shift, and go to state 478
    "$a"                              shift, and go to state 479
    "$c"                              shift, and go to state 480
    "..."                             shift, and go to state 481
    "[["                              shift, and go to state 482
    "[{"                              shift, and go to state 483
    "{{"                              shift, and go to state 484
    "integer constant"                shift, and go to state 485
    "long integer constant"           shift, and go to state 486
    "unsigned integer constant"       shift, and go to state 487
    "unsigned long integer constant"  shift, and go to state 488
    "unsigned int8 constant"          shift, and go to state 489
    "floating point constant"         shift, and go to state 490
    "double constant"                 shift, and go to state 491
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 568
    "type function"                   shift, and go to state 493
    "start of the string"             shift, and go to state 494
    "begin of code block"             shift, and go to state 495
    '-'                               shift, and go to state 498
    '+'                               shift, and go to state 499
    '*'                               shift, and go to state 500
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 501
    '!'                               shift, and go to state 502
    '['                               shift, and go to state 503
    '('                               shift, and go to state 504
    '$'                               shift, and go to state 505
    '@'                               shift, and go to state 506

    string_builder          go to state 507
    expr_reader             go to state 508
    expression_keyword      go to state 569
    name_in_namespace       go to state 524
    expr_new                go to state 526
    expr_cast               go to state 536
    expr_type_decl          go to state 537
    expr_type_info          go to state 538
    block_or_lambda         go to state 539
    expr_full_block         go to state 540
    expr_numeric_const      go to state 541
    expr_named_call         go to state 544
    expr_method_call        go to state 545
    func_addr_expr          go to state 546
    expr_field              go to state 547
    expr_call               go to state 548
    expr                    go to state 1683
    expr_mtag               go to state 550
    basic_type_declaration  go to state 551
    make_decl               go to state 552
    make_struct_decl        go to state 553
    make_tuple_call         go to state 554
    make_dim_decl           go to state 555
    make_table_decl         go to state 556
    array_comprehension     go to state 557


State 1657

  309 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . "end of expression"
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1684
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788


State 1658

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1685
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788


State 1659

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 310 (tuple_expansion_variable_declaration)


State 1660

  500 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 500 (expr)


State 1661

  549 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header "end of expression" .

    $default  reduce using rule 549 (struct_variable_declaration_list)


State 1662

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 287

    expression_block  go to state 1686


State 1663

  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  801 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1180
    ')'  shift, and go to state 1687


State 1664

  802 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  884 optional_comma: ',' .

    '('  shift, and go to state 1688

    $default  reduce using rule 884 (optional_comma)


State 1665

  804 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 804 (make_struct_dim_decl)


State 1666

  831 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 831 (make_struct_decl)


State 1667

  834 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 834 (make_struct_decl)


State 1668

  327 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 327 (expr_type_info)


State 1669

  330 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 330 (expr_type_info)


State 1670

  857 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1689


State 1671

  860 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1690


State 1672

  863 make_dim_decl: "array" "variant" '<' $@102 type_declaration_no_options '>' $@103 '(' make_variant_dim ')' .

    $default  reduce using rule 863 (make_dim_decl)


State 1673

  871 make_dim_decl: "fixed_array" '<' $@106 type_declaration_no_options '>' $@107 '(' expr_list optional_comma ')' .

    $default  reduce using rule 871 (make_dim_decl)


State 1674

  849 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 849 (make_tuple_call)


State 1675

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  882 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 882 (array_comprehension_where)


State 1676

  887 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 887 (array_comprehension)


State 1677

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  796 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 796 (make_struct_fields)


State 1678

  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'
  795 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 736
    "as"   shift, and go to state 737
    "<<"   shift, and go to state 746
    ">>"   shift, and go to state 747
    "++"   shift, and go to state 748
    "--"   shift, and go to state 749
    "<="   shift, and go to state 750
    ">="   shift, and go to state 753
    "=="   shift, and go to state 754
    "!="   shift, and go to state 755
    "->"   shift, and go to state 756
    "??"   shift, and go to state 758
    "?."   shift, and go to state 759
    "?["   shift, and go to state 760
    "<|"   shift, and go to state 761
    "|>"   shift, and go to state 762
    "<<<"  shift, and go to state 764
    ">>>"  shift, and go to state 765
    "&&"   shift, and go to state 768
    "||"   shift, and go to state 769
    "^^"   shift, and go to state 770
    ".."   shift, and go to state 774
    '?'    shift, and go to state 776
    '|'    shift, and go to state 777
    '^'    shift, and go to state 778
    '&'    shift, and go to state 779
    '<'    shift, and go to state 780
    '>'    shift, and go to state 781
    '-'    shift, and go to state 782
    '+'    shift, and go to state 783
    '*'    shift, and go to state 784
    '/'    shift, and go to state 785
    '%'    shift, and go to state 786
    '.'    shift, and go to state 787
    '['    shift, and go to state 788

    $default  reduce using rule 795 (make_struct_fields)


State 1679

  888 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 888 (array_comprehension)


State 1680

  890 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 890 (array_comprehension)


State 1681

  253 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 253 (optional_expr_list_in_braces)


State 1682

  886 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 886 (array_comprehension)


State 1683

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  403 expr_method_call: expr . "->" "name" '(' ')'
  404                 | expr . "->" "name" '(' expr_list ')'
  414 expr_field: expr . '.' "name"
  415           | expr . '.' '.' "name"
  416           | expr . '.' "name" '(' ')'
  417           | expr . '.' "name" '(' expr_list ')'
  418           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  419           | expr . '.' basic_type_declaration '(' ')'
  420           | expr . '.' basic_type_declaration '(' expr_list ')'
  423           | expr . '.' $@26 error $@27
  445 expr: expr . "<<" expr
  446     | expr . ">>" expr
  447     | expr . "<<<" expr
  448     | expr . ">>>" expr
  449     | expr . '+' expr
  450     | expr . '-' expr
  451     | expr . '*' expr
  452     | expr . '/' expr
  453     | expr . '%' expr
  454     | expr . '<' expr
  455     | expr . '>' expr
  456     | expr . "==" expr
  457     | expr . "!=" expr
  458     | expr . "<=" expr
  459     | expr . ">=" expr
  460     | expr . '&' expr
  461     | expr . '|' expr
  462     | expr . '^' expr
  463     | expr . "&&" expr
  464     | expr . "||" expr
  465     | expr . "^^" expr
  466     | expr . ".." expr
  469     | expr . "++"
  470     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  485     | expr . "??" expr
  486     | expr . '?' expr ':' expr
  489     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  490     | expr . "is" basic_type_declaration
  491     | expr . "is" "name"
  492     | expr . "as" "name"
  495     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  496     | expr . "as" basic_type_declaration
  497     | expr . '?' "as" "name"
  500     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  501     | expr . '?' "as" basic_type_declaration
  509     | expr . "<|" expr
  510     | expr . "|>" expr
  511     | expr . "|>" basic_type_declaration
  523 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr . "?." "$f" '(' expr ')'
  525          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr . "as" "$f" '(' expr ')'
  528          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 736
    "as"                 shift, and go to state 737
    "<<"                 shift, and go to state 746
    ">>"                 shift, and go to state 747
    "++"                 shift, and go to state 748
    "--"                 shift, and go to state 749
    "<="                 shift, and go to state 750
    ">="                 shift, and go to state 753
    "=="                 shift, and go to state 754
    "!="                 shift, and go to state 755
    "->"                 shift, and go to state 756
    "??"                 shift, and go to state 758
    "?."                 shift, and go to state 759
    "?["                 shift, and go to state 760
    "<|"                 shift, and go to state 761
    "|>"                 shift, and go to state 762
    "<<<"                shift, and go to state 764
    ">>>"                shift, and go to state 765
    "&&"                 shift, and go to state 768
    "||"                 shift, and go to state 769
    "^^"                 shift, and go to state 770
    ".."                 shift, and go to state 774
    "end of expression"  shift, and go to state 1691
    '?'                  shift, and go to state 776
    '|'                  shift, and go to state 777
    '^'                  shift, and go to state 778
    '&'                  shift, and go to state 779
    '<'                  shift, and go to state 780
    '>'                  shift, and go to state 781
    '-'                  shift, and go to state 782
    '+'                  shift, and go to state 783
    '*'                  shift, and go to state 784
    '/'                  shift, and go to state 785
    '%'                  shift, and go to state 786
    '.'                  shift, and go to state 787
    '['                  shift, and go to state 788


State 1684

  309 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 309 (tuple_expansion_variable_declaration)


State 1685

  308 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 308 (tuple_expansion_variable_declaration)


State 1686

  551 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 551 (struct_variable_declaration_list)


State 1687

  801 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 801 (make_struct_dim_list)


State 1688

  802 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 919
    "name"  shift, and go to state 1224

    make_struct_fields  go to state 1692


State 1689

  857 make_dim_decl: "array" "struct" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 857 (make_dim_decl)


State 1690

  860 make_dim_decl: "array" "tuple" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 860 (make_dim_decl)


State 1691

  307 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 307 (tuple_expansion_variable_declaration)


State 1692

  791 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  792                   | make_struct_fields . ',' "name" ":=" expr
  795                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  796                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  802 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1180
    ')'  shift, and go to state 1693


State 1693

  802 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 802 (make_struct_dim_list)
